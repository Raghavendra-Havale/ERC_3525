{
	"id": "3afd8132c13b31428a41faf2c9f32dc4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"./interface/IERC3525MetadataDescriptorUpgradeable.sol\";\nimport \"../extensions/IERC3525MetadataUpgradeable.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract ERC3525MetadataDescriptorUpgradeable is Initializable, IERC3525MetadataDescriptorUpgradeable {\n\n    using Strings for uint256;\n\n    function __ERC3525MetadataDescriptor_init() internal onlyInitializing {\n    }\n\n    function __ERC3525MetadataDescriptor_init_unchained() internal onlyInitializing {\n    }\n    function constructContractURI() external view override returns (string memory) {\n        IERC3525MetadataUpgradeable erc3525 = IERC3525MetadataUpgradeable(msg.sender);\n        return \n            string(\n                abi.encodePacked(\n                    /* solhint-disable */\n                    'data:application/json;base64,',\n                    Base64.encode(\n                        abi.encodePacked(\n                            '{\"name\":\"', \n                            erc3525.name(),\n                            '\",\"description\":\"',\n                            _contractDescription(),\n                            '\",\"image\":\"',\n                            _contractImage(),\n                            '\",\"valueDecimals\":\"', \n                            uint256(erc3525.valueDecimals()).toString(),\n                            '\"}'\n                        )\n                    )\n                    /* solhint-enable */\n                )\n            );\n    }\n\n    function constructSlotURI(uint256 slot_) external view override returns (string memory) {\n        return\n            string(\n                abi.encodePacked(\n                    /* solhint-disable */\n                    'data:application/json;base64,',\n                    Base64.encode(\n                        abi.encodePacked(\n                            '{\"name\":\"', \n                            _slotName(slot_),\n                            '\",\"description\":\"',\n                            _slotDescription(slot_),\n                            '\",\"image\":\"',\n                            _slotImage(slot_),\n                            '\",\"properties\":',\n                            _slotProperties(slot_),\n                            '}'\n                        )\n                    )\n                    /* solhint-enable */\n                )\n            );\n    }\n\n    function constructTokenURI(uint256 tokenId_) external view override returns (string memory) {\n        IERC3525MetadataUpgradeable erc3525 = IERC3525MetadataUpgradeable(msg.sender);\n        return \n            string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(\n                        abi.encodePacked(\n                            /* solhint-disable */\n                            '{\"name\":\"',\n                            _tokenName(tokenId_),\n                            '\",\"description\":\"',\n                            _tokenDescription(tokenId_),\n                            '\",\"image\":\"',\n                            _tokenImage(tokenId_),\n                            '\",\"balance\":\"',\n                            erc3525.balanceOf(tokenId_).toString(),\n                            '\",\"slot\":\"',\n                            erc3525.slotOf(tokenId_).toString(),\n                            '\",\"properties\":',\n                            _tokenProperties(tokenId_),\n                            \"}\"\n                            /* solhint-enable */\n                        )\n                    )\n                )\n            );\n    }\n\n    function _contractDescription() internal view virtual returns (string memory) {\n        return \"SemiFungible token\";\n    }\n\n    function _contractImage() internal view virtual returns (bytes memory) {\n        return \"\";\n    }\n\n    function _slotName(uint256 slot_) internal view virtual returns (string memory) {\n        slot_;\n        return string(\"123\");\n    }\n\n    function _slotDescription(uint256 slot_) internal view virtual returns (string memory) {\n        slot_;\n        return string(\"slot\");\n    }\n\n    function _slotImage(uint256 slot_) internal view virtual returns (bytes memory) {\n        slot_;\n        return \"\";\n    }\n\n    function _slotProperties(uint256 slot_) internal view virtual returns (string memory) {\n        slot_;\n        return \"[]\";\n    }\n\n    function _tokenName(uint256 tokenId_) internal view virtual returns (string memory) {\n        // solhint-disable-next-line\n        return \n            string(\n                abi.encodePacked(\n                    IERC3525MetadataUpgradeable(msg.sender).name(), \n                     tokenId_.toString()\n                )\n            );\n    }\n\n    function _tokenDescription(uint256 tokenId_) internal view virtual returns (string memory) {\n        tokenId_;\n        return string(\"token11\");\n    }\n\n\n    function _tokenImage(uint256 tokenId_) internal view virtual returns (bytes memory) {\n        tokenId_;\n        return \"\";\n    }\n\n    function _tokenProperties(uint256 tokenId_) internal view virtual returns (string memory) {\n        tokenId_;\n        return \"{}\";\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"contracts/extensions/IERC3525MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"../IERC3525Upgradeable.sol\";\nimport \"./IERC721MetadataUpgradeable.sol\";\n\n/**\n * @title ERC-3525 Semi-Fungible Token Standard, optional extension for metadata\n * @dev Interfaces for any contract that wants to support query of the Uniform Resource Identifier\n *  (URI) for the ERC3525 contract as well as a specified slot.\n *  Because of the higher reliability of data stored in smart contracts compared to data stored in\n *  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and\n *  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing\n *  to any resource stored in a centralized system.\n *  See https://eips.ethereum.org/EIPS/eip-3525\n * Note: the ERC-165 identifier for this interface is 0xe1600902.\n */\ninterface IERC3525MetadataUpgradeable is IERC3525Upgradeable, IERC721MetadataUpgradeable {\n    /**\n     * @notice Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract.\n     * @dev This function SHOULD return the URI for this contract in JSON format, starting with\n     *  header `data:application/json;`.\n     *  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.\n     * @return The JSON formatted URI of the current ERC3525 contract\n     */\n    function contractURI() external view returns (string memory);\n\n    /**\n     * @notice Returns the Uniform Resource Identifier (URI) for the specified slot.\n     * @dev This function SHOULD return the URI for `_slot` in JSON format, starting with header\n     *  `data:application/json;`.\n     *  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.\n     * @return The JSON formatted URI of `_slot`\n     */\n    function slotURI(uint256 _slot) external view returns (string memory);\n}\n"
			},
			"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IERC3525MetadataDescriptorUpgradeable {\n\n    function constructContractURI() external view returns (string memory);\n\n    function constructSlotURI(uint256 slot) external view returns (string memory);\n    \n    function constructTokenURI(uint256 tokenId) external view returns (string memory);\n\n}"
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 32)\n\n            // Run over the input, 3 bytes at a time\n            for {\n                let dataPtr := data\n                let endPtr := add(data, mload(data))\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 bytes (18 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F which is the number of\n                // the previous character in the ASCII table prior to the Base64 Table\n                // The result is then added to the table to get the character to write,\n                // and finally write it in the result pointer but with a left shift\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"contracts/extensions/IERC721MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"../IERC721Upgradeable.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n *  Note: the ERC-165 identifier for this interface is 0x5b5e139f.\n */\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\n    /**\n     * @notice A descriptive name for a collection of NFTs in this contract\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @notice An abbreviated name for NFTs in this contract\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n     * @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n     *  3986. The URI may point to a JSON file that conforms to the \"ERC721\n     *  Metadata JSON Schema\".\n     */\n    function tokenURI(uint256 _tokenId) external view returns (string memory);\n}\n"
			},
			"contracts/IERC3525Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"./IERC721Upgradeable.sol\";\n\n/**\n * @title ERC-3525 Semi-Fungible Token Standard\n * @dev See https://eips.ethereum.org/EIPS/eip-3525\n * Note: the ERC-165 identifier for this interface is 0xd5358140.\n */\ninterface IERC3525Upgradeable is IERC165, IERC721Upgradeable {\n    /**\n     * @dev MUST emit when value of a token is transferred to another token with the same slot,\n     *  including zero value transfers (_value == 0) as well as transfers when tokens are created\n     *  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\n     * @param _fromTokenId The token id to transfer value from\n     * @param _toTokenId The token id to transfer value to\n     * @param _value The transferred value\n     */\n    event TransferValue(uint256 indexed _fromTokenId, uint256 indexed _toTokenId, uint256 _value);\n\n    /**\n     * @dev MUST emits when the approval value of a token is set or changed.\n     * @param _tokenId The token to approve\n     * @param _operator The operator to approve for\n     * @param _value The maximum value that `_operator` is allowed to manage\n     */\n    event ApprovalValue(uint256 indexed _tokenId, address indexed _operator, uint256 _value);\n\n    /**\n     * @dev MUST emit when the slot of a token is set or changed.\n     * @param _tokenId The token of which slot is set or changed\n     * @param _oldSlot The previous slot of the token\n     * @param _newSlot The updated slot of the token\n     */ \n    event SlotChanged(uint256 indexed _tokenId, uint256 indexed _oldSlot, uint256 indexed _newSlot);\n\n    /**\n     * @notice Get the number of decimals the token uses for value - e.g. 6, means the user\n     *  representation of the value of a token can be calculated by dividing it by 1,000,000.\n     *  Considering the compatibility with third-party wallets, this function is defined as\n     *  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\n     * @return The number of decimals for value\n     */\n    function valueDecimals() external view returns (uint8);\n\n    /**\n     * @notice Get the value of a token.\n     * @param _tokenId The token for which to query the balance\n     * @return The value of `_tokenId`\n     */\n    function balanceOf(uint256 _tokenId) external view returns (uint256);\n\n    /**\n     * @notice Get the slot of a token.\n     * @param _tokenId The identifier for a token\n     * @return The slot of the token\n     */\n    function slotOf(uint256 _tokenId) external view returns (uint256);\n\n    /**\n     * @notice Allow an operator to manage the value of a token, up to the `_value` amount.\n     * @dev MUST revert unless caller is the current owner, an authorized operator, or the approved\n     *  address for `_tokenId`.\n     *  MUST emit ApprovalValue event.\n     * @param _tokenId The token to approve\n     * @param _operator The operator to be approved\n     * @param _value The maximum value of `_toTokenId` that `_operator` is allowed to manage\n     */\n    function approve(\n        uint256 _tokenId,\n        address _operator,\n        uint256 _value\n    ) external payable;\n\n    /**\n     * @notice Get the maximum value of a token that an operator is allowed to manage.\n     * @param _tokenId The token for which to query the allowance\n     * @param _operator The address of an operator\n     * @return The current approval value of `_tokenId` that `_operator` is allowed to manage\n     */\n    function allowance(uint256 _tokenId, address _operator) external view returns (uint256);\n\n    /**\n     * @notice Transfer value from a specified token to another specified token with the same slot.\n     * @dev Caller MUST be the current owner, an authorized operator or an operator who has been\n     *  approved the whole `_fromTokenId` or part of it.\n     *  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.\n     *  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.\n     *  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n     *  operator.\n     *  MUST emit `TransferValue` event.\n     * @param _fromTokenId The token to transfer value from\n     * @param _toTokenId The token to transfer value to\n     * @param _value The transferred value\n     */\n    function transferFrom(\n        uint256 _fromTokenId,\n        uint256 _toTokenId,\n        uint256 _value\n    ) external payable;\n\n    /**\n     * @notice Transfer value from a specified token to an address. The caller should confirm that\n     *  `_to` is capable of receiving ERC3525 tokens.\n     * @dev This function MUST create a new ERC3525 token with the same slot for `_to` to receive\n     *  the transferred value.\n     *  MUST revert if `_fromTokenId` is zero token id or does not exist.\n     *  MUST revert if `_to` is zero address.\n     *  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n     *  operator.\n     *  MUST emit `Transfer` and `TransferValue` events.\n     * @param _fromTokenId The token to transfer value from\n     * @param _to The address to transfer value to\n     * @param _value The transferred value\n     * @return ID of the new token created for `_to` which receives the transferred value\n     */\n    function transferFrom(\n        uint256 _fromTokenId,\n        address _to,\n        uint256 _value\n    ) external payable returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"contracts/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/** \n * @title ERC-721 Non-Fungible Token Standard\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n *  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\n */\ninterface IERC721Upgradeable is IERC165 {\n    /** \n     * @dev This emits when ownership of any NFT changes by any mechanism.\n     *  This event emits when NFTs are created (`from` == 0) and destroyed\n     *  (`to` == 0). Exception: during contract creation, any number of NFTs\n     *  may be created and assigned without emitting Transfer. At the time of\n     *  any transfer, the approved address for that NFT (if any) is reset to none.\n     */\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n\n    /**\n     * @dev This emits when the approved address for an NFT is changed or\n     *  reaffirmed. The zero address indicates there is no approved address.\n     *  When a Transfer event emits, this also indicates that the approved\n     *  address for that NFT (if any) is reset to none.\n     */\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n\n    /**\n     * @dev This emits when an operator is enabled or disabled for an owner.\n     *  The operator can manage all NFTs of the owner.\n     */\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    /**\n     * @notice Count all NFTs assigned to an owner\n     * @dev NFTs assigned to the zero address are considered invalid, and this\n     *  function throws for queries about the zero address.\n     * @param _owner An address for whom to query the balance\n     * @return The number of NFTs owned by `_owner`, possibly zero\n     */\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /**\n     * @notice Find the owner of an NFT\n     * @dev NFTs assigned to zero address are considered invalid, and queries\n     *  about them do throw.\n     * @param _tokenId The identifier for an NFT\n     * @return The address of the owner of the NFT\n     */\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT. When transfer is complete, this function\n     *  checks if `_to` is a smart contract (code size > 0). If so, it calls\n     *  `onERC721Received` on `_to` and throws if the return value is not\n     *  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     * @param data Additional data with no specified format, sent in call to `_to`\n     */\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata data) external payable;\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev This works identically to the other function with an extra data parameter,\n     *  except this function just sets data to \"\".\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     */\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n     *  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n     *  THEY MAY BE PERMANENTLY LOST\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT.\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     */\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Change or reaffirm the approved address for an NFT\n     * @dev The zero address indicates there is no approved address.\n     *  Throws unless `msg.sender` is the current NFT owner, or an authorized\n     *  operator of the current owner.\n     * @param _approved The new approved NFT controller\n     * @param _tokenId The NFT to approve\n     */\n    function approve(address _approved, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Enable or disable approval for a third party (\"operator\") to manage\n     *  all of `msg.sender`'s assets\n     * @dev Emits the ApprovalForAll event. The contract MUST allow\n     *  multiple operators per owner.\n     * @param _operator Address to add to the set of authorized operators\n     * @param _approved True if the operator is approved, false to revoke approval\n     */\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    /**\n     * @notice Get the approved address for a single NFT\n     * @dev Throws if `_tokenId` is not a valid NFT.\n     * @param _tokenId The NFT to find the approved address for\n     * @return The approved address for this NFT, or the zero address if there is none\n     */\n    function getApproved(uint256 _tokenId) external view returns (address);\n\n    /**\n     * @notice Query if an address is an authorized operator for another address\n     * @param _owner The address that owns the NFTs\n     * @param _operator The address that acts on behalf of the owner\n     * @return True if `_operator` is an approved operator for `_owner`, false otherwise\n     */\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"Base64": {
					"abi": [],
					"devdoc": {
						"details": "Provides a set of functions to operate with Base64 strings.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_TABLE": {
								"details": "Base64 Encoding/Decoding Table"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3504  library Base64 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3504  library Base64 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d5b257b937e86def595e0d6873fb04265c3b852f28d51ae867f0050382dff3b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d5b257b937e86def595e0d6873fb04265c3b852f28d51ae867f0050382dff3b64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD JUMPDEST 0x25 PUSH28 0x937E86DEF595E0D6873FB04265C3B852F28D51AE867F0050382DFF3B PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "202:3302:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:3302:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d5b257b937e86def595e0d6873fb04265c3b852f28d51ae867f0050382dff3b64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD JUMPDEST 0x25 PUSH28 0x937E86DEF595E0D6873FB04265C3B852F28D51AE867F0050382DFF3B PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "202:3302:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"encode(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d5b257b937e86def595e0d6873fb04265c3b852f28d51ae867f0050382dff3b64736f6c63430008180033",
									".code": [
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525Upgradeable.sol",
								"contracts/IERC721Upgradeable.sol",
								"contracts/extensions/IERC3525MetadataUpgradeable.sol",
								"contracts/extensions/IERC721MetadataUpgradeable.sol",
								"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x6f7014d688c4386c26e8c02371ecb7f7740d2542f1ecadffd5a3084511e2a344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d8f5aabdb088f19c80ce460a2e670ecc651ff4ca46878d239e29bfe705e52c\",\"dweb:/ipfs/QmUveDGa7vEtYBxbVUajNcDvyjP6oaD7Va1M5qwZbudmAn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e714fd1851acca2ba889e775783275b27aabac8957e48479e9e4712898d8bfcb64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e714fd1851acca2ba889e775783275b27aabac8957e48479e9e4712898d8bfcb64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 EQ REVERT XOR MLOAD 0xAC 0xCA 0x2B 0xA8 DUP10 0xE7 PUSH22 0x783275B27AABAC8957E48479E9E4712898D8BFCB6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "251:2847:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e714fd1851acca2ba889e775783275b27aabac8957e48479e9e4712898d8bfcb64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 EQ REVERT XOR MLOAD 0xAC 0xCA 0x2B 0xA8 DUP10 0xE7 PUSH22 0x783275B27AABAC8957E48479E9E4712898D8BFCB6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "251:2847:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e714fd1851acca2ba889e775783275b27aabac8957e48479e9e4712898d8bfcb64736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525Upgradeable.sol",
								"contracts/IERC721Upgradeable.sol",
								"contracts/extensions/IERC3525MetadataUpgradeable.sol",
								"contracts/extensions/IERC721MetadataUpgradeable.sol",
								"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220348d8b4bdc345355458e6d6f91114e7babced2fc3b8769cb96d2ca382f38cbaa64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220348d8b4bdc345355458e6d6f91114e7babced2fc3b8769cb96d2ca382f38cbaa64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE DUP14 DUP12 0x4B 0xDC CALLVALUE MSTORE8 SSTORE GASLIMIT DUP15 PUSH14 0x6F91114E7BABCED2FC3B8769CB96 0xD2 0xCA CODESIZE 0x2F CODESIZE 0xCB 0xAA PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220348d8b4bdc345355458e6d6f91114e7babced2fc3b8769cb96d2ca382f38cbaa64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE DUP14 DUP12 0x4B 0xDC CALLVALUE MSTORE8 SSTORE GASLIMIT DUP15 PUSH14 0x6F91114E7BABCED2FC3B8769CB96 0xD2 0xCA CODESIZE 0x2F CODESIZE 0xCB 0xAA PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220348d8b4bdc345355458e6d6f91114e7babced2fc3b8769cb96d2ca382f38cbaa64736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525Upgradeable.sol",
								"contracts/IERC721Upgradeable.sol",
								"contracts/extensions/IERC3525MetadataUpgradeable.sol",
								"contracts/extensions/IERC721MetadataUpgradeable.sol",
								"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f4e6b44810c490638c8a12635594745a93fdb9d03e97e92a8ca8df4976b636e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4e6b44810c490638c8a12635594745a93fdb9d03e97e92a8ca8df4976b636e64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4E PUSH12 0x44810C490638C8A126355947 GASLIMIT 0xA9 EXTCODEHASH 0xDB SWAP14 SUB 0xE9 PUSH31 0x92A8CA8DF4976B636E64736F6C634300081800330000000000000000000000 ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4e6b44810c490638c8a12635594745a93fdb9d03e97e92a8ca8df4976b636e64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4E PUSH12 0x44810C490638C8A126355947 GASLIMIT 0xA9 EXTCODEHASH 0xDB SWAP14 SUB 0xE9 PUSH31 0x92A8CA8DF4976B636E64736F6C634300081800330000000000000000000000 ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f4e6b44810c490638c8a12635594745a93fdb9d03e97e92a8ca8df4976b636e64736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525Upgradeable.sol",
								"contracts/IERC721Upgradeable.sol",
								"contracts/extensions/IERC3525MetadataUpgradeable.sol",
								"contracts/extensions/IERC721MetadataUpgradeable.sol",
								"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC3525Upgradeable.sol": {
				"IERC3525Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xd5358140.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"title": "ERC-3525 Semi-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"slotOf(uint256)": "263f3e7e",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xd5358140.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC3525Upgradeable.sol\":\"IERC3525Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC3525Upgradeable.sol\":{\"keccak256\":\"0x6735117e768e23449716c0731a3d9b6ce272a3baab429a550efddadc92bb32cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://905eb0442bb6d2effe9999ebe555d8c645a1203aef734387d9ad3c8a78866573\",\"dweb:/ipfs/QmaP28QdxdfjwoyCSpD366TyZMcivKJn4xgpgS9Kwj9Suv\"]},\"contracts/IERC721Upgradeable.sol\":{\"keccak256\":\"0x01c55b4cb358f8b123a28de104ae771d27d40514d6c1ea0bb0fc256f805195e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab4dfd72e1d1e5cf4f2823f877335a8c7a3a7a6e20d9261b8970a947893dbb1\",\"dweb:/ipfs/QmPStyDfyF6WzftUAdqpk82iAMQ75RSaZzWU4tt8qf736i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC721Upgradeable.sol\":{\"keccak256\":\"0x01c55b4cb358f8b123a28de104ae771d27d40514d6c1ea0bb0fc256f805195e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab4dfd72e1d1e5cf4f2823f877335a8c7a3a7a6e20d9261b8970a947893dbb1\",\"dweb:/ipfs/QmPStyDfyF6WzftUAdqpk82iAMQ75RSaZzWU4tt8qf736i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/extensions/IERC3525MetadataUpgradeable.sol": {
				"IERC3525MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								}
							],
							"name": "slotURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interfaces for any contract that wants to support query of the Uniform Resource Identifier  (URI) for the ERC3525 contract as well as a specified slot.  Because of the higher reliability of data stored in smart contracts compared to data stored in  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing  to any resource stored in a centralized system.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xe1600902.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"contractURI()": {
								"details": "This function SHOULD return the URI for this contract in JSON format, starting with  header `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.",
								"returns": {
									"_0": "The JSON formatted URI of the current ERC3525 contract"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"slotURI(uint256)": {
								"details": "This function SHOULD return the URI for `_slot` in JSON format, starting with header  `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.",
								"returns": {
									"_0": "The JSON formatted URI of `_slot`"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenURI(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \"ERC721  Metadata JSON Schema\"."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"title": "ERC-3525 Semi-Fungible Token Standard, optional extension for metadata",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"contractURI()": "e8a3d485",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"slotOf(uint256)": "263f3e7e",
							"slotURI(uint256)": "09c3dd87",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"}],\"name\":\"slotURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interfaces for any contract that wants to support query of the Uniform Resource Identifier  (URI) for the ERC3525 contract as well as a specified slot.  Because of the higher reliability of data stored in smart contracts compared to data stored in  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing  to any resource stored in a centralized system.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xe1600902.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"contractURI()\":{\"details\":\"This function SHOULD return the URI for this contract in JSON format, starting with  header `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.\",\"returns\":{\"_0\":\"The JSON formatted URI of the current ERC3525 contract\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"slotURI(uint256)\":{\"details\":\"This function SHOULD return the URI for `_slot` in JSON format, starting with header  `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.\",\"returns\":{\"_0\":\"The JSON formatted URI of `_slot`\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \\\"ERC721  Metadata JSON Schema\\\".\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard, optional extension for metadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"contractURI()\":{\"notice\":\"Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"slotURI(uint256)\":{\"notice\":\"Returns the Uniform Resource Identifier (URI) for the specified slot.\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC3525MetadataUpgradeable.sol\":\"IERC3525MetadataUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC3525Upgradeable.sol\":{\"keccak256\":\"0x6735117e768e23449716c0731a3d9b6ce272a3baab429a550efddadc92bb32cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://905eb0442bb6d2effe9999ebe555d8c645a1203aef734387d9ad3c8a78866573\",\"dweb:/ipfs/QmaP28QdxdfjwoyCSpD366TyZMcivKJn4xgpgS9Kwj9Suv\"]},\"contracts/IERC721Upgradeable.sol\":{\"keccak256\":\"0x01c55b4cb358f8b123a28de104ae771d27d40514d6c1ea0bb0fc256f805195e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab4dfd72e1d1e5cf4f2823f877335a8c7a3a7a6e20d9261b8970a947893dbb1\",\"dweb:/ipfs/QmPStyDfyF6WzftUAdqpk82iAMQ75RSaZzWU4tt8qf736i\"]},\"contracts/extensions/IERC3525MetadataUpgradeable.sol\":{\"keccak256\":\"0x9ba530840b3eb25b4175cf8423c0cfe8d2da75d8c4dc88ecf85204a8940d047e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94e61fa49eda2bf457ad69f6fca4ab70cbbac78c7df35b50c705333b0e90368a\",\"dweb:/ipfs/QmQhvs1NkY3oMGx2WCmTkCR1ZtzpKYKeEZirhLWrKAEXkx\"]},\"contracts/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x94599f6f4e0106919c549625cf71353ea433cf47837ecbc33ce57a81d5c65b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66ab447a9cd0241771098ee3363755b8ceb29ba45e2593ba054c871a342aef44\",\"dweb:/ipfs/QmPx5tH4E3MM6K52ANV1s8zF5xbBgtok5F43uybc5BS9GF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"contractURI()": {
								"notice": "Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"name()": {
								"notice": "A descriptive name for a collection of NFTs in this contract"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"slotURI(uint256)": {
								"notice": "Returns the Uniform Resource Identifier (URI) for the specified slot."
							},
							"symbol()": {
								"notice": "An abbreviated name for NFTs in this contract"
							},
							"tokenURI(uint256)": {
								"notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/extensions/IERC721MetadataUpgradeable.sol": {
				"IERC721MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x5b5e139f.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenURI(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \"ERC721  Metadata JSON Schema\"."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x5b5e139f.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \\\"ERC721  Metadata JSON Schema\\\".\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC721MetadataUpgradeable.sol\":\"IERC721MetadataUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC721Upgradeable.sol\":{\"keccak256\":\"0x01c55b4cb358f8b123a28de104ae771d27d40514d6c1ea0bb0fc256f805195e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab4dfd72e1d1e5cf4f2823f877335a8c7a3a7a6e20d9261b8970a947893dbb1\",\"dweb:/ipfs/QmPStyDfyF6WzftUAdqpk82iAMQ75RSaZzWU4tt8qf736i\"]},\"contracts/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x94599f6f4e0106919c549625cf71353ea433cf47837ecbc33ce57a81d5c65b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66ab447a9cd0241771098ee3363755b8ceb29ba45e2593ba054c871a342aef44\",\"dweb:/ipfs/QmPx5tH4E3MM6K52ANV1s8zF5xbBgtok5F43uybc5BS9GF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"name()": {
								"notice": "A descriptive name for a collection of NFTs in this contract"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"symbol()": {
								"notice": "An abbreviated name for NFTs in this contract"
							},
							"tokenURI(uint256)": {
								"notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol": {
				"ERC3525MetadataDescriptorUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "constructContractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "slot_",
									"type": "uint256"
								}
							],
							"name": "constructSlotURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "constructTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":379:5609  contract ERC3525MetadataDescriptorUpgradeable is Initializable, IERC3525MetadataDescriptorUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":379:5609  contract ERC3525MetadataDescriptorUpgradeable is Initializable, IERC3525MetadataDescriptorUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c037f8a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x725fa09c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x894b4c2e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1672:2541  function constructSlotURI(uint256 slot_) external view override returns (string memory) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":695:1666  function constructContractURI() external view override returns (string memory) {... */\n    tag_4:\n      tag_6\n      tag_13\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2547:3759  function constructTokenURI(uint256 tokenId_) external view override returns (string memory) {... */\n    tag_5:\n      tag_6\n      tag_16\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1672:2541  function constructSlotURI(uint256 slot_) external view override returns (string memory) {... */\n    tag_9:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1745:1758  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1946:2461  Base64.encode(... */\n      tag_20\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2073:2089  _slotName(slot_) */\n      tag_21\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4108:4121  string(\"123\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      mstore\n      shl(0xe8, 0x313233)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3996:4128  function _slotName(uint256 slot_) internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2073:2089  _slotName(slot_) */\n    tag_21:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4253:4267  string(\"slot\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe2, 0x1cdb1bdd)\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4385:4394  return \"\" */\n      dup3\n      mload\n      dup1\n      dup3\n      add\n      dup5\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4518:4529  return \"[]\" */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      dup6\n      mstore\n      0x02\n      dup2\n      mstore\n      shl(0xf0, 0x5b5d)\n      dup2\n      dup5\n      add\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1985:2439  abi.encodePacked(... */\n      swap4\n      mload\n      tag_29\n      swap6\n      swap5\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4385:4394  return \"\" */\n      swap2\n      swap3\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1985:2439  abi.encodePacked(... */\n      add\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1946:1959  Base64.encode */\n      tag_31\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1946:2461  Base64.encode(... */\n      jump\t// in\n    tag_20:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1813:2520  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1770:2534  return... */\n      swap1\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1672:2541  function constructSlotURI(uint256 slot_) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":695:1666  function constructContractURI() external view override returns (string memory) {... */\n    tag_13:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":759:772  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":784:819  IERC3525MetadataUpgradeable erc3525 */\n      0x00\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":850:860  msg.sender */\n      caller\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":784:861  IERC3525MetadataUpgradeable erc3525 = IERC3525MetadataUpgradeable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1048:1586  Base64.encode(... */\n      tag_35\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1175:1182  erc3525 */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1175:1187  erc3525.name */\n      and\n      0x06fdde03\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1175:1189  erc3525.name() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_38\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3853:3880  return \"SemiFungible token\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x12\n      dup2\n      mstore\n      shl(0x71, 0x29b2b6b4a33ab733b4b13632903a37b5b2b7)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3974:3983  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1461:1504  uint256(erc3525.valueDecimals()).toString() */\n      tag_44\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1469:1476  erc3525 */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1469:1490  erc3525.valueDecimals */\n      and\n      0x3e7e8669\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1469:1492  erc3525.valueDecimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1461:1493  uint256(erc3525.valueDecimals()) */\n      0xff\n      and\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1461:1502  uint256(erc3525.valueDecimals()).toString */\n      tag_49\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1461:1504  uint256(erc3525.valueDecimals()).toString() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1087:1564  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_29\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":1048:1586  Base64.encode(... */\n    tag_35:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":915:1645  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":871:1659  return ... */\n      swap2\n      pop\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":695:1666  function constructContractURI() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2547:3759  function constructTokenURI(uint256 tokenId_) external view override returns (string memory) {... */\n    tag_17:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2624:2637  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2715:2725  msg.sender */\n      caller\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2871:3720  Base64.encode(... */\n      tag_54\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3047:3067  _tokenName(tokenId_) */\n      tag_55\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3058:3066  tokenId_ */\n      dup5\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3047:3057  _tokenName */\n      tag_56\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3047:3067  _tokenName(tokenId_) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":5015:5032  string(\"token11\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x07\n      dup2\n      mstore\n      shl(0xc8, 0x746f6b656e3131)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4385:4394  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3342:3369  erc3525.balanceOf(tokenId_) */\n      mload(0x40)\n      shl(0xe3, 0x1398fee1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6783:6808   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3342:3380  erc3525.balanceOf(tokenId_).toString() */\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3342:3359  erc3525.balanceOf */\n      dup8\n      and\n      swap1\n      0x9cc7f708\n      swap1\n        /* \"#utility.yul\":6756:6774   */\n      0x24\n      add\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3342:3369  erc3525.balanceOf(tokenId_) */\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3342:3378  erc3525.balanceOf(tokenId_).toString */\n      tag_49\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3342:3380  erc3525.balanceOf(tokenId_).toString() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3452:3476  erc3525.slotOf(tokenId_) */\n      mload(0x40)\n      shl(0xe1, 0x131f9f3f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6783:6808   */\n      dup10\n      swap1\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3452:3487  erc3525.slotOf(tokenId_).toString() */\n      tag_68\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3452:3466  erc3525.slotOf */\n      dup9\n      and\n      swap1\n      0x263f3e7e\n      swap1\n        /* \"#utility.yul\":6756:6774   */\n      0x24\n      add\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3452:3476  erc3525.slotOf(tokenId_) */\n      tag_62\n        /* \"#utility.yul\":6637:6814   */\n      jump\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":3452:3487  erc3525.slotOf(tokenId_).toString() */\n    tag_68:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":5298:5309  return \"{}\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup2\n      mstore\n      shl(0xf0, 0x7b7d)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2910:3698  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_29\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2871:3720  Base64.encode(... */\n    tag_54:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2780:3738  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2736:3752  return ... */\n      swap2\n      pop\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":2547:3759  function constructTokenURI(uint256 tokenId_) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":534:547  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:770  data */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:777  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":781:782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:782  data.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n      tag_83\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":784:793  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:862  string memory table */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":865:871  _TABLE */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x40\n      dup2\n      mstore\n      0x20\n      add\n      data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce\n      0x40\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:871  string memory table = _TABLE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1294  string memory result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1333:1334  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1318  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1325  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1328:1329  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1329  data.length + 2 */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1313:1334  (data.length + 2) / 3 */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_88\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1309  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1297:1336  new string(4 * ((data.length + 2) / 3)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_91\n      jumpi\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_93:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1336  string memory result = new string(4 * ((data.length + 2) / 3)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1511:1512  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1504:1509  table */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1500:1513  add(table, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1612:1614  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1604:1610  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1600:1615  add(result, 32) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1719:1723  data */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1770:1774  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1764:1775  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1758:1762  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1754:1776  add(data, mload(data)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1803:1809  endPtr */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1794:1801  dataPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1791:1810  lt(dataPtr, endPtr) */\n      lt\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1905:1906  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1896:1903  dataPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1892:1907  add(dataPtr, 3) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1881:1907  dataPtr := add(dataPtr, 3) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1943:1950  dataPtr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1937:1951  mload(dataPtr) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2586:2590  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2578:2583  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2574:2576  18 */\n      0x12\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2570:2584  shr(18, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2566:2591  and(shr(18, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2556:2564  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2552:2592  add(tablePtr, and(shr(18, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2546:2593  mload(add(tablePtr, and(shr(18, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2535:2544  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2527:2594  mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2639:2640  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2628:2637  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2624:2641  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2611:2641  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2729:2733  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2721:2726  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2717:2719  12 */\n      0x0c\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2713:2727  shr(12, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2709:2734  and(shr(12, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2699:2707  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2695:2735  add(tablePtr, and(shr(12, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2689:2736  mload(add(tablePtr, and(shr(12, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2678:2687  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2670:2737  mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2782:2783  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2771:2780  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2767:2784  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2754:2784  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2871:2875  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2863:2868  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2860:2861  6 */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2856:2869  shr(6, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2852:2876  and(shr(6, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2842:2850  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2838:2877  add(tablePtr, and(shr(6, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2832:2878  mload(add(tablePtr, and(shr(6, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2821:2830  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2813:2879  mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2924:2925  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2913:2922  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2909:2926  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2896:2926  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3005:3009  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2998:3003  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2994:3010  and(input, 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2984:2992  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2980:3011  add(tablePtr, and(input, 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2974:3012  mload(add(tablePtr, and(input, 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2963:2972  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2955:3013  mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F)))) */\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3058:3059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3047:3056  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3043:3060  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3030:3060  resultPtr := add(resultPtr, 1) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n      jump(tag_94)\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1686:1790  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3243:3244  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3236:3240  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3230:3241  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3226:3245  mod(mload(data), 3) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3263:3264  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n      dup2\n      eq\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3396:3397  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3391:3462  case 2 {... */\n      dup2\n      eq\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3219:3462  switch mod(mload(data), 3)... */\n      jump(tag_97)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3310:3314  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3306:3307  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3295:3304  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3291:3308  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3283:3315  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3359:3363  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3355:3356  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3344:3353  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3340:3357  sub(resultPtr, 2) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3332:3364  mstore8(sub(resultPtr, 2), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n      jump(tag_97)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3391:3462  case 2 {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3443:3447  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3439:3440  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3428:3437  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3424:3441  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3416:3448  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3219:3462  switch mod(mload(data), 3)... */\n    tag_97:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3489:3495  result */\n      swap2\n      swap6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_106\n      tag_92\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_107:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_108:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4542:4883  function _tokenName(uint256 tokenId_) internal view virtual returns (string memory) {... */\n    tag_56:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4611:4624  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4783:4793  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4755:4799  IERC3525MetadataUpgradeable(msg.sender).name */\n      and\n      0x06fdde03\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4755:4801  IERC3525MetadataUpgradeable(msg.sender).name() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_117\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_39\n      jump\t// in\n    tag_117:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4825:4844  tokenId_.toString() */\n      tag_118\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4825:4833  tokenId_ */\n      dup4\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4825:4842  tokenId_.toString */\n      tag_49\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4825:4844  tokenId_.toString() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":4717:4862  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_125\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_8:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_151:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:449   */\n    tag_144:\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:407   */\n    tag_153:\n        /* \"#utility.yul\":308:314   */\n      dup4\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:407   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":384:395   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":378:396   */\n      mload\n        /* \"#utility.yul\":365:376   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":358:397   */\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":323:333   */\n      add\n        /* \"#utility.yul\":294:407   */\n      jump(tag_153)\n    tag_155:\n      pop\n      pop\n        /* \"#utility.yul\":441:442   */\n      0x00\n        /* \"#utility.yul\":423:439   */\n      swap2\n      add\n        /* \"#utility.yul\":416:443   */\n      mstore\n        /* \"#utility.yul\":199:449   */\n      jump\t// out\n        /* \"#utility.yul\":454:850   */\n    tag_11:\n        /* \"#utility.yul\":603:605   */\n      0x20\n        /* \"#utility.yul\":592:601   */\n      dup2\n        /* \"#utility.yul\":585:606   */\n      mstore\n        /* \"#utility.yul\":566:570   */\n      0x00\n        /* \"#utility.yul\":635:641   */\n      dup3\n        /* \"#utility.yul\":629:642   */\n      mload\n        /* \"#utility.yul\":678:684   */\n      dup1\n        /* \"#utility.yul\":673:675   */\n      0x20\n        /* \"#utility.yul\":662:671   */\n      dup5\n        /* \"#utility.yul\":658:676   */\n      add\n        /* \"#utility.yul\":651:685   */\n      mstore\n        /* \"#utility.yul\":694:773   */\n      tag_157\n        /* \"#utility.yul\":766:772   */\n      dup2\n        /* \"#utility.yul\":761:763   */\n      0x40\n        /* \"#utility.yul\":750:759   */\n      dup6\n        /* \"#utility.yul\":746:764   */\n      add\n        /* \"#utility.yul\":741:743   */\n      0x20\n        /* \"#utility.yul\":733:739   */\n      dup8\n        /* \"#utility.yul\":729:744   */\n      add\n        /* \"#utility.yul\":694:773   */\n      tag_144\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":834:836   */\n      0x1f\n        /* \"#utility.yul\":813:828   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":809:838   */\n      and\n        /* \"#utility.yul\":794:839   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":841:843   */\n      0x40\n        /* \"#utility.yul\":790:844   */\n      add\n      swap3\n        /* \"#utility.yul\":454:850   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":855:1053   */\n    tag_145:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":950:1015   */\n      tag_159\n        /* \"#utility.yul\":1008:1014   */\n      dup2\n        /* \"#utility.yul\":1003:1006   */\n      dup6\n        /* \"#utility.yul\":996:1000   */\n      0x20\n        /* \"#utility.yul\":989:994   */\n      dup7\n        /* \"#utility.yul\":985:1001   */\n      add\n        /* \"#utility.yul\":950:1015   */\n      tag_144\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1031:1047   */\n      swap3\n      swap1\n      swap3\n      add\n      swap3\n        /* \"#utility.yul\":855:1053   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1336:3083   */\n    tag_30:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":2132:2175   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2198:2211   */\n      dup5\n      mload\n        /* \"#utility.yul\":2114:2117   */\n      0x00\n      swap1\n        /* \"#utility.yul\":2220:2294   */\n      tag_163\n        /* \"#utility.yul\":2198:2211   */\n      dup2\n        /* \"#utility.yul\":2283:2284   */\n      0x09\n        /* \"#utility.yul\":2274:2285   */\n      dup6\n      add\n        /* \"#utility.yul\":2267:2271   */\n      0x20\n        /* \"#utility.yul\":2255:2272   */\n      dup11\n      add\n        /* \"#utility.yul\":2220:2294   */\n      tag_144\n      jump\t// in\n    tag_163:\n      shl(0x79, 0x1116113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":2353:2354   */\n      0x09\n        /* \"#utility.yul\":2313:2329   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":2345:2355   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2338:2404   */\n      mstore\n        /* \"#utility.yul\":2429:2442   */\n      dup6\n      mload\n        /* \"#utility.yul\":2451:2527   */\n      tag_164\n        /* \"#utility.yul\":2429:2442   */\n      dup2\n        /* \"#utility.yul\":2513:2515   */\n      0x1a\n        /* \"#utility.yul\":2505:2516   */\n      dup5\n      add\n        /* \"#utility.yul\":2498:2502   */\n      0x20\n        /* \"#utility.yul\":2486:2503   */\n      dup11\n      add\n        /* \"#utility.yul\":2451:2527   */\n      tag_144\n      jump\t// in\n    tag_164:\n      shl(0xa9, 0x11161134b6b0b3b2911d11)\n        /* \"#utility.yul\":2587:2589   */\n      0x1a\n        /* \"#utility.yul\":2546:2563   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2579:2590   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2572:2627   */\n      mstore\n        /* \"#utility.yul\":2652:2665   */\n      dup5\n      mload\n        /* \"#utility.yul\":2674:2750   */\n      tag_165\n        /* \"#utility.yul\":2652:2665   */\n      dup2\n        /* \"#utility.yul\":2736:2738   */\n      0x25\n        /* \"#utility.yul\":2728:2739   */\n      dup5\n      add\n        /* \"#utility.yul\":2721:2725   */\n      0x20\n        /* \"#utility.yul\":2709:2726   */\n      dup10\n      add\n        /* \"#utility.yul\":2674:2750   */\n      tag_144\n      jump\t// in\n    tag_165:\n      shl(0x89, 0x111611383937b832b93a34b2b9911d)\n        /* \"#utility.yul\":2810:2812   */\n      0x25\n        /* \"#utility.yul\":2769:2786   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2802:2813   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2795:2858   */\n      mstore\n        /* \"#utility.yul\":2883:2896   */\n      dup4\n      mload\n        /* \"#utility.yul\":2905:2981   */\n      tag_166\n        /* \"#utility.yul\":2883:2896   */\n      dup2\n        /* \"#utility.yul\":2967:2969   */\n      0x34\n        /* \"#utility.yul\":2959:2970   */\n      dup5\n      add\n        /* \"#utility.yul\":2952:2956   */\n      0x20\n        /* \"#utility.yul\":2940:2957   */\n      dup9\n      add\n        /* \"#utility.yul\":2905:2981   */\n      tag_144\n      jump\t// in\n    tag_166:\n      shl(0xf8, 0x7d)\n        /* \"#utility.yul\":3041:3043   */\n      0x34\n        /* \"#utility.yul\":3000:3017   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3033:3044   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3026:3050   */\n      mstore\n        /* \"#utility.yul\":3074:3076   */\n      0x35\n        /* \"#utility.yul\":3066:3077   */\n      add\n      swap7\n        /* \"#utility.yul\":1336:3083   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3088:3549   */\n    tag_33:\n        /* \"#utility.yul\":3350:3381   */\n      0x646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000\n        /* \"#utility.yul\":3345:3348   */\n      dup2\n        /* \"#utility.yul\":3338:3382   */\n      mstore\n        /* \"#utility.yul\":3320:3323   */\n      0x00\n        /* \"#utility.yul\":3411:3417   */\n      dup3\n        /* \"#utility.yul\":3405:3418   */\n      mload\n        /* \"#utility.yul\":3427:3502   */\n      tag_168\n        /* \"#utility.yul\":3495:3501   */\n      dup2\n        /* \"#utility.yul\":3490:3492   */\n      0x1d\n        /* \"#utility.yul\":3485:3488   */\n      dup6\n        /* \"#utility.yul\":3481:3493   */\n      add\n        /* \"#utility.yul\":3474:3478   */\n      0x20\n        /* \"#utility.yul\":3466:3472   */\n      dup8\n        /* \"#utility.yul\":3462:3479   */\n      add\n        /* \"#utility.yul\":3427:3502   */\n      tag_144\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3522:3538   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3540:3542   */\n      0x1d\n        /* \"#utility.yul\":3518:3543   */\n      add\n      swap3\n        /* \"#utility.yul\":3088:3549   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3554:3681   */\n    tag_92:\n        /* \"#utility.yul\":3615:3625   */\n      0x4e487b71\n        /* \"#utility.yul\":3610:3613   */\n      0xe0\n        /* \"#utility.yul\":3606:3626   */\n      shl\n        /* \"#utility.yul\":3603:3604   */\n      0x00\n        /* \"#utility.yul\":3596:3627   */\n      mstore\n        /* \"#utility.yul\":3646:3650   */\n      0x41\n        /* \"#utility.yul\":3643:3644   */\n      0x04\n        /* \"#utility.yul\":3636:3651   */\n      mstore\n        /* \"#utility.yul\":3670:3674   */\n      0x24\n        /* \"#utility.yul\":3667:3668   */\n      0x00\n        /* \"#utility.yul\":3660:3675   */\n      revert\n        /* \"#utility.yul\":3686:4583   */\n    tag_39:\n        /* \"#utility.yul\":3766:3772   */\n      0x00\n        /* \"#utility.yul\":3819:3821   */\n      0x20\n        /* \"#utility.yul\":3807:3816   */\n      dup3\n        /* \"#utility.yul\":3798:3805   */\n      dup5\n        /* \"#utility.yul\":3794:3817   */\n      sub\n        /* \"#utility.yul\":3790:3822   */\n      slt\n        /* \"#utility.yul\":3787:3839   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":3835:3836   */\n      0x00\n        /* \"#utility.yul\":3832:3833   */\n      dup1\n        /* \"#utility.yul\":3825:3837   */\n      revert\n        /* \"#utility.yul\":3787:3839   */\n    tag_171:\n        /* \"#utility.yul\":3868:3877   */\n      dup2\n        /* \"#utility.yul\":3862:3878   */\n      mload\n        /* \"#utility.yul\":3897:3915   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3938:3940   */\n      dup1\n        /* \"#utility.yul\":3930:3936   */\n      dup3\n        /* \"#utility.yul\":3927:3941   */\n      gt\n        /* \"#utility.yul\":3924:3958   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":3954:3955   */\n      0x00\n        /* \"#utility.yul\":3951:3952   */\n      dup1\n        /* \"#utility.yul\":3944:3956   */\n      revert\n        /* \"#utility.yul\":3924:3958   */\n    tag_172:\n        /* \"#utility.yul\":3992:3998   */\n      dup2\n        /* \"#utility.yul\":3981:3990   */\n      dup5\n        /* \"#utility.yul\":3977:3999   */\n      add\n        /* \"#utility.yul\":3967:3999   */\n      swap2\n      pop\n        /* \"#utility.yul\":4037:4044   */\n      dup5\n        /* \"#utility.yul\":4030:4034   */\n      0x1f\n        /* \"#utility.yul\":4026:4028   */\n      dup4\n        /* \"#utility.yul\":4022:4035   */\n      add\n        /* \"#utility.yul\":4018:4045   */\n      slt\n        /* \"#utility.yul\":4008:4063   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":4059:4060   */\n      0x00\n        /* \"#utility.yul\":4056:4057   */\n      dup1\n        /* \"#utility.yul\":4049:4061   */\n      revert\n        /* \"#utility.yul\":4008:4063   */\n    tag_173:\n        /* \"#utility.yul\":4088:4090   */\n      dup2\n        /* \"#utility.yul\":4082:4091   */\n      mload\n        /* \"#utility.yul\":4110:4112   */\n      dup2\n        /* \"#utility.yul\":4106:4108   */\n      dup2\n        /* \"#utility.yul\":4103:4113   */\n      gt\n        /* \"#utility.yul\":4100:4136   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":4116:4134   */\n      tag_175\n      tag_92\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4191:4193   */\n      0x40\n        /* \"#utility.yul\":4185:4194   */\n      mload\n        /* \"#utility.yul\":4159:4161   */\n      0x1f\n        /* \"#utility.yul\":4245:4258   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4241:4263   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4265:4267   */\n      0x3f\n        /* \"#utility.yul\":4237:4268   */\n      add\n        /* \"#utility.yul\":4233:4273   */\n      and\n        /* \"#utility.yul\":4221:4274   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4289:4307   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4309:4331   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4286:4332   */\n      or\n        /* \"#utility.yul\":4283:4355   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":4335:4353   */\n      tag_177\n      tag_92\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4375:4385   */\n      dup2\n        /* \"#utility.yul\":4371:4373   */\n      0x40\n        /* \"#utility.yul\":4364:4386   */\n      mstore\n        /* \"#utility.yul\":4410:4412   */\n      dup3\n        /* \"#utility.yul\":4402:4408   */\n      dup2\n        /* \"#utility.yul\":4395:4413   */\n      mstore\n        /* \"#utility.yul\":4450:4457   */\n      dup8\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4440:4442   */\n      dup5\n        /* \"#utility.yul\":4436:4438   */\n      dup8\n        /* \"#utility.yul\":4432:4443   */\n      add\n        /* \"#utility.yul\":4428:4448   */\n      add\n        /* \"#utility.yul\":4425:4458   */\n      gt\n        /* \"#utility.yul\":4422:4475   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":4471:4472   */\n      0x00\n        /* \"#utility.yul\":4468:4469   */\n      dup1\n        /* \"#utility.yul\":4461:4473   */\n      revert\n        /* \"#utility.yul\":4422:4475   */\n    tag_178:\n        /* \"#utility.yul\":4484:4552   */\n      tag_179\n        /* \"#utility.yul\":4549:4551   */\n      dup4\n        /* \"#utility.yul\":4544:4546   */\n      0x20\n        /* \"#utility.yul\":4536:4542   */\n      dup4\n        /* \"#utility.yul\":4532:4547   */\n      add\n        /* \"#utility.yul\":4527:4529   */\n      0x20\n        /* \"#utility.yul\":4523:4525   */\n      dup9\n        /* \"#utility.yul\":4519:4530   */\n      add\n        /* \"#utility.yul\":4484:4552   */\n      tag_144\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4571:4577   */\n      swap8\n        /* \"#utility.yul\":3686:4583   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4588:4861   */\n    tag_48:\n        /* \"#utility.yul\":4656:4662   */\n      0x00\n        /* \"#utility.yul\":4709:4711   */\n      0x20\n        /* \"#utility.yul\":4697:4706   */\n      dup3\n        /* \"#utility.yul\":4688:4695   */\n      dup5\n        /* \"#utility.yul\":4684:4707   */\n      sub\n        /* \"#utility.yul\":4680:4712   */\n      slt\n        /* \"#utility.yul\":4677:4729   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":4725:4726   */\n      0x00\n        /* \"#utility.yul\":4722:4723   */\n      dup1\n        /* \"#utility.yul\":4715:4727   */\n      revert\n        /* \"#utility.yul\":4677:4729   */\n    tag_181:\n        /* \"#utility.yul\":4757:4766   */\n      dup2\n        /* \"#utility.yul\":4751:4767   */\n      mload\n        /* \"#utility.yul\":4807:4811   */\n      0xff\n        /* \"#utility.yul\":4800:4805   */\n      dup2\n        /* \"#utility.yul\":4796:4812   */\n      and\n        /* \"#utility.yul\":4789:4794   */\n      dup2\n        /* \"#utility.yul\":4786:4813   */\n      eq\n        /* \"#utility.yul\":4776:4831   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":4827:4828   */\n      0x00\n        /* \"#utility.yul\":4824:4825   */\n      dup1\n        /* \"#utility.yul\":4817:4829   */\n      revert\n        /* \"#utility.yul\":4776:4831   */\n    tag_182:\n        /* \"#utility.yul\":4850:4855   */\n      swap4\n        /* \"#utility.yul\":4588:4861   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4866:6632   */\n    tag_51:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":5662:5705   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5728:5741   */\n      dup5\n      mload\n        /* \"#utility.yul\":5644:5647   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5750:5824   */\n      tag_184\n        /* \"#utility.yul\":5728:5741   */\n      dup2\n        /* \"#utility.yul\":5813:5814   */\n      0x09\n        /* \"#utility.yul\":5804:5815   */\n      dup6\n      add\n        /* \"#utility.yul\":5797:5801   */\n      0x20\n        /* \"#utility.yul\":5785:5802   */\n      dup11\n      add\n        /* \"#utility.yul\":5750:5824   */\n      tag_144\n      jump\t// in\n    tag_184:\n      shl(0x79, 0x1116113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":5883:5884   */\n      0x09\n        /* \"#utility.yul\":5843:5859   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":5875:5885   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5868:5934   */\n      mstore\n        /* \"#utility.yul\":5959:5972   */\n      dup6\n      mload\n        /* \"#utility.yul\":5981:6057   */\n      tag_185\n        /* \"#utility.yul\":5959:5972   */\n      dup2\n        /* \"#utility.yul\":6043:6045   */\n      0x1a\n        /* \"#utility.yul\":6035:6046   */\n      dup5\n      add\n        /* \"#utility.yul\":6028:6032   */\n      0x20\n        /* \"#utility.yul\":6016:6033   */\n      dup11\n      add\n        /* \"#utility.yul\":5981:6057   */\n      tag_144\n      jump\t// in\n    tag_185:\n      shl(0xa9, 0x11161134b6b0b3b2911d11)\n        /* \"#utility.yul\":6117:6119   */\n      0x1a\n        /* \"#utility.yul\":6076:6093   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6109:6120   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":6102:6157   */\n      mstore\n        /* \"#utility.yul\":6182:6195   */\n      dup5\n      mload\n        /* \"#utility.yul\":6204:6280   */\n      tag_186\n        /* \"#utility.yul\":6182:6195   */\n      dup2\n        /* \"#utility.yul\":6266:6268   */\n      0x25\n        /* \"#utility.yul\":6258:6269   */\n      dup5\n      add\n        /* \"#utility.yul\":6251:6255   */\n      0x20\n        /* \"#utility.yul\":6239:6256   */\n      dup10\n      add\n        /* \"#utility.yul\":6204:6280   */\n      tag_144\n      jump\t// in\n    tag_186:\n      shl(0x69, 0x1116113b30b63ab2a232b1b4b6b0b639911d11)\n        /* \"#utility.yul\":6340:6342   */\n      0x25\n        /* \"#utility.yul\":6299:6316   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6332:6343   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":6325:6396   */\n      mstore\n        /* \"#utility.yul\":6421:6434   */\n      dup4\n      mload\n        /* \"#utility.yul\":6443:6519   */\n      tag_187\n        /* \"#utility.yul\":6421:6434   */\n      dup2\n        /* \"#utility.yul\":6505:6507   */\n      0x38\n        /* \"#utility.yul\":6497:6508   */\n      dup5\n      add\n        /* \"#utility.yul\":6490:6494   */\n      0x20\n        /* \"#utility.yul\":6478:6495   */\n      dup9\n      add\n        /* \"#utility.yul\":6443:6519   */\n      tag_144\n      jump\t// in\n    tag_187:\n      shl(0xf0, 0x227d)\n        /* \"#utility.yul\":6579:6581   */\n      0x38\n        /* \"#utility.yul\":6538:6555   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6571:6582   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":6564:6599   */\n      mstore\n        /* \"#utility.yul\":6623:6625   */\n      0x3a\n        /* \"#utility.yul\":6615:6626   */\n      add\n      swap7\n        /* \"#utility.yul\":4866:6632   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6819:7003   */\n    tag_67:\n        /* \"#utility.yul\":6889:6895   */\n      0x00\n        /* \"#utility.yul\":6942:6944   */\n      0x20\n        /* \"#utility.yul\":6930:6939   */\n      dup3\n        /* \"#utility.yul\":6921:6928   */\n      dup5\n        /* \"#utility.yul\":6917:6940   */\n      sub\n        /* \"#utility.yul\":6913:6945   */\n      slt\n        /* \"#utility.yul\":6910:6962   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":6958:6959   */\n      0x00\n        /* \"#utility.yul\":6955:6956   */\n      dup1\n        /* \"#utility.yul\":6948:6960   */\n      revert\n        /* \"#utility.yul\":6910:6962   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":6981:6997   */\n      mload\n      swap2\n        /* \"#utility.yul\":6819:7003   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7008:9305   */\n    tag_76:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":8102:8145   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8168:8181   */\n      dup7\n      mload\n        /* \"#utility.yul\":8084:8087   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8190:8264   */\n      tag_192\n        /* \"#utility.yul\":8168:8181   */\n      dup2\n        /* \"#utility.yul\":8253:8254   */\n      0x09\n        /* \"#utility.yul\":8244:8255   */\n      dup6\n      add\n        /* \"#utility.yul\":8237:8241   */\n      0x20\n        /* \"#utility.yul\":8225:8242   */\n      dup13\n      add\n        /* \"#utility.yul\":8190:8264   */\n      tag_144\n      jump\t// in\n    tag_192:\n      shl(0x79, 0x1116113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":8323:8324   */\n      0x09\n        /* \"#utility.yul\":8283:8299   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":8315:8325   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8308:8374   */\n      mstore\n        /* \"#utility.yul\":8399:8412   */\n      dup8\n      mload\n        /* \"#utility.yul\":8421:8497   */\n      tag_193\n        /* \"#utility.yul\":8399:8412   */\n      dup2\n        /* \"#utility.yul\":8483:8485   */\n      0x1a\n        /* \"#utility.yul\":8475:8486   */\n      dup5\n      add\n        /* \"#utility.yul\":8468:8472   */\n      0x20\n        /* \"#utility.yul\":8456:8473   */\n      dup13\n      add\n        /* \"#utility.yul\":8421:8497   */\n      tag_144\n      jump\t// in\n    tag_193:\n      shl(0xa9, 0x11161134b6b0b3b2911d11)\n        /* \"#utility.yul\":8557:8559   */\n      0x1a\n        /* \"#utility.yul\":8516:8533   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8549:8560   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8542:8597   */\n      mstore\n        /* \"#utility.yul\":8622:8635   */\n      dup7\n      mload\n        /* \"#utility.yul\":8644:8720   */\n      tag_194\n        /* \"#utility.yul\":8622:8635   */\n      dup2\n        /* \"#utility.yul\":8706:8708   */\n      0x25\n        /* \"#utility.yul\":8698:8709   */\n      dup5\n      add\n        /* \"#utility.yul\":8691:8695   */\n      0x20\n        /* \"#utility.yul\":8679:8696   */\n      dup12\n      add\n        /* \"#utility.yul\":8644:8720   */\n      tag_144\n      jump\t// in\n    tag_194:\n      shl(0x99, 0x1116113130b630b731b2911d11)\n        /* \"#utility.yul\":8780:8782   */\n      0x25\n        /* \"#utility.yul\":8739:8756   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8772:8783   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8765:8824   */\n      mstore\n        /* \"#utility.yul\":8849:8862   */\n      dup6\n      mload\n        /* \"#utility.yul\":8871:8947   */\n      tag_195\n        /* \"#utility.yul\":8849:8862   */\n      dup2\n        /* \"#utility.yul\":8933:8935   */\n      0x32\n        /* \"#utility.yul\":8925:8936   */\n      dup5\n      add\n        /* \"#utility.yul\":8918:8922   */\n      0x20\n        /* \"#utility.yul\":8906:8923   */\n      dup11\n      add\n        /* \"#utility.yul\":8871:8947   */\n      tag_144\n      jump\t// in\n    tag_195:\n      shl(0xb1, 0x11161139b637ba111d11)\n        /* \"#utility.yul\":9007:9009   */\n      0x32\n        /* \"#utility.yul\":8966:8983   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8999:9010   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8992:9045   */\n      mstore\n        /* \"#utility.yul\":9070:9083   */\n      dup5\n      mload\n        /* \"#utility.yul\":9092:9168   */\n      tag_196\n        /* \"#utility.yul\":9070:9083   */\n      dup2\n        /* \"#utility.yul\":9154:9156   */\n      0x3c\n        /* \"#utility.yul\":9146:9157   */\n      dup5\n      add\n        /* \"#utility.yul\":9139:9143   */\n      0x20\n        /* \"#utility.yul\":9127:9144   */\n      dup10\n      add\n        /* \"#utility.yul\":9092:9168   */\n      tag_144\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":9184:9299   */\n      tag_197\n        /* \"#utility.yul\":9214:9298   */\n      tag_198\n        /* \"#utility.yul\":9240:9297   */\n      tag_199\n        /* \"#utility.yul\":9293:9295   */\n      0x3c\n        /* \"#utility.yul\":9282:9290   */\n      dup5\n        /* \"#utility.yul\":9278:9280   */\n      dup7\n        /* \"#utility.yul\":9274:9291   */\n      add\n        /* \"#utility.yul\":9270:9296   */\n      add\n      shl(0x89, 0x111611383937b832b93a34b2b9911d)\n        /* \"#utility.yul\":1123:1178   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1203:1205   */\n      0x0f\n        /* \"#utility.yul\":1194:1206   */\n      add\n      swap1\n        /* \"#utility.yul\":1058:1212   */\n      jump\n        /* \"#utility.yul\":9240:9297   */\n    tag_199:\n        /* \"#utility.yul\":9232:9238   */\n      dup8\n        /* \"#utility.yul\":9214:9298   */\n      tag_145\n      jump\t// in\n    tag_198:\n      shl(0xf8, 0x7d)\n        /* \"#utility.yul\":1282:1298   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1323:1324   */\n      0x01\n        /* \"#utility.yul\":1314:1325   */\n      add\n      swap1\n        /* \"#utility.yul\":1217:1331   */\n      jump\n        /* \"#utility.yul\":9184:9299   */\n    tag_197:\n        /* \"#utility.yul\":9177:9299   */\n      swap11\n        /* \"#utility.yul\":7008:9305   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9310:9437   */\n    tag_148:\n        /* \"#utility.yul\":9371:9381   */\n      0x4e487b71\n        /* \"#utility.yul\":9366:9369   */\n      0xe0\n        /* \"#utility.yul\":9362:9382   */\n      shl\n        /* \"#utility.yul\":9359:9360   */\n      0x00\n        /* \"#utility.yul\":9352:9383   */\n      mstore\n        /* \"#utility.yul\":9402:9406   */\n      0x11\n        /* \"#utility.yul\":9399:9400   */\n      0x04\n        /* \"#utility.yul\":9392:9407   */\n      mstore\n        /* \"#utility.yul\":9426:9430   */\n      0x24\n        /* \"#utility.yul\":9423:9424   */\n      0x00\n        /* \"#utility.yul\":9416:9431   */\n      revert\n        /* \"#utility.yul\":9442:9567   */\n    tag_85:\n        /* \"#utility.yul\":9507:9516   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9528:9538   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9525:9561   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":9541:9559   */\n      tag_143\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":9704:9921   */\n    tag_87:\n        /* \"#utility.yul\":9744:9745   */\n      0x00\n        /* \"#utility.yul\":9770:9771   */\n      dup3\n        /* \"#utility.yul\":9760:9892   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":9814:9824   */\n      0x4e487b71\n        /* \"#utility.yul\":9809:9812   */\n      0xe0\n        /* \"#utility.yul\":9805:9825   */\n      shl\n        /* \"#utility.yul\":9802:9803   */\n      0x00\n        /* \"#utility.yul\":9795:9826   */\n      mstore\n        /* \"#utility.yul\":9849:9853   */\n      0x12\n        /* \"#utility.yul\":9846:9847   */\n      0x04\n        /* \"#utility.yul\":9839:9854   */\n      mstore\n        /* \"#utility.yul\":9877:9881   */\n      0x24\n        /* \"#utility.yul\":9874:9875   */\n      0x00\n        /* \"#utility.yul\":9867:9882   */\n      revert\n        /* \"#utility.yul\":9760:9892   */\n    tag_206:\n      pop\n        /* \"#utility.yul\":9906:9915   */\n      div\n      swap1\n        /* \"#utility.yul\":9704:9921   */\n      jump\t// out\n        /* \"#utility.yul\":9926:10094   */\n    tag_89:\n        /* \"#utility.yul\":9999:10008   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10030:10039   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10047:10062   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10041:10063   */\n      dup5\n      eq\n        /* \"#utility.yul\":10027:10064   */\n      or\n        /* \"#utility.yul\":10017:10088   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":10068:10086   */\n      tag_143\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":10099:10595   */\n    tag_120:\n        /* \"#utility.yul\":10278:10281   */\n      0x00\n        /* \"#utility.yul\":10316:10322   */\n      dup4\n        /* \"#utility.yul\":10310:10323   */\n      mload\n        /* \"#utility.yul\":10332:10398   */\n      tag_211\n        /* \"#utility.yul\":10391:10397   */\n      dup2\n        /* \"#utility.yul\":10386:10389   */\n      dup5\n        /* \"#utility.yul\":10379:10383   */\n      0x20\n        /* \"#utility.yul\":10371:10377   */\n      dup9\n        /* \"#utility.yul\":10367:10384   */\n      add\n        /* \"#utility.yul\":10332:10398   */\n      tag_144\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":10461:10474   */\n      dup4\n      mload\n        /* \"#utility.yul\":10420:10436   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":10483:10553   */\n      tag_212\n        /* \"#utility.yul\":10461:10474   */\n      dup2\n        /* \"#utility.yul\":10420:10436   */\n      dup4\n        /* \"#utility.yul\":10530:10534   */\n      0x20\n        /* \"#utility.yul\":10518:10535   */\n      dup9\n      add\n        /* \"#utility.yul\":10483:10553   */\n      tag_144\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":10569:10589   */\n      add\n      swap5\n        /* \"#utility.yul\":10099:10595   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce 4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f\n\n    auxdata: 0xa2646970667358221220251493e08d962c1e4111fdd9a3dad106a318e4ab0a81c6c9ee25f2a12c3b8a8264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50610c678061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80636c037f8a14610043578063725fa09c1461006c578063894b4c2e14610074575b5f80fd5b6100566100513660046106de565b610087565b6040516100639190610717565b60405180910390f35b610056610132565b6100566100823660046106de565b610277565b606061010c6100ac60408051808201909152600381526231323360e81b602082015290565b60408051808201825260048152631cdb1bdd60e21b602080830191909152825180820184525f81528351808501855260028152615b5d60f01b8184015293516100f89594919201610764565b6040516020818303038152906040526103a9565b60405160200161011c9190610831565b6040516020818303038152906040529050919050565b60605f339050610252816001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa158015610176573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261019d9190810190610889565b60408051808201909152601281527129b2b6b4a33ab733b4b13632903a37b5b2b760711b602082015260408051602081019091525f815261023f856001600160a01b0316633e7e86696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102379190610931565b60ff166104f8565b6040516020016100f89493929190610958565b6040516020016102629190610831565b60405160208183030381529060405291505090565b60603361038261028684610588565b604080518082019091526007815266746f6b656e313160c81b602082015260408051602081019091525f8152604051631398fee160e31b815260048101889052610323906001600160a01b03871690639cc7f708906024015b602060405180830381865afa1580156102fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031e9190610a2a565b6104f8565b60405163131f9f3f60e11b815260048101899052610354906001600160a01b0388169063263f3e7e906024016102df565b6040805180820190915260028152617b7d60f01b60208201526040516020016100f896959493929190610a41565b6040516020016103929190610831565b604051602081830303815290604052915050919050565b606081515f036103c657505060408051602081019091525f815290565b5f604051806060016040528060408152602001610bf26040913990505f6003845160026103f39190610b7a565b6103fd9190610b8d565b610408906004610bac565b67ffffffffffffffff81111561042057610420610875565b6040519080825280601f01601f19166020018201604052801561044a576020820181803683370190505b509050600182016020820185865187015b808210156104b6576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184535060018301925061045b565b50506003865106600181146104d257600281146104e5576104ed565b603d6001830353603d60028303536104ed565b603d60018303535b509195945050505050565b60605f61050483610606565b60010190505f8167ffffffffffffffff81111561052357610523610875565b6040519080825280601f01601f19166020018201604052801561054d576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461055757509392505050565b6060336001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa1580156105c5573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526105ec9190810190610889565b6105f5836104f8565b60405160200161011c929190610bc3565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106445772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610670576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061068e57662386f26fc10000830492506010015b6305f5e10083106106a6576305f5e100830492506008015b61271083106106ba57612710830492506004015b606483106106cc576064830492506002015b600a83106106d8576001015b92915050565b5f602082840312156106ee575f80fd5b5035919050565b5f5b8381101561070f5781810151838201526020016106f7565b50505f910152565b602081525f82518060208401526107358160408501602087016106f5565b601f01601f19169190910160400192915050565b5f815161075a8185602086016106f5565b9290920192915050565b683d913730b6b2911d1160b91b815284515f90610788816009850160208a016106f5565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516107b981601a840160208a016106f5565b6a11161134b6b0b3b2911d1160a91b601a929091019182015284516107e58160258401602089016106f5565b6e111611383937b832b93a34b2b9911d60891b6025929091019182015283516108158160348401602088016106f5565b607d60f81b603492909101918201526035019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525f825161086881601d8501602087016106f5565b91909101601d0192915050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610899575f80fd5b815167ffffffffffffffff808211156108b0575f80fd5b818401915084601f8301126108c3575f80fd5b8151818111156108d5576108d5610875565b604051601f8201601f19908116603f011681019083821181831017156108fd576108fd610875565b81604052828152876020848701011115610915575f80fd5b6109268360208301602088016106f5565b979650505050505050565b5f60208284031215610941575f80fd5b815160ff81168114610951575f80fd5b9392505050565b683d913730b6b2911d1160b91b815284515f9061097c816009850160208a016106f5565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516109ad81601a840160208a016106f5565b6a11161134b6b0b3b2911d1160a91b601a929091019182015284516109d98160258401602089016106f5565b721116113b30b63ab2a232b1b4b6b0b639911d1160691b602592909101918201528351610a0d8160388401602088016106f5565b61227d60f01b60389290910191820152603a019695505050505050565b5f60208284031215610a3a575f80fd5b5051919050565b683d913730b6b2911d1160b91b815286515f90610a65816009850160208c016106f5565b701116113232b9b1b934b83a34b7b7111d1160791b6009918401918201528751610a9681601a840160208c016106f5565b6a11161134b6b0b3b2911d1160a91b601a92909101918201528651610ac2816025840160208b016106f5565b6c1116113130b630b731b2911d1160991b602592909101918201528551610af0816032840160208a016106f5565b6911161139b637ba111d1160b11b603292909101918201528451610b1b81603c8401602089016106f5565b610b58610b4b610b45603c848601016e111611383937b832b93a34b2b9911d60891b8152600f0190565b87610749565b607d60f81b815260010190565b9a9950505050505050505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106d8576106d8610b66565b5f82610ba757634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176106d8576106d8610b66565b5f8351610bd48184602088016106f5565b835190830190610be88183602088016106f5565b0194935050505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220251493e08d962c1e4111fdd9a3dad106a318e4ab0a81c6c9ee25f2a12c3b8a8264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC67 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C037F8A EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x725FA09C EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x894B4C2E EQ PUSH2 0x74 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x56 PUSH2 0x82 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10C PUSH2 0xAC PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x313233 PUSH1 0xE8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x1CDB1BDD PUSH1 0xE2 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP3 ADD DUP5 MSTORE PUSH0 DUP2 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x5B5D PUSH1 0xF0 SHL DUP2 DUP5 ADD MSTORE SWAP4 MLOAD PUSH2 0xF8 SWAP6 SWAP5 SWAP2 SWAP3 ADD PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 CALLER SWAP1 POP PUSH2 0x252 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x19D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x29B2B6B4A33AB733B4B13632903A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x23F DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3E7E8669 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x931 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLER PUSH2 0x382 PUSH2 0x286 DUP5 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x746F6B656E3131 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x1398FEE1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH2 0x323 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x9CC7F708 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131F9F3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH2 0x354 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x263F3E7E SWAP1 PUSH1 0x24 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x7B7D PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0x3C6 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF2 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x408 SWAP1 PUSH1 0x4 PUSH2 0xBAC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x420 JUMPI PUSH2 0x420 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x45B JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x4D2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4E5 JUMPI PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x504 DUP4 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x523 JUMPI PUSH2 0x523 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x557 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x5EC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x5F5 DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C SWAP3 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x644 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x670 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x68E JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x6A6 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x6BA JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x6CC JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6D8 JUMPI PUSH1 0x1 ADD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F7 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x735 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH2 0x75A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6F5 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x788 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x7B9 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x7E5 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x815 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x34 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x35 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0x868 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x6F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x899 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x8D5 JUMPI PUSH2 0x8D5 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x875 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x915 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x926 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x941 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x951 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x97C DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x9AD DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x9D9 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH19 0x1116113B30B63AB2A232B1B4B6B0B639911D11 PUSH1 0x69 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xA0D DUP2 PUSH1 0x38 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x38 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x3A ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP7 MLOAD PUSH0 SWAP1 PUSH2 0xA65 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP8 MLOAD PUSH2 0xA96 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0xAC2 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH13 0x1116113130B630B731B2911D11 PUSH1 0x99 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0xAF0 DUP2 PUSH1 0x32 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH10 0x11161139B637BA111D11 PUSH1 0xB1 SHL PUSH1 0x32 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xB1B DUP2 PUSH1 0x3C DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0xB58 PUSH2 0xB4B PUSH2 0xB45 PUSH1 0x3C DUP5 DUP7 ADD ADD PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL DUP2 MSTORE PUSH1 0xF ADD SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6D8 JUMPI PUSH2 0x6D8 PUSH2 0xB66 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6D8 JUMPI PUSH2 0x6D8 PUSH2 0xB66 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xBD4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xBE8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE BLOBHASH BLOBBASEFEE 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0x25 EQ SWAP4 0xE0 DUP14 SWAP7 0x2C 0x1E COINBASE GT REVERT 0xD9 LOG3 0xDA 0xD1 MOD LOG3 XOR 0xE4 0xAB EXP DUP2 0xC6 0xC9 0xEE 0x25 CALLCODE LOG1 0x2C EXTCODESIZE DUP11 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "379:5230:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_contractDescription_2180": {
									"entryPoint": null,
									"id": 2180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_contractImage_2188": {
									"entryPoint": null,
									"id": 2188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_slotDescription_2218": {
									"entryPoint": null,
									"id": 2218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_slotImage_2230": {
									"entryPoint": null,
									"id": 2230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_slotName_2203": {
									"entryPoint": null,
									"id": 2203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_slotProperties_2242": {
									"entryPoint": null,
									"id": 2242,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenDescription_2281": {
									"entryPoint": null,
									"id": 2281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenImage_2293": {
									"entryPoint": null,
									"id": 2293,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenName_2266": {
									"entryPoint": 1416,
									"id": 2266,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenProperties_2305": {
									"entryPoint": null,
									"id": 2305,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@constructContractURI_2070": {
									"entryPoint": 306,
									"id": 2070,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@constructSlotURI_2110": {
									"entryPoint": 135,
									"id": 2110,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@constructTokenURI_2172": {
									"entryPoint": 631,
									"id": 2172,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@encode_299": {
									"entryPoint": 937,
									"id": 299,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1441": {
									"entryPoint": 1542,
									"id": 1441,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_368": {
									"entryPoint": 1272,
									"id": 368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_8e2f": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_fd1e": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d_t_string_memory_ptr_t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140_t_string_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10597:12",
										"nodeType": "YulBlock",
										"src": "0:10597:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:12",
													"nodeType": "YulBlock",
													"src": "84:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:12",
																"nodeType": "YulBlock",
																"src": "130:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:12",
																					"nodeType": "YulLiteral",
																					"src": "139:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:12",
																					"nodeType": "YulLiteral",
																					"src": "142:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:12"
																			},
																			"nativeSrc": "132:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:12"
																		},
																		"nativeSrc": "132:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:12"
																		},
																		"nativeSrc": "101:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:12",
																		"nodeType": "YulLiteral",
																		"src": "126:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:12"
																},
																"nativeSrc": "97:32:12",
																"nodeType": "YulFunctionCall",
																"src": "97:32:12"
															},
															"nativeSrc": "94:52:12",
															"nodeType": "YulIf",
															"src": "94:52:12"
														},
														{
															"nativeSrc": "155:33:12",
															"nodeType": "YulAssignment",
															"src": "155:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:12"
																},
																"nativeSrc": "165:23:12",
																"nodeType": "YulFunctionCall",
																"src": "165:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:12",
														"nodeType": "YulTypedName",
														"src": "50:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:12",
														"nodeType": "YulTypedName",
														"src": "61:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:12",
														"nodeType": "YulTypedName",
														"src": "73:6:12",
														"type": ""
													}
												],
												"src": "14:180:12"
											},
											{
												"body": {
													"nativeSrc": "265:184:12",
													"nodeType": "YulBlock",
													"src": "265:184:12",
													"statements": [
														{
															"nativeSrc": "275:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:12",
																"nodeType": "YulLiteral",
																"src": "284:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:12",
																	"nodeType": "YulTypedName",
																	"src": "279:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:63:12",
																"nodeType": "YulBlock",
																"src": "344:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "369:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "369:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "374:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "374:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:12"
																					},
																					"nativeSrc": "365:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "365:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "388:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "388:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "393:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "393:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "384:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "384:3:12"
																							},
																							"nativeSrc": "384:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "384:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "378:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "378:5:12"
																					},
																					"nativeSrc": "378:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "378:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:12"
																			},
																			"nativeSrc": "358:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "358:39:12"
																		},
																		"nativeSrc": "358:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:12"
																},
																"nativeSrc": "302:13:12",
																"nodeType": "YulFunctionCall",
																"src": "302:13:12"
															},
															"nativeSrc": "294:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:12",
																"nodeType": "YulBlock",
																"src": "316:19:12",
																"statements": [
																	{
																		"nativeSrc": "318:15:12",
																		"nodeType": "YulAssignment",
																		"src": "318:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "330:2:12",
																					"nodeType": "YulLiteral",
																					"src": "330:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:12"
																			},
																			"nativeSrc": "323:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:12",
																"nodeType": "YulBlock",
																"src": "298:3:12",
																"statements": []
															},
															"src": "294:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "427:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "427:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "432:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "432:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "423:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:12"
																		},
																		"nativeSrc": "423:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "423:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "441:1:12",
																		"nodeType": "YulLiteral",
																		"src": "441:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:12"
																},
																"nativeSrc": "416:27:12",
																"nodeType": "YulFunctionCall",
																"src": "416:27:12"
															},
															"nativeSrc": "416:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "416:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "199:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "243:3:12",
														"nodeType": "YulTypedName",
														"src": "243:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "248:3:12",
														"nodeType": "YulTypedName",
														"src": "248:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "253:6:12",
														"nodeType": "YulTypedName",
														"src": "253:6:12",
														"type": ""
													}
												],
												"src": "199:250:12"
											},
											{
												"body": {
													"nativeSrc": "575:275:12",
													"nodeType": "YulBlock",
													"src": "575:275:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "592:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "592:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "603:2:12",
																		"nodeType": "YulLiteral",
																		"src": "603:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "585:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:12"
																},
																"nativeSrc": "585:21:12",
																"nodeType": "YulFunctionCall",
																"src": "585:21:12"
															},
															"nativeSrc": "585:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "585:21:12"
														},
														{
															"nativeSrc": "615:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "615:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "635:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "635:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "629:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "629:5:12"
																},
																"nativeSrc": "629:13:12",
																"nodeType": "YulFunctionCall",
																"src": "629:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "619:6:12",
																	"nodeType": "YulTypedName",
																	"src": "619:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "662:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "662:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "673:2:12",
																				"nodeType": "YulLiteral",
																				"src": "673:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "658:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:12"
																		},
																		"nativeSrc": "658:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "658:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "678:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "651:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:12"
																},
																"nativeSrc": "651:34:12",
																"nodeType": "YulFunctionCall",
																"src": "651:34:12"
															},
															"nativeSrc": "651:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "651:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "733:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:2:12",
																				"nodeType": "YulLiteral",
																				"src": "741:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "729:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:12"
																		},
																		"nativeSrc": "729:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "729:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "750:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "761:2:12",
																				"nodeType": "YulLiteral",
																				"src": "761:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "746:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "746:3:12"
																		},
																		"nativeSrc": "746:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "746:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "694:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "694:34:12"
																},
																"nativeSrc": "694:79:12",
																"nodeType": "YulFunctionCall",
																"src": "694:79:12"
															},
															"nativeSrc": "694:79:12",
															"nodeType": "YulExpressionStatement",
															"src": "694:79:12"
														},
														{
															"nativeSrc": "782:62:12",
															"nodeType": "YulAssignment",
															"src": "782:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "817:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "817:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "825:2:12",
																								"nodeType": "YulLiteral",
																								"src": "825:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "813:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "813:3:12"
																						},
																						"nativeSrc": "813:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "813:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "834:2:12",
																								"nodeType": "YulLiteral",
																								"src": "834:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "830:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "830:3:12"
																						},
																						"nativeSrc": "830:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "830:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "809:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:12"
																				},
																				"nativeSrc": "809:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "809:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:12"
																		},
																		"nativeSrc": "794:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "794:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "841:2:12",
																		"nodeType": "YulLiteral",
																		"src": "841:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "790:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "790:3:12"
																},
																"nativeSrc": "790:54:12",
																"nodeType": "YulFunctionCall",
																"src": "790:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "782:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "782:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "454:396:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "544:9:12",
														"nodeType": "YulTypedName",
														"src": "544:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "555:6:12",
														"nodeType": "YulTypedName",
														"src": "555:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "566:4:12",
														"nodeType": "YulTypedName",
														"src": "566:4:12",
														"type": ""
													}
												],
												"src": "454:396:12"
											},
											{
												"body": {
													"nativeSrc": "905:148:12",
													"nodeType": "YulBlock",
													"src": "905:148:12",
													"statements": [
														{
															"nativeSrc": "915:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "935:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "929:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:12"
																},
																"nativeSrc": "929:12:12",
																"nodeType": "YulFunctionCall",
																"src": "929:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "919:6:12",
																	"nodeType": "YulTypedName",
																	"src": "919:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "989:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "996:4:12",
																				"nodeType": "YulLiteral",
																				"src": "996:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:12"
																		},
																		"nativeSrc": "985:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "985:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1003:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1003:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1008:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1008:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "950:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "950:34:12"
																},
																"nativeSrc": "950:65:12",
																"nodeType": "YulFunctionCall",
																"src": "950:65:12"
															},
															"nativeSrc": "950:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "950:65:12"
														},
														{
															"nativeSrc": "1024:23:12",
															"nodeType": "YulAssignment",
															"src": "1024:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1035:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1035:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1040:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1040:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1031:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:12"
																},
																"nativeSrc": "1031:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1031:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1024:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1024:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "855:198:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "882:5:12",
														"nodeType": "YulTypedName",
														"src": "882:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "889:3:12",
														"nodeType": "YulTypedName",
														"src": "889:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "897:3:12",
														"nodeType": "YulTypedName",
														"src": "897:3:12",
														"type": ""
													}
												],
												"src": "855:198:12"
											},
											{
												"body": {
													"nativeSrc": "1113:99:12",
													"nodeType": "YulBlock",
													"src": "1113:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1130:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1139:3:12",
																				"nodeType": "YulLiteral",
																				"src": "1139:3:12",
																				"type": "",
																				"value": "137"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1144:32:12",
																				"nodeType": "YulLiteral",
																				"src": "1144:32:12",
																				"type": "",
																				"value": "0x111611383937b832b93a34b2b9911d"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1135:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1135:3:12"
																		},
																		"nativeSrc": "1135:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1135:42:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1123:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:12"
																},
																"nativeSrc": "1123:55:12",
																"nodeType": "YulFunctionCall",
																"src": "1123:55:12"
															},
															"nativeSrc": "1123:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "1123:55:12"
														},
														{
															"nativeSrc": "1187:19:12",
															"nodeType": "YulAssignment",
															"src": "1187:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1198:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1198:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1203:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1194:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1194:3:12"
																},
																"nativeSrc": "1194:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1194:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1187:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1187:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_stringliteral_fd1e",
												"nativeSrc": "1058:154:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1097:3:12",
														"nodeType": "YulTypedName",
														"src": "1097:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1105:3:12",
														"nodeType": "YulTypedName",
														"src": "1105:3:12",
														"type": ""
													}
												],
												"src": "1058:154:12"
											},
											{
												"body": {
													"nativeSrc": "1272:59:12",
													"nodeType": "YulBlock",
													"src": "1272:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1289:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1289:3:12"
																	},
																	{
																		"hexValue": "7d",
																		"kind": "string",
																		"nativeSrc": "1294:3:12",
																		"nodeType": "YulLiteral",
																		"src": "1294:3:12",
																		"type": "",
																		"value": "}"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1282:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1282:6:12"
																},
																"nativeSrc": "1282:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1282:16:12"
															},
															"nativeSrc": "1282:16:12",
															"nodeType": "YulExpressionStatement",
															"src": "1282:16:12"
														},
														{
															"nativeSrc": "1307:18:12",
															"nodeType": "YulAssignment",
															"src": "1307:18:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1318:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1318:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1323:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1323:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1314:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1314:3:12"
																},
																"nativeSrc": "1314:11:12",
																"nodeType": "YulFunctionCall",
																"src": "1314:11:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1307:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_stringliteral_8e2f",
												"nativeSrc": "1217:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1256:3:12",
														"nodeType": "YulTypedName",
														"src": "1256:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1264:3:12",
														"nodeType": "YulTypedName",
														"src": "1264:3:12",
														"type": ""
													}
												],
												"src": "1217:114:12"
											},
											{
												"body": {
													"nativeSrc": "2122:961:12",
													"nodeType": "YulBlock",
													"src": "2122:961:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2139:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2139:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2148:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2148:3:12",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2153:20:12",
																				"nodeType": "YulLiteral",
																				"src": "2153:20:12",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2144:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:12"
																		},
																		"nativeSrc": "2144:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2144:30:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2132:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:12"
																},
																"nativeSrc": "2132:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2132:43:12"
															},
															"nativeSrc": "2132:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "2132:43:12"
														},
														{
															"nativeSrc": "2184:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2184:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2204:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2204:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2198:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2198:5:12"
																},
																"nativeSrc": "2198:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2198:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2188:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2188:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2267:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2267:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2255:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:12"
																		},
																		"nativeSrc": "2255:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2278:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2278:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2283:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2283:1:12",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2274:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2274:3:12"
																		},
																		"nativeSrc": "2274:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:11:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2287:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2287:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2220:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2220:34:12"
																},
																"nativeSrc": "2220:74:12",
																"nodeType": "YulFunctionCall",
																"src": "2220:74:12"
															},
															"nativeSrc": "2220:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "2220:74:12"
														},
														{
															"nativeSrc": "2303:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2303:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2317:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2317:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2322:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2313:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:12"
																},
																"nativeSrc": "2313:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2313:16:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2307:2:12",
																	"nodeType": "YulTypedName",
																	"src": "2307:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2349:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2349:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2353:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2353:1:12",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2345:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:12"
																		},
																		"nativeSrc": "2345:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2345:10:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2361:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2361:3:12",
																				"type": "",
																				"value": "121"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2366:36:12",
																				"nodeType": "YulLiteral",
																				"src": "2366:36:12",
																				"type": "",
																				"value": "0x1116113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2357:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:12"
																		},
																		"nativeSrc": "2357:46:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:46:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2338:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2338:6:12"
																},
																"nativeSrc": "2338:66:12",
																"nodeType": "YulFunctionCall",
																"src": "2338:66:12"
															},
															"nativeSrc": "2338:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "2338:66:12"
														},
														{
															"nativeSrc": "2413:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2413:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2435:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2429:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2429:5:12"
																},
																"nativeSrc": "2429:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2429:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "2417:8:12",
																	"nodeType": "YulTypedName",
																	"src": "2417:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2490:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2498:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2498:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:12"
																		},
																		"nativeSrc": "2486:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2509:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2509:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2513:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2513:2:12",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2505:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2505:3:12"
																		},
																		"nativeSrc": "2505:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2505:11:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "2518:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2518:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2451:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2451:34:12"
																},
																"nativeSrc": "2451:76:12",
																"nodeType": "YulFunctionCall",
																"src": "2451:76:12"
															},
															"nativeSrc": "2451:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "2451:76:12"
														},
														{
															"nativeSrc": "2536:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2536:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2550:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "2550:2:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "2554:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2546:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:12"
																},
																"nativeSrc": "2546:17:12",
																"nodeType": "YulFunctionCall",
																"src": "2546:17:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2540:2:12",
																	"nodeType": "YulTypedName",
																	"src": "2540:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "2583:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2583:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2587:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2587:2:12",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2579:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:12"
																		},
																		"nativeSrc": "2579:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2579:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2596:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2596:3:12",
																				"type": "",
																				"value": "169"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2601:24:12",
																				"nodeType": "YulLiteral",
																				"src": "2601:24:12",
																				"type": "",
																				"value": "0x11161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2592:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:12"
																		},
																		"nativeSrc": "2592:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2592:34:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:12"
																},
																"nativeSrc": "2572:55:12",
																"nodeType": "YulFunctionCall",
																"src": "2572:55:12"
															},
															"nativeSrc": "2572:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "2572:55:12"
														},
														{
															"nativeSrc": "2636:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2636:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2658:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2652:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2652:5:12"
																},
																"nativeSrc": "2652:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2652:13:12"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nativeSrc": "2640:8:12",
																	"nodeType": "YulTypedName",
																	"src": "2640:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "2713:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2713:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2721:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2721:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2709:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:12"
																		},
																		"nativeSrc": "2709:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2709:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "2732:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2732:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2736:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:12",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2728:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:12"
																		},
																		"nativeSrc": "2728:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2728:11:12"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "2741:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2741:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2674:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2674:34:12"
																},
																"nativeSrc": "2674:76:12",
																"nodeType": "YulFunctionCall",
																"src": "2674:76:12"
															},
															"nativeSrc": "2674:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "2674:76:12"
														},
														{
															"nativeSrc": "2759:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2759:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "2773:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "2773:2:12"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "2777:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2777:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2769:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2769:3:12"
																},
																"nativeSrc": "2769:17:12",
																"nodeType": "YulFunctionCall",
																"src": "2769:17:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "2763:2:12",
																	"nodeType": "YulTypedName",
																	"src": "2763:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "2806:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2806:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2810:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2810:2:12",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2802:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:12"
																		},
																		"nativeSrc": "2802:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2819:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2819:3:12",
																				"type": "",
																				"value": "137"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2824:32:12",
																				"nodeType": "YulLiteral",
																				"src": "2824:32:12",
																				"type": "",
																				"value": "0x111611383937b832b93a34b2b9911d"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2815:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:12"
																		},
																		"nativeSrc": "2815:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:42:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:12"
																},
																"nativeSrc": "2795:63:12",
																"nodeType": "YulFunctionCall",
																"src": "2795:63:12"
															},
															"nativeSrc": "2795:63:12",
															"nodeType": "YulExpressionStatement",
															"src": "2795:63:12"
														},
														{
															"nativeSrc": "2867:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2867:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2889:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2889:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2883:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2883:5:12"
																},
																"nativeSrc": "2883:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2883:13:12"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nativeSrc": "2871:8:12",
																	"nodeType": "YulTypedName",
																	"src": "2871:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "2944:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2944:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2952:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2952:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2940:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:12"
																		},
																		"nativeSrc": "2940:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2940:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "2963:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2963:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2967:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:12",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2959:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:12"
																		},
																		"nativeSrc": "2959:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:11:12"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "2972:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2972:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2905:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2905:34:12"
																},
																"nativeSrc": "2905:76:12",
																"nodeType": "YulFunctionCall",
																"src": "2905:76:12"
															},
															"nativeSrc": "2905:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "2905:76:12"
														},
														{
															"nativeSrc": "2990:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2990:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3004:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3004:2:12"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "3008:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3008:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3000:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:12"
																},
																"nativeSrc": "3000:17:12",
																"nodeType": "YulFunctionCall",
																"src": "3000:17:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "2994:2:12",
																	"nodeType": "YulTypedName",
																	"src": "2994:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "3037:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3037:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3041:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3041:2:12",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3033:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:12"
																		},
																		"nativeSrc": "3033:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3033:11:12"
																	},
																	{
																		"hexValue": "7d",
																		"kind": "string",
																		"nativeSrc": "3046:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3046:3:12",
																		"type": "",
																		"value": "}"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3026:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:12"
																},
																"nativeSrc": "3026:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3026:24:12"
															},
															"nativeSrc": "3026:24:12",
															"nodeType": "YulExpressionStatement",
															"src": "3026:24:12"
														},
														{
															"nativeSrc": "3059:18:12",
															"nodeType": "YulAssignment",
															"src": "3059:18:12",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "3070:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3070:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:12",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3066:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:12"
																},
																"nativeSrc": "3066:11:12",
																"nodeType": "YulFunctionCall",
																"src": "3066:11:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1336:1747:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2074:3:12",
														"nodeType": "YulTypedName",
														"src": "2074:3:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2079:6:12",
														"nodeType": "YulTypedName",
														"src": "2079:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2087:6:12",
														"nodeType": "YulTypedName",
														"src": "2087:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2095:6:12",
														"nodeType": "YulTypedName",
														"src": "2095:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2103:6:12",
														"nodeType": "YulTypedName",
														"src": "2103:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2114:3:12",
														"nodeType": "YulTypedName",
														"src": "2114:3:12",
														"type": ""
													}
												],
												"src": "1336:1747:12"
											},
											{
												"body": {
													"nativeSrc": "3328:221:12",
													"nodeType": "YulBlock",
													"src": "3328:221:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3345:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:12"
																	},
																	{
																		"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																		"kind": "string",
																		"nativeSrc": "3350:31:12",
																		"nodeType": "YulLiteral",
																		"src": "3350:31:12",
																		"type": "",
																		"value": "data:application/json;base64,"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3338:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3338:6:12"
																},
																"nativeSrc": "3338:44:12",
																"nodeType": "YulFunctionCall",
																"src": "3338:44:12"
															},
															"nativeSrc": "3338:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "3338:44:12"
														},
														{
															"nativeSrc": "3391:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3391:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3411:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3405:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3405:5:12"
																},
																"nativeSrc": "3405:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3405:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3395:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3395:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3466:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3466:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3474:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3474:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3462:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3462:3:12"
																		},
																		"nativeSrc": "3462:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3462:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3485:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3485:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3490:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3490:2:12",
																				"type": "",
																				"value": "29"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3481:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:12"
																		},
																		"nativeSrc": "3481:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:12:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3495:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3427:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "3427:34:12"
																},
																"nativeSrc": "3427:75:12",
																"nodeType": "YulFunctionCall",
																"src": "3427:75:12"
															},
															"nativeSrc": "3427:75:12",
															"nodeType": "YulExpressionStatement",
															"src": "3427:75:12"
														},
														{
															"nativeSrc": "3511:32:12",
															"nodeType": "YulAssignment",
															"src": "3511:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3526:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3526:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3531:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3522:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3522:3:12"
																		},
																		"nativeSrc": "3522:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3522:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3518:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3518:3:12"
																},
																"nativeSrc": "3518:25:12",
																"nodeType": "YulFunctionCall",
																"src": "3518:25:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3088:461:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3304:3:12",
														"nodeType": "YulTypedName",
														"src": "3304:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3309:6:12",
														"nodeType": "YulTypedName",
														"src": "3309:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3320:3:12",
														"nodeType": "YulTypedName",
														"src": "3320:3:12",
														"type": ""
													}
												],
												"src": "3088:461:12"
											},
											{
												"body": {
													"nativeSrc": "3586:95:12",
													"nodeType": "YulBlock",
													"src": "3586:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3603:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3603:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3610:3:12",
																				"nodeType": "YulLiteral",
																				"src": "3610:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3615:10:12",
																				"nodeType": "YulLiteral",
																				"src": "3615:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3606:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:12"
																		},
																		"nativeSrc": "3606:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3596:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:12"
																},
																"nativeSrc": "3596:31:12",
																"nodeType": "YulFunctionCall",
																"src": "3596:31:12"
															},
															"nativeSrc": "3596:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "3596:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3643:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3643:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3646:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3646:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3636:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:12"
																},
																"nativeSrc": "3636:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3636:15:12"
															},
															"nativeSrc": "3636:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3636:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3667:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3667:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3670:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3660:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:12"
																},
																"nativeSrc": "3660:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3660:15:12"
															},
															"nativeSrc": "3660:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3660:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3554:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3554:127:12"
											},
											{
												"body": {
													"nativeSrc": "3777:806:12",
													"nodeType": "YulBlock",
													"src": "3777:806:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3823:16:12",
																"nodeType": "YulBlock",
																"src": "3823:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3832:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3832:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3835:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3835:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3825:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3825:6:12"
																			},
																			"nativeSrc": "3825:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3825:12:12"
																		},
																		"nativeSrc": "3825:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3825:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3798:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3798:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3807:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3807:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3794:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3794:3:12"
																		},
																		"nativeSrc": "3794:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3794:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3819:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3819:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3790:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3790:3:12"
																},
																"nativeSrc": "3790:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3790:32:12"
															},
															"nativeSrc": "3787:52:12",
															"nodeType": "YulIf",
															"src": "3787:52:12"
														},
														{
															"nativeSrc": "3848:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3848:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3868:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3868:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3862:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3862:5:12"
																},
																"nativeSrc": "3862:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3862:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3852:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3852:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3887:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3887:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3897:18:12",
																"nodeType": "YulLiteral",
																"src": "3897:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3891:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3891:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3942:16:12",
																"nodeType": "YulBlock",
																"src": "3942:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3951:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3951:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3954:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3954:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3944:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3944:6:12"
																			},
																			"nativeSrc": "3944:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3944:12:12"
																		},
																		"nativeSrc": "3944:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3944:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3930:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3930:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3938:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3938:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3927:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:12"
																},
																"nativeSrc": "3927:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3927:14:12"
															},
															"nativeSrc": "3924:34:12",
															"nodeType": "YulIf",
															"src": "3924:34:12"
														},
														{
															"nativeSrc": "3967:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3967:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3981:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3981:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3992:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3992:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3977:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:12"
																},
																"nativeSrc": "3977:22:12",
																"nodeType": "YulFunctionCall",
																"src": "3977:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3971:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3971:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4047:16:12",
																"nodeType": "YulBlock",
																"src": "4047:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4056:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4056:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4059:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4059:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4049:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4049:6:12"
																			},
																			"nativeSrc": "4049:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4049:12:12"
																		},
																		"nativeSrc": "4049:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4049:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4026:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4026:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4030:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4030:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4022:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4022:3:12"
																				},
																				"nativeSrc": "4022:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4022:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4037:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4037:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4018:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:12"
																		},
																		"nativeSrc": "4018:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4018:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:12"
																},
																"nativeSrc": "4011:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4011:35:12"
															},
															"nativeSrc": "4008:55:12",
															"nodeType": "YulIf",
															"src": "4008:55:12"
														},
														{
															"nativeSrc": "4072:19:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4072:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4088:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4088:2:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4082:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4082:5:12"
																},
																"nativeSrc": "4082:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4082:9:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "4076:2:12",
																	"nodeType": "YulTypedName",
																	"src": "4076:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4114:22:12",
																"nodeType": "YulBlock",
																"src": "4114:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4116:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4116:16:12"
																			},
																			"nativeSrc": "4116:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4116:18:12"
																		},
																		"nativeSrc": "4116:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4116:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4106:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4106:2:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4110:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4110:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4103:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4103:2:12"
																},
																"nativeSrc": "4103:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4103:10:12"
															},
															"nativeSrc": "4100:36:12",
															"nodeType": "YulIf",
															"src": "4100:36:12"
														},
														{
															"nativeSrc": "4145:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4145:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4159:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4155:3:12"
																},
																"nativeSrc": "4155:7:12",
																"nodeType": "YulFunctionCall",
																"src": "4155:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4149:2:12",
																	"nodeType": "YulTypedName",
																	"src": "4149:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4171:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4171:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4191:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4191:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4185:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4185:5:12"
																},
																"nativeSrc": "4185:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4185:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4175:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4175:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4203:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4203:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4225:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4225:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4249:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "4249:2:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4253:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4253:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4245:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4245:3:12"
																								},
																								"nativeSrc": "4245:13:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4245:13:12"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4260:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "4260:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4241:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4241:3:12"
																						},
																						"nativeSrc": "4241:22:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4241:22:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4265:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4265:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4237:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4237:3:12"
																				},
																				"nativeSrc": "4237:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4237:31:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4270:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4270:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4233:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:12"
																		},
																		"nativeSrc": "4233:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4233:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4221:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4221:3:12"
																},
																"nativeSrc": "4221:53:12",
																"nodeType": "YulFunctionCall",
																"src": "4221:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4207:10:12",
																	"nodeType": "YulTypedName",
																	"src": "4207:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4333:22:12",
																"nodeType": "YulBlock",
																"src": "4333:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4335:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4335:16:12"
																			},
																			"nativeSrc": "4335:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4335:18:12"
																		},
																		"nativeSrc": "4335:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4335:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4292:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4292:10:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4304:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4304:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4289:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4289:2:12"
																		},
																		"nativeSrc": "4289:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4289:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4312:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4312:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4324:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4324:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4309:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4309:2:12"
																		},
																		"nativeSrc": "4309:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4309:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4286:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4286:2:12"
																},
																"nativeSrc": "4286:46:12",
																"nodeType": "YulFunctionCall",
																"src": "4286:46:12"
															},
															"nativeSrc": "4283:72:12",
															"nodeType": "YulIf",
															"src": "4283:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4371:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4371:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4375:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4375:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4364:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4364:6:12"
																},
																"nativeSrc": "4364:22:12",
																"nodeType": "YulFunctionCall",
																"src": "4364:22:12"
															},
															"nativeSrc": "4364:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "4364:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4402:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4402:6:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4410:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4410:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4395:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:12"
																},
																"nativeSrc": "4395:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4395:18:12"
															},
															"nativeSrc": "4395:18:12",
															"nodeType": "YulExpressionStatement",
															"src": "4395:18:12"
														},
														{
															"body": {
																"nativeSrc": "4459:16:12",
																"nodeType": "YulBlock",
																"src": "4459:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4468:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4468:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4471:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4471:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4461:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4461:6:12"
																			},
																			"nativeSrc": "4461:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4461:12:12"
																		},
																		"nativeSrc": "4461:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4461:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4436:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4436:2:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4440:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4440:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4432:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4432:3:12"
																				},
																				"nativeSrc": "4432:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4432:11:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4445:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4445:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4428:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:12"
																		},
																		"nativeSrc": "4428:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4428:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4450:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4450:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4425:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4425:2:12"
																},
																"nativeSrc": "4425:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4425:33:12"
															},
															"nativeSrc": "4422:53:12",
															"nodeType": "YulIf",
															"src": "4422:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4523:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4523:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4527:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4527:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4519:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4519:3:12"
																		},
																		"nativeSrc": "4519:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4519:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4536:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4536:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4544:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4544:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4532:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:12"
																		},
																		"nativeSrc": "4532:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4532:15:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4549:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4549:2:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4484:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "4484:34:12"
																},
																"nativeSrc": "4484:68:12",
																"nodeType": "YulFunctionCall",
																"src": "4484:68:12"
															},
															"nativeSrc": "4484:68:12",
															"nodeType": "YulExpressionStatement",
															"src": "4484:68:12"
														},
														{
															"nativeSrc": "4561:16:12",
															"nodeType": "YulAssignment",
															"src": "4561:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4571:6:12",
																"nodeType": "YulIdentifier",
																"src": "4571:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4561:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "3686:897:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3743:9:12",
														"nodeType": "YulTypedName",
														"src": "3743:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3754:7:12",
														"nodeType": "YulTypedName",
														"src": "3754:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3766:6:12",
														"nodeType": "YulTypedName",
														"src": "3766:6:12",
														"type": ""
													}
												],
												"src": "3686:897:12"
											},
											{
												"body": {
													"nativeSrc": "4667:194:12",
													"nodeType": "YulBlock",
													"src": "4667:194:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4713:16:12",
																"nodeType": "YulBlock",
																"src": "4713:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4722:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4722:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4725:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4725:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4715:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4715:6:12"
																			},
																			"nativeSrc": "4715:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4715:12:12"
																		},
																		"nativeSrc": "4715:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4715:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4688:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4688:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4697:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4684:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:12"
																		},
																		"nativeSrc": "4684:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4684:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4709:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4680:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:12"
																},
																"nativeSrc": "4680:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4680:32:12"
															},
															"nativeSrc": "4677:52:12",
															"nodeType": "YulIf",
															"src": "4677:52:12"
														},
														{
															"nativeSrc": "4738:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4738:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4757:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4757:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4751:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4751:5:12"
																},
																"nativeSrc": "4751:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4751:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4742:5:12",
																	"nodeType": "YulTypedName",
																	"src": "4742:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4815:16:12",
																"nodeType": "YulBlock",
																"src": "4815:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4824:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4827:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4827:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4817:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4817:6:12"
																			},
																			"nativeSrc": "4817:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4817:12:12"
																		},
																		"nativeSrc": "4817:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4817:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4789:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4789:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4800:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4800:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4807:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4807:4:12",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4796:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4796:3:12"
																				},
																				"nativeSrc": "4796:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4796:16:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4786:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4786:2:12"
																		},
																		"nativeSrc": "4786:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4779:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4779:6:12"
																},
																"nativeSrc": "4779:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4779:35:12"
															},
															"nativeSrc": "4776:55:12",
															"nodeType": "YulIf",
															"src": "4776:55:12"
														},
														{
															"nativeSrc": "4840:15:12",
															"nodeType": "YulAssignment",
															"src": "4840:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "4850:5:12",
																"nodeType": "YulIdentifier",
																"src": "4850:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4840:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "4588:273:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4633:9:12",
														"nodeType": "YulTypedName",
														"src": "4633:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4644:7:12",
														"nodeType": "YulTypedName",
														"src": "4644:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4656:6:12",
														"nodeType": "YulTypedName",
														"src": "4656:6:12",
														"type": ""
													}
												],
												"src": "4588:273:12"
											},
											{
												"body": {
													"nativeSrc": "5652:980:12",
													"nodeType": "YulBlock",
													"src": "5652:980:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5669:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5669:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5678:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5678:3:12",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5683:20:12",
																				"nodeType": "YulLiteral",
																				"src": "5683:20:12",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5674:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5674:3:12"
																		},
																		"nativeSrc": "5674:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5674:30:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5662:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:12"
																},
																"nativeSrc": "5662:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5662:43:12"
															},
															"nativeSrc": "5662:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "5662:43:12"
														},
														{
															"nativeSrc": "5714:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5714:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5734:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5734:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5728:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5728:5:12"
																},
																"nativeSrc": "5728:13:12",
																"nodeType": "YulFunctionCall",
																"src": "5728:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5718:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5718:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5789:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5789:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5797:4:12",
																				"nodeType": "YulLiteral",
																				"src": "5797:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5785:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5785:3:12"
																		},
																		"nativeSrc": "5785:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5785:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5808:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5808:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5813:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5813:1:12",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5804:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5804:3:12"
																		},
																		"nativeSrc": "5804:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5804:11:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5817:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5817:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5750:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "5750:34:12"
																},
																"nativeSrc": "5750:74:12",
																"nodeType": "YulFunctionCall",
																"src": "5750:74:12"
															},
															"nativeSrc": "5750:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "5750:74:12"
														},
														{
															"nativeSrc": "5833:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5833:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5847:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5847:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5852:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5843:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:12"
																},
																"nativeSrc": "5843:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5843:16:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5837:2:12",
																	"nodeType": "YulTypedName",
																	"src": "5837:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5879:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "5879:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5883:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5883:1:12",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5875:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5875:3:12"
																		},
																		"nativeSrc": "5875:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5875:10:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5891:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5891:3:12",
																				"type": "",
																				"value": "121"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5896:36:12",
																				"nodeType": "YulLiteral",
																				"src": "5896:36:12",
																				"type": "",
																				"value": "0x1116113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5887:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:12"
																		},
																		"nativeSrc": "5887:46:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5887:46:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5868:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5868:6:12"
																},
																"nativeSrc": "5868:66:12",
																"nodeType": "YulFunctionCall",
																"src": "5868:66:12"
															},
															"nativeSrc": "5868:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "5868:66:12"
														},
														{
															"nativeSrc": "5943:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5943:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5965:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5965:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5959:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5959:5:12"
																},
																"nativeSrc": "5959:13:12",
																"nodeType": "YulFunctionCall",
																"src": "5959:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "5947:8:12",
																	"nodeType": "YulTypedName",
																	"src": "5947:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6020:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6020:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6028:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6028:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6016:3:12"
																		},
																		"nativeSrc": "6016:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6016:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6039:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6039:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6043:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:12",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6035:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:12"
																		},
																		"nativeSrc": "6035:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:11:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6048:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6048:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5981:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "5981:34:12"
																},
																"nativeSrc": "5981:76:12",
																"nodeType": "YulFunctionCall",
																"src": "5981:76:12"
															},
															"nativeSrc": "5981:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "5981:76:12"
														},
														{
															"nativeSrc": "6066:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6066:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6080:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6080:2:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6084:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6084:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6076:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6076:3:12"
																},
																"nativeSrc": "6076:17:12",
																"nodeType": "YulFunctionCall",
																"src": "6076:17:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6070:2:12",
																	"nodeType": "YulTypedName",
																	"src": "6070:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6113:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6113:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6117:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6117:2:12",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6109:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:12"
																		},
																		"nativeSrc": "6109:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6109:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6126:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6126:3:12",
																				"type": "",
																				"value": "169"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6131:24:12",
																				"nodeType": "YulLiteral",
																				"src": "6131:24:12",
																				"type": "",
																				"value": "0x11161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6122:3:12"
																		},
																		"nativeSrc": "6122:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6122:34:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6102:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:12"
																},
																"nativeSrc": "6102:55:12",
																"nodeType": "YulFunctionCall",
																"src": "6102:55:12"
															},
															"nativeSrc": "6102:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "6102:55:12"
														},
														{
															"nativeSrc": "6166:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6166:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6188:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6188:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6182:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6182:5:12"
																},
																"nativeSrc": "6182:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6182:13:12"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nativeSrc": "6170:8:12",
																	"nodeType": "YulTypedName",
																	"src": "6170:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6243:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6243:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6251:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6251:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6239:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6239:3:12"
																		},
																		"nativeSrc": "6239:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6239:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6262:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6262:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6266:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6266:2:12",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6258:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6258:3:12"
																		},
																		"nativeSrc": "6258:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:11:12"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "6271:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6271:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6204:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "6204:34:12"
																},
																"nativeSrc": "6204:76:12",
																"nodeType": "YulFunctionCall",
																"src": "6204:76:12"
															},
															"nativeSrc": "6204:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "6204:76:12"
														},
														{
															"nativeSrc": "6289:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6289:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "6303:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6303:2:12"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "6307:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6307:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6299:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:12"
																},
																"nativeSrc": "6299:17:12",
																"nodeType": "YulFunctionCall",
																"src": "6299:17:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "6293:2:12",
																	"nodeType": "YulTypedName",
																	"src": "6293:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "6336:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6336:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6340:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6340:2:12",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6332:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:12"
																		},
																		"nativeSrc": "6332:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6349:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6349:3:12",
																				"type": "",
																				"value": "105"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:40:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:40:12",
																				"type": "",
																				"value": "0x1116113b30b63ab2a232b1b4b6b0b639911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6345:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:12"
																		},
																		"nativeSrc": "6345:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:50:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6325:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:12"
																},
																"nativeSrc": "6325:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6325:71:12"
															},
															"nativeSrc": "6325:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6325:71:12"
														},
														{
															"nativeSrc": "6405:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6405:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6427:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6427:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6421:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6421:5:12"
																},
																"nativeSrc": "6421:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6421:13:12"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nativeSrc": "6409:8:12",
																	"nodeType": "YulTypedName",
																	"src": "6409:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "6482:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6482:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6490:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6490:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6478:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6478:3:12"
																		},
																		"nativeSrc": "6478:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6478:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "6501:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6501:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6505:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6505:2:12",
																				"type": "",
																				"value": "56"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6497:3:12"
																		},
																		"nativeSrc": "6497:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6497:11:12"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "6510:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6510:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6443:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "6443:34:12"
																},
																"nativeSrc": "6443:76:12",
																"nodeType": "YulFunctionCall",
																"src": "6443:76:12"
															},
															"nativeSrc": "6443:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "6443:76:12"
														},
														{
															"nativeSrc": "6528:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6528:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "6542:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6542:2:12"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "6546:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6546:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6538:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:12"
																},
																"nativeSrc": "6538:17:12",
																"nodeType": "YulFunctionCall",
																"src": "6538:17:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "6532:2:12",
																	"nodeType": "YulTypedName",
																	"src": "6532:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "6575:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6575:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6579:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6579:2:12",
																				"type": "",
																				"value": "56"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6571:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6571:3:12"
																		},
																		"nativeSrc": "6571:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6571:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6588:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6588:3:12",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6593:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6593:4:12",
																				"type": "",
																				"value": "8829"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6584:3:12"
																		},
																		"nativeSrc": "6584:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6584:14:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6564:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:12"
																},
																"nativeSrc": "6564:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6564:35:12"
															},
															"nativeSrc": "6564:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6564:35:12"
														},
														{
															"nativeSrc": "6608:18:12",
															"nodeType": "YulAssignment",
															"src": "6608:18:12",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "6619:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6619:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6623:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6623:2:12",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:12"
																},
																"nativeSrc": "6615:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6615:11:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6608:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6608:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4866:1766:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5604:3:12",
														"nodeType": "YulTypedName",
														"src": "5604:3:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5609:6:12",
														"nodeType": "YulTypedName",
														"src": "5609:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5617:6:12",
														"nodeType": "YulTypedName",
														"src": "5617:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5625:6:12",
														"nodeType": "YulTypedName",
														"src": "5625:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5633:6:12",
														"nodeType": "YulTypedName",
														"src": "5633:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5644:3:12",
														"nodeType": "YulTypedName",
														"src": "5644:3:12",
														"type": ""
													}
												],
												"src": "4866:1766:12"
											},
											{
												"body": {
													"nativeSrc": "6738:76:12",
													"nodeType": "YulBlock",
													"src": "6738:76:12",
													"statements": [
														{
															"nativeSrc": "6748:26:12",
															"nodeType": "YulAssignment",
															"src": "6748:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6760:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6760:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6771:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6756:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:12"
																},
																"nativeSrc": "6756:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6756:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6748:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6790:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6790:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6801:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6801:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6783:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6783:6:12"
																},
																"nativeSrc": "6783:25:12",
																"nodeType": "YulFunctionCall",
																"src": "6783:25:12"
															},
															"nativeSrc": "6783:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "6783:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6637:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6707:9:12",
														"nodeType": "YulTypedName",
														"src": "6707:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6718:6:12",
														"nodeType": "YulTypedName",
														"src": "6718:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6729:4:12",
														"nodeType": "YulTypedName",
														"src": "6729:4:12",
														"type": ""
													}
												],
												"src": "6637:177:12"
											},
											{
												"body": {
													"nativeSrc": "6900:103:12",
													"nodeType": "YulBlock",
													"src": "6900:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6946:16:12",
																"nodeType": "YulBlock",
																"src": "6946:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6955:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6955:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6958:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6958:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6948:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6948:6:12"
																			},
																			"nativeSrc": "6948:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6948:12:12"
																		},
																		"nativeSrc": "6948:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6948:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6921:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6921:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6930:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6930:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6917:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6917:3:12"
																		},
																		"nativeSrc": "6917:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6917:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6942:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6942:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6913:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6913:3:12"
																},
																"nativeSrc": "6913:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6913:32:12"
															},
															"nativeSrc": "6910:52:12",
															"nodeType": "YulIf",
															"src": "6910:52:12"
														},
														{
															"nativeSrc": "6971:26:12",
															"nodeType": "YulAssignment",
															"src": "6971:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6987:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6987:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6981:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6981:5:12"
																},
																"nativeSrc": "6981:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6981:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6971:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6971:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6819:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6866:9:12",
														"nodeType": "YulTypedName",
														"src": "6866:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6877:7:12",
														"nodeType": "YulTypedName",
														"src": "6877:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6889:6:12",
														"nodeType": "YulTypedName",
														"src": "6889:6:12",
														"type": ""
													}
												],
												"src": "6819:184:12"
											},
											{
												"body": {
													"nativeSrc": "8092:1213:12",
													"nodeType": "YulBlock",
													"src": "8092:1213:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8109:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8109:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8118:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8118:3:12",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8123:20:12",
																				"nodeType": "YulLiteral",
																				"src": "8123:20:12",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8114:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8114:3:12"
																		},
																		"nativeSrc": "8114:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8114:30:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8102:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8102:6:12"
																},
																"nativeSrc": "8102:43:12",
																"nodeType": "YulFunctionCall",
																"src": "8102:43:12"
															},
															"nativeSrc": "8102:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "8102:43:12"
														},
														{
															"nativeSrc": "8154:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8154:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8174:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8174:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8168:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8168:5:12"
																},
																"nativeSrc": "8168:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8168:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8158:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8158:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8229:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8229:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8237:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8237:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8225:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8225:3:12"
																		},
																		"nativeSrc": "8225:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8225:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8248:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8248:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8253:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8253:1:12",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8244:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8244:3:12"
																		},
																		"nativeSrc": "8244:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8244:11:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8257:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8257:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8190:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "8190:34:12"
																},
																"nativeSrc": "8190:74:12",
																"nodeType": "YulFunctionCall",
																"src": "8190:74:12"
															},
															"nativeSrc": "8190:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "8190:74:12"
														},
														{
															"nativeSrc": "8273:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8273:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8287:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8287:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8292:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8292:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8283:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8283:3:12"
																},
																"nativeSrc": "8283:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8283:16:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8277:2:12",
																	"nodeType": "YulTypedName",
																	"src": "8277:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8319:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8319:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8323:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8323:1:12",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8315:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8315:3:12"
																		},
																		"nativeSrc": "8315:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8315:10:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8331:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8331:3:12",
																				"type": "",
																				"value": "121"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8336:36:12",
																				"nodeType": "YulLiteral",
																				"src": "8336:36:12",
																				"type": "",
																				"value": "0x1116113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8327:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8327:3:12"
																		},
																		"nativeSrc": "8327:46:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8327:46:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8308:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8308:6:12"
																},
																"nativeSrc": "8308:66:12",
																"nodeType": "YulFunctionCall",
																"src": "8308:66:12"
															},
															"nativeSrc": "8308:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "8308:66:12"
														},
														{
															"nativeSrc": "8383:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8383:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8405:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8399:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8399:5:12"
																},
																"nativeSrc": "8399:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8399:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "8387:8:12",
																	"nodeType": "YulTypedName",
																	"src": "8387:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8460:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8460:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8468:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8468:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8456:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8456:3:12"
																		},
																		"nativeSrc": "8456:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8456:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8479:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8479:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8483:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8483:2:12",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8475:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8475:3:12"
																		},
																		"nativeSrc": "8475:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8475:11:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "8488:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8488:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8421:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "8421:34:12"
																},
																"nativeSrc": "8421:76:12",
																"nodeType": "YulFunctionCall",
																"src": "8421:76:12"
															},
															"nativeSrc": "8421:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "8421:76:12"
														},
														{
															"nativeSrc": "8506:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8506:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8520:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "8520:2:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "8524:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8524:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8516:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8516:3:12"
																},
																"nativeSrc": "8516:17:12",
																"nodeType": "YulFunctionCall",
																"src": "8516:17:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "8510:2:12",
																	"nodeType": "YulTypedName",
																	"src": "8510:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "8553:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8553:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8557:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8557:2:12",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8549:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8549:3:12"
																		},
																		"nativeSrc": "8549:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8549:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8566:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8566:3:12",
																				"type": "",
																				"value": "169"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8571:24:12",
																				"nodeType": "YulLiteral",
																				"src": "8571:24:12",
																				"type": "",
																				"value": "0x11161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8562:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8562:3:12"
																		},
																		"nativeSrc": "8562:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8562:34:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8542:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8542:6:12"
																},
																"nativeSrc": "8542:55:12",
																"nodeType": "YulFunctionCall",
																"src": "8542:55:12"
															},
															"nativeSrc": "8542:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "8542:55:12"
														},
														{
															"nativeSrc": "8606:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8606:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8628:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8628:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8622:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8622:5:12"
																},
																"nativeSrc": "8622:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8622:13:12"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nativeSrc": "8610:8:12",
																	"nodeType": "YulTypedName",
																	"src": "8610:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8683:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8683:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8691:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8691:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8679:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8679:3:12"
																		},
																		"nativeSrc": "8679:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8679:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "8702:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8702:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8706:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8706:2:12",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:12"
																		},
																		"nativeSrc": "8698:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:11:12"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "8711:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8711:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8644:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "8644:34:12"
																},
																"nativeSrc": "8644:76:12",
																"nodeType": "YulFunctionCall",
																"src": "8644:76:12"
															},
															"nativeSrc": "8644:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "8644:76:12"
														},
														{
															"nativeSrc": "8729:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8729:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "8743:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "8743:2:12"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "8747:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8747:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8739:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8739:3:12"
																},
																"nativeSrc": "8739:17:12",
																"nodeType": "YulFunctionCall",
																"src": "8739:17:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "8733:2:12",
																	"nodeType": "YulTypedName",
																	"src": "8733:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "8776:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8776:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8780:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8780:2:12",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8772:3:12"
																		},
																		"nativeSrc": "8772:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8772:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8789:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8789:3:12",
																				"type": "",
																				"value": "153"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8794:28:12",
																				"nodeType": "YulLiteral",
																				"src": "8794:28:12",
																				"type": "",
																				"value": "0x1116113130b630b731b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8785:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8785:3:12"
																		},
																		"nativeSrc": "8785:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8785:38:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8765:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8765:6:12"
																},
																"nativeSrc": "8765:59:12",
																"nodeType": "YulFunctionCall",
																"src": "8765:59:12"
															},
															"nativeSrc": "8765:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "8765:59:12"
														},
														{
															"nativeSrc": "8833:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8833:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8855:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8855:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8849:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8849:5:12"
																},
																"nativeSrc": "8849:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8849:13:12"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nativeSrc": "8837:8:12",
																	"nodeType": "YulTypedName",
																	"src": "8837:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "8910:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8910:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8918:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8918:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8906:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8906:3:12"
																		},
																		"nativeSrc": "8906:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8906:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "8929:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8929:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8933:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8933:2:12",
																				"type": "",
																				"value": "50"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8925:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8925:3:12"
																		},
																		"nativeSrc": "8925:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8925:11:12"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "8938:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8938:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8871:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "8871:34:12"
																},
																"nativeSrc": "8871:76:12",
																"nodeType": "YulFunctionCall",
																"src": "8871:76:12"
															},
															"nativeSrc": "8871:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "8871:76:12"
														},
														{
															"nativeSrc": "8956:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8956:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "8970:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "8970:2:12"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "8974:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8974:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8966:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8966:3:12"
																},
																"nativeSrc": "8966:17:12",
																"nodeType": "YulFunctionCall",
																"src": "8966:17:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "8960:2:12",
																	"nodeType": "YulTypedName",
																	"src": "8960:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "9003:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9003:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9007:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9007:2:12",
																				"type": "",
																				"value": "50"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:12"
																		},
																		"nativeSrc": "8999:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9016:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9016:3:12",
																				"type": "",
																				"value": "177"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9021:22:12",
																				"nodeType": "YulLiteral",
																				"src": "9021:22:12",
																				"type": "",
																				"value": "0x11161139b637ba111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9012:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9012:3:12"
																		},
																		"nativeSrc": "9012:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9012:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8992:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8992:6:12"
																},
																"nativeSrc": "8992:53:12",
																"nodeType": "YulFunctionCall",
																"src": "8992:53:12"
															},
															"nativeSrc": "8992:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "8992:53:12"
														},
														{
															"nativeSrc": "9054:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9054:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9076:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9076:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9070:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9070:5:12"
																},
																"nativeSrc": "9070:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9070:13:12"
															},
															"variables": [
																{
																	"name": "length_4",
																	"nativeSrc": "9058:8:12",
																	"nodeType": "YulTypedName",
																	"src": "9058:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "9131:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9131:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9139:4:12",
																				"nodeType": "YulLiteral",
																				"src": "9139:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9127:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9127:3:12"
																		},
																		"nativeSrc": "9127:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9127:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "9150:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9150:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9154:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9154:2:12",
																				"type": "",
																				"value": "60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9146:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:12"
																		},
																		"nativeSrc": "9146:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9146:11:12"
																	},
																	{
																		"name": "length_4",
																		"nativeSrc": "9159:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "9159:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9092:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "9092:34:12"
																},
																"nativeSrc": "9092:76:12",
																"nodeType": "YulFunctionCall",
																"src": "9092:76:12"
															},
															"nativeSrc": "9092:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "9092:76:12"
														},
														{
															"nativeSrc": "9177:122:12",
															"nodeType": "YulAssignment",
															"src": "9177:122:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nativeSrc": "9232:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9232:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nativeSrc": "9278:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "9278:2:12"
																									},
																									{
																										"name": "length_4",
																										"nativeSrc": "9282:8:12",
																										"nodeType": "YulIdentifier",
																										"src": "9282:8:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9274:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9274:3:12"
																								},
																								"nativeSrc": "9274:17:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9274:17:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9293:2:12",
																								"nodeType": "YulLiteral",
																								"src": "9293:2:12",
																								"type": "",
																								"value": "60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9270:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9270:3:12"
																						},
																						"nativeSrc": "9270:26:12",
																						"nodeType": "YulFunctionCall",
																						"src": "9270:26:12"
																					}
																				],
																				"functionName": {
																					"name": "abi_encode_stringliteral_fd1e",
																					"nativeSrc": "9240:29:12",
																					"nodeType": "YulIdentifier",
																					"src": "9240:29:12"
																				},
																				"nativeSrc": "9240:57:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9240:57:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "9214:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9214:17:12"
																		},
																		"nativeSrc": "9214:84:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9214:84:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_stringliteral_8e2f",
																	"nativeSrc": "9184:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "9184:29:12"
																},
																"nativeSrc": "9184:115:12",
																"nodeType": "YulFunctionCall",
																"src": "9184:115:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9177:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9177:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d_t_string_memory_ptr_t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140_t_string_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7008:2297:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8028:3:12",
														"nodeType": "YulTypedName",
														"src": "8028:3:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8033:6:12",
														"nodeType": "YulTypedName",
														"src": "8033:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8041:6:12",
														"nodeType": "YulTypedName",
														"src": "8041:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8049:6:12",
														"nodeType": "YulTypedName",
														"src": "8049:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8057:6:12",
														"nodeType": "YulTypedName",
														"src": "8057:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8065:6:12",
														"nodeType": "YulTypedName",
														"src": "8065:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8073:6:12",
														"nodeType": "YulTypedName",
														"src": "8073:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8084:3:12",
														"nodeType": "YulTypedName",
														"src": "8084:3:12",
														"type": ""
													}
												],
												"src": "7008:2297:12"
											},
											{
												"body": {
													"nativeSrc": "9342:95:12",
													"nodeType": "YulBlock",
													"src": "9342:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9359:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9359:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9366:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9366:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9371:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9371:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9362:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9362:3:12"
																		},
																		"nativeSrc": "9362:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9352:6:12"
																},
																"nativeSrc": "9352:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9352:31:12"
															},
															"nativeSrc": "9352:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9352:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9399:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9399:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9402:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:12"
																},
																"nativeSrc": "9392:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9392:15:12"
															},
															"nativeSrc": "9392:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9392:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9423:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9423:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9426:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9426:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9416:6:12"
																},
																"nativeSrc": "9416:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9416:15:12"
															},
															"nativeSrc": "9416:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9416:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9310:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9310:127:12"
											},
											{
												"body": {
													"nativeSrc": "9490:77:12",
													"nodeType": "YulBlock",
													"src": "9490:77:12",
													"statements": [
														{
															"nativeSrc": "9500:16:12",
															"nodeType": "YulAssignment",
															"src": "9500:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9511:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9511:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9514:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9514:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9507:3:12"
																},
																"nativeSrc": "9507:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9507:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9500:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9539:22:12",
																"nodeType": "YulBlock",
																"src": "9539:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9541:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9541:16:12"
																			},
																			"nativeSrc": "9541:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9541:18:12"
																		},
																		"nativeSrc": "9541:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9541:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9531:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9531:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9534:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9534:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9528:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9528:2:12"
																},
																"nativeSrc": "9528:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9528:10:12"
															},
															"nativeSrc": "9525:36:12",
															"nodeType": "YulIf",
															"src": "9525:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9442:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9473:1:12",
														"nodeType": "YulTypedName",
														"src": "9473:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9476:1:12",
														"nodeType": "YulTypedName",
														"src": "9476:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9482:3:12",
														"nodeType": "YulTypedName",
														"src": "9482:3:12",
														"type": ""
													}
												],
												"src": "9442:125:12"
											},
											{
												"body": {
													"nativeSrc": "9604:95:12",
													"nodeType": "YulBlock",
													"src": "9604:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9621:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9621:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9628:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9628:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9633:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9633:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9624:3:12"
																		},
																		"nativeSrc": "9624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9614:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9614:6:12"
																},
																"nativeSrc": "9614:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9614:31:12"
															},
															"nativeSrc": "9614:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9614:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9661:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9661:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9664:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9664:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9654:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:12"
																},
																"nativeSrc": "9654:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9654:15:12"
															},
															"nativeSrc": "9654:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9654:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9685:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9685:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9688:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9688:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9678:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:12"
																},
																"nativeSrc": "9678:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9678:15:12"
															},
															"nativeSrc": "9678:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9678:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9572:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9572:127:12"
											},
											{
												"body": {
													"nativeSrc": "9750:171:12",
													"nodeType": "YulBlock",
													"src": "9750:171:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9781:111:12",
																"nodeType": "YulBlock",
																"src": "9781:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9802:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9802:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9809:3:12",
																							"nodeType": "YulLiteral",
																							"src": "9809:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9814:10:12",
																							"nodeType": "YulLiteral",
																							"src": "9814:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9805:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "9805:3:12"
																					},
																					"nativeSrc": "9805:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9805:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9795:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9795:6:12"
																			},
																			"nativeSrc": "9795:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9795:31:12"
																		},
																		"nativeSrc": "9795:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9795:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9846:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9846:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9849:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9849:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9839:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9839:6:12"
																			},
																			"nativeSrc": "9839:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9839:15:12"
																		},
																		"nativeSrc": "9839:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9839:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9874:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9874:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9877:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9877:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9867:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9867:6:12"
																			},
																			"nativeSrc": "9867:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9867:15:12"
																		},
																		"nativeSrc": "9867:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9867:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9770:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9770:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9763:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9763:6:12"
																},
																"nativeSrc": "9763:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9763:9:12"
															},
															"nativeSrc": "9760:132:12",
															"nodeType": "YulIf",
															"src": "9760:132:12"
														},
														{
															"nativeSrc": "9901:14:12",
															"nodeType": "YulAssignment",
															"src": "9901:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9910:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9910:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9913:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9913:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9906:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:12"
																},
																"nativeSrc": "9906:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9906:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9901:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9901:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9704:217:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9735:1:12",
														"nodeType": "YulTypedName",
														"src": "9735:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9738:1:12",
														"nodeType": "YulTypedName",
														"src": "9738:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9744:1:12",
														"nodeType": "YulTypedName",
														"src": "9744:1:12",
														"type": ""
													}
												],
												"src": "9704:217:12"
											},
											{
												"body": {
													"nativeSrc": "9978:116:12",
													"nodeType": "YulBlock",
													"src": "9978:116:12",
													"statements": [
														{
															"nativeSrc": "9988:20:12",
															"nodeType": "YulAssignment",
															"src": "9988:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10003:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10003:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10006:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10006:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9999:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9999:3:12"
																},
																"nativeSrc": "9999:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9999:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9988:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "9988:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10066:22:12",
																"nodeType": "YulBlock",
																"src": "10066:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10068:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10068:16:12"
																			},
																			"nativeSrc": "10068:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10068:18:12"
																		},
																		"nativeSrc": "10068:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10068:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10037:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "10037:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10030:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10030:6:12"
																				},
																				"nativeSrc": "10030:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10030:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10044:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "10044:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10051:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "10051:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10060:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "10060:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10047:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "10047:3:12"
																						},
																						"nativeSrc": "10047:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "10047:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10041:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "10041:2:12"
																				},
																				"nativeSrc": "10041:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10041:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10027:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10027:2:12"
																		},
																		"nativeSrc": "10027:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10027:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10020:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10020:6:12"
																},
																"nativeSrc": "10020:45:12",
																"nodeType": "YulFunctionCall",
																"src": "10020:45:12"
															},
															"nativeSrc": "10017:71:12",
															"nodeType": "YulIf",
															"src": "10017:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9926:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9957:1:12",
														"nodeType": "YulTypedName",
														"src": "9957:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9960:1:12",
														"nodeType": "YulTypedName",
														"src": "9960:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9966:7:12",
														"nodeType": "YulTypedName",
														"src": "9966:7:12",
														"type": ""
													}
												],
												"src": "9926:168:12"
											},
											{
												"body": {
													"nativeSrc": "10286:309:12",
													"nodeType": "YulBlock",
													"src": "10286:309:12",
													"statements": [
														{
															"nativeSrc": "10296:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10296:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10316:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10316:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10310:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10310:5:12"
																},
																"nativeSrc": "10310:13:12",
																"nodeType": "YulFunctionCall",
																"src": "10310:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10300:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10300:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10371:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10371:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10379:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10379:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10367:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:12"
																		},
																		"nativeSrc": "10367:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10367:17:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10386:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10386:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10391:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10391:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10332:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "10332:34:12"
																},
																"nativeSrc": "10332:66:12",
																"nodeType": "YulFunctionCall",
																"src": "10332:66:12"
															},
															"nativeSrc": "10332:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "10332:66:12"
														},
														{
															"nativeSrc": "10407:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10407:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10424:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10424:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10429:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10429:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10420:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10420:3:12"
																},
																"nativeSrc": "10420:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10420:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "10411:5:12",
																	"nodeType": "YulTypedName",
																	"src": "10411:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10445:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10445:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10467:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10467:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10461:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10461:5:12"
																},
																"nativeSrc": "10461:13:12",
																"nodeType": "YulFunctionCall",
																"src": "10461:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "10449:8:12",
																	"nodeType": "YulTypedName",
																	"src": "10449:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10522:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10522:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10530:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10530:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10518:3:12"
																		},
																		"nativeSrc": "10518:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10518:17:12"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "10537:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10537:5:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10544:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "10544:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10483:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "10483:34:12"
																},
																"nativeSrc": "10483:70:12",
																"nodeType": "YulFunctionCall",
																"src": "10483:70:12"
															},
															"nativeSrc": "10483:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "10483:70:12"
														},
														{
															"nativeSrc": "10562:27:12",
															"nodeType": "YulAssignment",
															"src": "10562:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "10573:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10573:5:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10580:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "10580:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10569:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10569:3:12"
																},
																"nativeSrc": "10569:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10569:20:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10562:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10562:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10099:496:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10254:3:12",
														"nodeType": "YulTypedName",
														"src": "10254:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10259:6:12",
														"nodeType": "YulTypedName",
														"src": "10259:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10267:6:12",
														"nodeType": "YulTypedName",
														"src": "10267:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10278:3:12",
														"nodeType": "YulTypedName",
														"src": "10278:3:12",
														"type": ""
													}
												],
												"src": "10099:496:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_stringliteral_fd1e(pos) -> end\n    {\n        mstore(pos, shl(137, 0x111611383937b832b93a34b2b9911d))\n        end := add(pos, 15)\n    }\n    function abi_encode_stringliteral_8e2f(pos) -> end\n    {\n        mstore(pos, \"}\")\n        end := add(pos, 1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), shl(121, 0x1116113232b9b1b934b83a34b7b7111d11))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 26), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 26), shl(169, 0x11161134b6b0b3b2911d11))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 37), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 37), shl(137, 0x111611383937b832b93a34b2b9911d))\n        let length_3 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_3, 52), length_3)\n        let _4 := add(_3, length_3)\n        mstore(add(_4, 52), \"}\")\n        end := add(_4, 53)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 29), length)\n        end := add(add(pos, length), 29)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), shl(121, 0x1116113232b9b1b934b83a34b7b7111d11))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 26), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 26), shl(169, 0x11161134b6b0b3b2911d11))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 37), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 37), shl(105, 0x1116113b30b63ab2a232b1b4b6b0b639911d11))\n        let length_3 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_3, 56), length_3)\n        let _4 := add(_3, length_3)\n        mstore(add(_4, 56), shl(240, 8829))\n        end := add(_4, 58)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d_t_string_memory_ptr_t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140_t_string_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), shl(121, 0x1116113232b9b1b934b83a34b7b7111d11))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 26), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 26), shl(169, 0x11161134b6b0b3b2911d11))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 37), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 37), shl(153, 0x1116113130b630b731b2911d11))\n        let length_3 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_3, 50), length_3)\n        let _4 := add(_3, length_3)\n        mstore(add(_4, 50), shl(177, 0x11161139b637ba111d11))\n        let length_4 := mload(value4)\n        copy_memory_to_memory_with_cleanup(add(value4, 0x20), add(_4, 60), length_4)\n        end := abi_encode_stringliteral_8e2f(abi_encode_string(value5, abi_encode_stringliteral_fd1e(add(add(_4, length_4), 60))))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80636c037f8a14610043578063725fa09c1461006c578063894b4c2e14610074575b5f80fd5b6100566100513660046106de565b610087565b6040516100639190610717565b60405180910390f35b610056610132565b6100566100823660046106de565b610277565b606061010c6100ac60408051808201909152600381526231323360e81b602082015290565b60408051808201825260048152631cdb1bdd60e21b602080830191909152825180820184525f81528351808501855260028152615b5d60f01b8184015293516100f89594919201610764565b6040516020818303038152906040526103a9565b60405160200161011c9190610831565b6040516020818303038152906040529050919050565b60605f339050610252816001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa158015610176573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261019d9190810190610889565b60408051808201909152601281527129b2b6b4a33ab733b4b13632903a37b5b2b760711b602082015260408051602081019091525f815261023f856001600160a01b0316633e7e86696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102379190610931565b60ff166104f8565b6040516020016100f89493929190610958565b6040516020016102629190610831565b60405160208183030381529060405291505090565b60603361038261028684610588565b604080518082019091526007815266746f6b656e313160c81b602082015260408051602081019091525f8152604051631398fee160e31b815260048101889052610323906001600160a01b03871690639cc7f708906024015b602060405180830381865afa1580156102fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031e9190610a2a565b6104f8565b60405163131f9f3f60e11b815260048101899052610354906001600160a01b0388169063263f3e7e906024016102df565b6040805180820190915260028152617b7d60f01b60208201526040516020016100f896959493929190610a41565b6040516020016103929190610831565b604051602081830303815290604052915050919050565b606081515f036103c657505060408051602081019091525f815290565b5f604051806060016040528060408152602001610bf26040913990505f6003845160026103f39190610b7a565b6103fd9190610b8d565b610408906004610bac565b67ffffffffffffffff81111561042057610420610875565b6040519080825280601f01601f19166020018201604052801561044a576020820181803683370190505b509050600182016020820185865187015b808210156104b6576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184535060018301925061045b565b50506003865106600181146104d257600281146104e5576104ed565b603d6001830353603d60028303536104ed565b603d60018303535b509195945050505050565b60605f61050483610606565b60010190505f8167ffffffffffffffff81111561052357610523610875565b6040519080825280601f01601f19166020018201604052801561054d576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461055757509392505050565b6060336001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa1580156105c5573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526105ec9190810190610889565b6105f5836104f8565b60405160200161011c929190610bc3565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106445772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610670576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061068e57662386f26fc10000830492506010015b6305f5e10083106106a6576305f5e100830492506008015b61271083106106ba57612710830492506004015b606483106106cc576064830492506002015b600a83106106d8576001015b92915050565b5f602082840312156106ee575f80fd5b5035919050565b5f5b8381101561070f5781810151838201526020016106f7565b50505f910152565b602081525f82518060208401526107358160408501602087016106f5565b601f01601f19169190910160400192915050565b5f815161075a8185602086016106f5565b9290920192915050565b683d913730b6b2911d1160b91b815284515f90610788816009850160208a016106f5565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516107b981601a840160208a016106f5565b6a11161134b6b0b3b2911d1160a91b601a929091019182015284516107e58160258401602089016106f5565b6e111611383937b832b93a34b2b9911d60891b6025929091019182015283516108158160348401602088016106f5565b607d60f81b603492909101918201526035019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525f825161086881601d8501602087016106f5565b91909101601d0192915050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610899575f80fd5b815167ffffffffffffffff808211156108b0575f80fd5b818401915084601f8301126108c3575f80fd5b8151818111156108d5576108d5610875565b604051601f8201601f19908116603f011681019083821181831017156108fd576108fd610875565b81604052828152876020848701011115610915575f80fd5b6109268360208301602088016106f5565b979650505050505050565b5f60208284031215610941575f80fd5b815160ff81168114610951575f80fd5b9392505050565b683d913730b6b2911d1160b91b815284515f9061097c816009850160208a016106f5565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516109ad81601a840160208a016106f5565b6a11161134b6b0b3b2911d1160a91b601a929091019182015284516109d98160258401602089016106f5565b721116113b30b63ab2a232b1b4b6b0b639911d1160691b602592909101918201528351610a0d8160388401602088016106f5565b61227d60f01b60389290910191820152603a019695505050505050565b5f60208284031215610a3a575f80fd5b5051919050565b683d913730b6b2911d1160b91b815286515f90610a65816009850160208c016106f5565b701116113232b9b1b934b83a34b7b7111d1160791b6009918401918201528751610a9681601a840160208c016106f5565b6a11161134b6b0b3b2911d1160a91b601a92909101918201528651610ac2816025840160208b016106f5565b6c1116113130b630b731b2911d1160991b602592909101918201528551610af0816032840160208a016106f5565b6911161139b637ba111d1160b11b603292909101918201528451610b1b81603c8401602089016106f5565b610b58610b4b610b45603c848601016e111611383937b832b93a34b2b9911d60891b8152600f0190565b87610749565b607d60f81b815260010190565b9a9950505050505050505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106d8576106d8610b66565b5f82610ba757634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176106d8576106d8610b66565b5f8351610bd48184602088016106f5565b835190830190610be88183602088016106f5565b0194935050505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220251493e08d962c1e4111fdd9a3dad106a318e4ab0a81c6c9ee25f2a12c3b8a8264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C037F8A EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x725FA09C EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x894B4C2E EQ PUSH2 0x74 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x56 PUSH2 0x82 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10C PUSH2 0xAC PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x313233 PUSH1 0xE8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x1CDB1BDD PUSH1 0xE2 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP3 ADD DUP5 MSTORE PUSH0 DUP2 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x5B5D PUSH1 0xF0 SHL DUP2 DUP5 ADD MSTORE SWAP4 MLOAD PUSH2 0xF8 SWAP6 SWAP5 SWAP2 SWAP3 ADD PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 CALLER SWAP1 POP PUSH2 0x252 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x19D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x29B2B6B4A33AB733B4B13632903A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x23F DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3E7E8669 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x931 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLER PUSH2 0x382 PUSH2 0x286 DUP5 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x746F6B656E3131 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x1398FEE1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH2 0x323 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x9CC7F708 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131F9F3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH2 0x354 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x263F3E7E SWAP1 PUSH1 0x24 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x7B7D PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0x3C6 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF2 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x408 SWAP1 PUSH1 0x4 PUSH2 0xBAC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x420 JUMPI PUSH2 0x420 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x45B JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x4D2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4E5 JUMPI PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x504 DUP4 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x523 JUMPI PUSH2 0x523 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x557 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x5EC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x5F5 DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C SWAP3 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x644 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x670 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x68E JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x6A6 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x6BA JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x6CC JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6D8 JUMPI PUSH1 0x1 ADD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F7 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x735 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH2 0x75A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6F5 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x788 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x7B9 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x7E5 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x815 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x34 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x35 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0x868 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x6F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x899 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x8D5 JUMPI PUSH2 0x8D5 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x875 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x915 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x926 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x941 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x951 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x97C DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x9AD DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x9D9 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH19 0x1116113B30B63AB2A232B1B4B6B0B639911D11 PUSH1 0x69 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xA0D DUP2 PUSH1 0x38 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x38 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x3A ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP7 MLOAD PUSH0 SWAP1 PUSH2 0xA65 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP8 MLOAD PUSH2 0xA96 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0xAC2 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH13 0x1116113130B630B731B2911D11 PUSH1 0x99 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0xAF0 DUP2 PUSH1 0x32 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH10 0x11161139B637BA111D11 PUSH1 0xB1 SHL PUSH1 0x32 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xB1B DUP2 PUSH1 0x3C DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0xB58 PUSH2 0xB4B PUSH2 0xB45 PUSH1 0x3C DUP5 DUP7 ADD ADD PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL DUP2 MSTORE PUSH1 0xF ADD SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6D8 JUMPI PUSH2 0x6D8 PUSH2 0xB66 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6D8 JUMPI PUSH2 0x6D8 PUSH2 0xB66 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xBD4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xBE8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x6F5 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE BLOBHASH BLOBBASEFEE 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0x25 EQ SWAP4 0xE0 DUP14 SWAP7 0x2C 0x1E COINBASE GT REVERT 0xD9 LOG3 0xDA 0xD1 MOD LOG3 XOR 0xE4 0xAB EXP DUP2 0xC6 0xC9 0xEE 0x25 CALLCODE LOG1 0x2C EXTCODESIZE DUP11 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "379:5230:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:869;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;695:971;;;:::i;2547:1212::-;;;;;;:::i;:::-;;:::i;1672:869::-;1745:13;1946:515;2073:16;4108:13;;;;;;;;;;;;-1:-1:-1;;;4108:13:10;;;;;3996:132;2073:16;4253:14;;;;;;;;;;;-1:-1:-1;;;4253:14:10;;;;;;;;4385:9;;;;;;;-1:-1:-1;4385:9:10;;4518:11;;;;;;;;;;-1:-1:-1;;;4518:11:10;;;;1985:454;;;;;4385:9;;1985:454;;:::i;:::-;;;;;;;;;;;;;1946:13;:515::i;:::-;1813:707;;;;;;;;:::i;:::-;;;;;;;;;;;;;1770:764;;1672:869;;;:::o;695:971::-;759:13;784:35;850:10;784:77;;1048:538;1175:7;-1:-1:-1;;;;;1175:12:10;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1175:14:10;;;;;;;;;;;;:::i;:::-;3853:27;;;;;;;;;;;;-1:-1:-1;;;3853:27:10;;;;3974:9;;;;;;;;;-1:-1:-1;3974:9:10;;1461:43;1469:7;-1:-1:-1;;;;;1469:21:10;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1461:32;;:41;:43::i;:::-;1087:477;;;;;;;;;;;:::i;1048:538::-;915:730;;;;;;;;:::i;:::-;;;;;;;;;;;;;871:788;;;695:971;:::o;2547:1212::-;2624:13;2715:10;2871:849;3047:20;3058:8;3047:10;:20::i;:::-;5015:17;;;;;;;;;;;;-1:-1:-1;;;5015:17:10;;;;4385:9;;;;;;;;;-1:-1:-1;4385:9:10;;3342:27;;-1:-1:-1;;;3342:27:10;;;;;6783:25:12;;;3342:38:10;;-1:-1:-1;;;;;3342:17:10;;;;;6756:18:12;;3342:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;:38::i;:::-;3452:24;;-1:-1:-1;;;3452:24:10;;;;;6783:25:12;;;3452:35:10;;-1:-1:-1;;;;;3452:14:10;;;;;6756:18:12;;3452:24:10;6637:177:12;3452:35:10;5298:11;;;;;;;;;;;;-1:-1:-1;;;5298:11:10;;;;2910:788;;;;;;;;;;;;;:::i;2871:849::-;2780:958;;;;;;;;:::i;:::-;;;;;;;;;;;;;2736:1016;;;2547:1212;;;:::o;476:3026:1:-;534:13;766:4;:11;781:1;766:16;762:31;;-1:-1:-1;;784:9:1;;;;;;;;;-1:-1:-1;784:9:1;;;476:3026::o;762:31::-;843:19;865:6;;;;;;;;;;;;;;;;;843:28;;1274:20;1333:1;1314:4;:11;1328:1;1314:15;;;;:::i;:::-;1313:21;;;;:::i;:::-;1308:27;;:1;:27;:::i;:::-;1297:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:39:1;;1274:62;;1511:1;1504:5;1500:13;1612:2;1604:6;1600:15;1719:4;1770;1764:11;1758:4;1754:22;1682:1403;1803:6;1794:7;1791:19;1682:1403;;;1905:1;1896:7;1892:15;1881:26;;1943:7;1937:14;2586:4;2578:5;2574:2;2570:14;2566:25;2556:8;2552:40;2546:47;2535:9;2527:67;2639:1;2628:9;2624:17;2611:30;;2729:4;2721:5;2717:2;2713:14;2709:25;2699:8;2695:40;2689:47;2678:9;2670:67;2782:1;2771:9;2767:17;2754:30;;2871:4;2863:5;2860:1;2856:13;2852:24;2842:8;2838:39;2832:46;2821:9;2813:66;2924:1;2913:9;2909:17;2896:30;;3005:4;2998:5;2994:16;2984:8;2980:31;2974:38;2963:9;2955:58;;3058:1;3047:9;3043:17;3030:30;;1682:1403;;;1686:104;;3243:1;3236:4;3230:11;3226:19;3263:1;3258:120;;;;3396:1;3391:71;;;;3219:243;;3258:120;3310:4;3306:1;3295:9;3291:17;3283:32;3359:4;3355:1;3344:9;3340:17;3332:32;3258:120;;3391:71;3443:4;3439:1;3428:9;3424:17;3416:32;3219:243;-1:-1:-1;3489:6:1;;476:3026;-1:-1:-1;;;;;476:3026:1:o;637:698:2:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:2;-1:-1:-1;794:41:2;-1:-1:-1;955:28:2;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:2;-1:-1:-1;;;1175:2:2;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:2;1010:282;1256:21;-1:-1:-1;1312:6:2;637:698;-1:-1:-1;;;637:698:2:o;4542:341:10:-;4611:13;4783:10;-1:-1:-1;;;;;4755:44:10;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4755:46:10;;;;;;;;;;;;:::i;:::-;4825:19;:8;:17;:19::i;:::-;4717:145;;;;;;;;;:::i;12214:916:4:-;12267:7;;-1:-1:-1;;;12342:17:4;;12338:103;;-1:-1:-1;;;12379:17:4;;;-1:-1:-1;12424:2:4;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:4;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:4;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:4;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:4;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:4;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13025:66;13117:6;12214:916;-1:-1:-1;;12214:916:4:o;14:180:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:12;;14:180;-1:-1:-1;14:180:12:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:12;423:16;;416:27;199:250::o;454:396::-;603:2;592:9;585:21;566:4;635:6;629:13;678:6;673:2;662:9;658:18;651:34;694:79;766:6;761:2;750:9;746:18;741:2;733:6;729:15;694:79;:::i;:::-;834:2;813:15;-1:-1:-1;;809:29:12;794:45;;;;841:2;790:54;;454:396;-1:-1:-1;;454:396:12:o;855:198::-;897:3;935:5;929:12;950:65;1008:6;1003:3;996:4;989:5;985:16;950:65;:::i;:::-;1031:16;;;;;855:198;-1:-1:-1;;855:198:12:o;1336:1747::-;-1:-1:-1;;;2132:43:12;;2198:13;;2114:3;;2220:74;2198:13;2283:1;2274:11;;2267:4;2255:17;;2220:74;:::i;:::-;-1:-1:-1;;;2353:1:12;2313:16;;;2345:10;;;2338:66;2429:13;;2451:76;2429:13;2513:2;2505:11;;2498:4;2486:17;;2451:76;:::i;:::-;-1:-1:-1;;;2587:2:12;2546:17;;;;2579:11;;;2572:55;2652:13;;2674:76;2652:13;2736:2;2728:11;;2721:4;2709:17;;2674:76;:::i;:::-;-1:-1:-1;;;2810:2:12;2769:17;;;;2802:11;;;2795:63;2883:13;;2905:76;2883:13;2967:2;2959:11;;2952:4;2940:17;;2905:76;:::i;:::-;-1:-1:-1;;;3041:2:12;3000:17;;;;3033:11;;;3026:24;3074:2;3066:11;;1336:1747;-1:-1:-1;;;;;;1336:1747:12:o;3088:461::-;3350:31;3345:3;3338:44;3320:3;3411:6;3405:13;3427:75;3495:6;3490:2;3485:3;3481:12;3474:4;3466:6;3462:17;3427:75;:::i;:::-;3522:16;;;;3540:2;3518:25;;3088:461;-1:-1:-1;;3088:461:12:o;3554:127::-;3615:10;3610:3;3606:20;3603:1;3596:31;3646:4;3643:1;3636:15;3670:4;3667:1;3660:15;3686:897;3766:6;3819:2;3807:9;3798:7;3794:23;3790:32;3787:52;;;3835:1;3832;3825:12;3787:52;3868:9;3862:16;3897:18;3938:2;3930:6;3927:14;3924:34;;;3954:1;3951;3944:12;3924:34;3992:6;3981:9;3977:22;3967:32;;4037:7;4030:4;4026:2;4022:13;4018:27;4008:55;;4059:1;4056;4049:12;4008:55;4088:2;4082:9;4110:2;4106;4103:10;4100:36;;;4116:18;;:::i;:::-;4191:2;4185:9;4159:2;4245:13;;-1:-1:-1;;4241:22:12;;;4265:2;4237:31;4233:40;4221:53;;;4289:18;;;4309:22;;;4286:46;4283:72;;;4335:18;;:::i;:::-;4375:10;4371:2;4364:22;4410:2;4402:6;4395:18;4450:7;4445:2;4440;4436;4432:11;4428:20;4425:33;4422:53;;;4471:1;4468;4461:12;4422:53;4484:68;4549:2;4544;4536:6;4532:15;4527:2;4523;4519:11;4484:68;:::i;:::-;4571:6;3686:897;-1:-1:-1;;;;;;;3686:897:12:o;4588:273::-;4656:6;4709:2;4697:9;4688:7;4684:23;4680:32;4677:52;;;4725:1;4722;4715:12;4677:52;4757:9;4751:16;4807:4;4800:5;4796:16;4789:5;4786:27;4776:55;;4827:1;4824;4817:12;4776:55;4850:5;4588:273;-1:-1:-1;;;4588:273:12:o;4866:1766::-;-1:-1:-1;;;5662:43:12;;5728:13;;5644:3;;5750:74;5728:13;5813:1;5804:11;;5797:4;5785:17;;5750:74;:::i;:::-;-1:-1:-1;;;5883:1:12;5843:16;;;5875:10;;;5868:66;5959:13;;5981:76;5959:13;6043:2;6035:11;;6028:4;6016:17;;5981:76;:::i;:::-;-1:-1:-1;;;6117:2:12;6076:17;;;;6109:11;;;6102:55;6182:13;;6204:76;6182:13;6266:2;6258:11;;6251:4;6239:17;;6204:76;:::i;:::-;-1:-1:-1;;;6340:2:12;6299:17;;;;6332:11;;;6325:71;6421:13;;6443:76;6421:13;6505:2;6497:11;;6490:4;6478:17;;6443:76;:::i;:::-;-1:-1:-1;;;6579:2:12;6538:17;;;;6571:11;;;6564:35;6623:2;6615:11;;4866:1766;-1:-1:-1;;;;;;4866:1766:12:o;6819:184::-;6889:6;6942:2;6930:9;6921:7;6917:23;6913:32;6910:52;;;6958:1;6955;6948:12;6910:52;-1:-1:-1;6981:16:12;;6819:184;-1:-1:-1;6819:184:12:o;7008:2297::-;-1:-1:-1;;;8102:43:12;;8168:13;;8084:3;;8190:74;8168:13;8253:1;8244:11;;8237:4;8225:17;;8190:74;:::i;:::-;-1:-1:-1;;;8323:1:12;8283:16;;;8315:10;;;8308:66;8399:13;;8421:76;8399:13;8483:2;8475:11;;8468:4;8456:17;;8421:76;:::i;:::-;-1:-1:-1;;;8557:2:12;8516:17;;;;8549:11;;;8542:55;8622:13;;8644:76;8622:13;8706:2;8698:11;;8691:4;8679:17;;8644:76;:::i;:::-;-1:-1:-1;;;8780:2:12;8739:17;;;;8772:11;;;8765:59;8849:13;;8871:76;8849:13;8933:2;8925:11;;8918:4;8906:17;;8871:76;:::i;:::-;-1:-1:-1;;;9007:2:12;8966:17;;;;8999:11;;;8992:53;9070:13;;9092:76;9070:13;9154:2;9146:11;;9139:4;9127:17;;9092:76;:::i;:::-;9184:115;9214:84;9240:57;9293:2;9282:8;9278:2;9274:17;9270:26;-1:-1:-1;;;1123:55:12;;1203:2;1194:12;;1058:154;9240:57;9232:6;9214:84;:::i;:::-;-1:-1:-1;;;1282:16:12;;1323:1;1314:11;;1217:114;9184:115;9177:122;7008:2297;-1:-1:-1;;;;;;;;;;7008:2297:12:o;9310:127::-;9371:10;9366:3;9362:20;9359:1;9352:31;9402:4;9399:1;9392:15;9426:4;9423:1;9416:15;9442:125;9507:9;;;9528:10;;;9525:36;;;9541:18;;:::i;9704:217::-;9744:1;9770;9760:132;;9814:10;9809:3;9805:20;9802:1;9795:31;9849:4;9846:1;9839:15;9877:4;9874:1;9867:15;9760:132;-1:-1:-1;9906:9:12;;9704:217::o;9926:168::-;9999:9;;;10030;;10047:15;;;10041:22;;10027:37;10017:71;;10068:18;;:::i;10099:496::-;10278:3;10316:6;10310:13;10332:66;10391:6;10386:3;10379:4;10371:6;10367:17;10332:66;:::i;:::-;10461:13;;10420:16;;;;10483:70;10461:13;10420:16;10530:4;10518:17;;10483:70;:::i;:::-;10569:20;;10099:496;-1:-1:-1;;;;10099:496:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "635000",
								"executionCost": "668",
								"totalCost": "635668"
							},
							"external": {
								"constructContractURI()": "infinite",
								"constructSlotURI(uint256)": "infinite",
								"constructTokenURI(uint256)": "infinite"
							},
							"internal": {
								"__ERC3525MetadataDescriptor_init()": "infinite",
								"__ERC3525MetadataDescriptor_init_unchained()": "infinite",
								"_contractDescription()": "infinite",
								"_contractImage()": "infinite",
								"_slotDescription(uint256)": "infinite",
								"_slotImage(uint256)": "infinite",
								"_slotName(uint256)": "infinite",
								"_slotProperties(uint256)": "infinite",
								"_tokenDescription(uint256)": "infinite",
								"_tokenImage(uint256)": "infinite",
								"_tokenName(uint256)": "infinite",
								"_tokenProperties(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 379,
									"end": 5609,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220251493e08d962c1e4111fdd9a3dad106a318e4ab0a81c6c9ee25f2a12c3b8a8264736f6c63430008180033",
									".code": [
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "6C037F8A"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "725FA09C"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "894B4C2E"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 379,
											"end": 5609,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1672,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1672,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1672,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 695,
											"end": 1666,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 695,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 695,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 695,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2547,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2547,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1758,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1946,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313233"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4128,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2089,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2073,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CDB1BDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1985,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1946,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2461,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1813,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 2520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 2534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 2534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 1666,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 695,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 759,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 860,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 784,
											"end": 861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1175,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29B2B6B4A33AB733B4B13632903A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1490,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "3E7E8669"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1469,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1493,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1461,
											"end": 1493,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1461,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1504,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1461,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1087,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1048,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 915,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 1645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 871,
											"end": 1659,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 871,
											"end": 1659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 1659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 1666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 1666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2624,
											"end": 2637,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2715,
											"end": 2725,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3047,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3058,
											"end": 3066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3047,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3067,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3047,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F6B656E3131"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1398FEE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3359,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3359,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3359,
											"name": "PUSH",
											"source": 10,
											"value": "9CC7F708"
										},
										{
											"begin": 3342,
											"end": 3359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3342,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3342,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3342,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131F9F3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3452,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3452,
											"end": 3487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3466,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3466,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3466,
											"name": "PUSH",
											"source": 10,
											"value": "263F3E7E"
										},
										{
											"begin": 3452,
											"end": 3466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3452,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 6637,
											"end": 6814,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3452,
											"end": 3487,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3452,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2910,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 3720,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2871,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2780,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 3738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 3752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 3752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 3752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 547,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 766,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH data",
											"source": 1,
											"value": "84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1314,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1313,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1308,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1297,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1723,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1810,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1896,
											"end": 1903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1951,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2590,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2576,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2570,
											"end": 2584,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2564,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2594,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2641,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2721,
											"end": 2726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2707,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2737,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2771,
											"end": 2780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2784,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2850,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2879,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2992,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 3013,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3060,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3236,
											"end": 3240,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3245,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3315,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 476,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4542,
											"end": 4883,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4542,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4624,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4783,
											"end": 4793,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4755,
											"end": 4799,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 4755,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4755,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 4825,
											"end": 4833,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4825,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4844,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 4825,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4717,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 199,
											"end": 449,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 199,
											"end": 449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 294,
											"end": 407,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 294,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 384,
											"end": 395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 384,
											"end": 395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 384,
											"end": 395,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 378,
											"end": 396,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 365,
											"end": 376,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 365,
											"end": 376,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 365,
											"end": 376,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 358,
											"end": 397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 294,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 294,
											"end": 407,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 441,
											"end": 442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 439,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 423,
											"end": 439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 416,
											"end": 443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 199,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 850,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 603,
											"end": 605,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 585,
											"end": 606,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 566,
											"end": 570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 629,
											"end": 642,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 673,
											"end": 675,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 671,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 658,
											"end": 676,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 651,
											"end": 685,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 694,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 761,
											"end": 763,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 746,
											"end": 764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 741,
											"end": 743,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 729,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 694,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 694,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 694,
											"end": 773,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 694,
											"end": 773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 834,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 813,
											"end": 828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 794,
											"end": 839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 794,
											"end": 839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 794,
											"end": 839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 794,
											"end": 839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 790,
											"end": 844,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 454,
											"end": 850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 454,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 855,
											"end": 1053,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 855,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1006,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 996,
											"end": 1000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 989,
											"end": 994,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 950,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 855,
											"end": 1053,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 3083,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1336,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2284,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2274,
											"end": 2285,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 2220,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2354,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2338,
											"end": 2404,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2513,
											"end": 2515,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2503,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2486,
											"end": 2503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 2451,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2627,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 2674,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "111611383937B832B93A34B2B9911D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 2969,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2959,
											"end": 2970,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 2970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2952,
											"end": 2956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2957,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 2905,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3043,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 3066,
											"end": 3077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3077,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 3083,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1336,
											"end": 3083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3088,
											"end": 3549,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 3088,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3350,
											"end": 3381,
											"name": "PUSH",
											"source": 12,
											"value": "646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000"
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3320,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3418,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3490,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 3485,
											"end": 3488,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3474,
											"end": 3478,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3427,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3088,
											"end": 3549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3554,
											"end": 3681,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3554,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3615,
											"end": 3625,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 3610,
											"end": 3613,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3606,
											"end": 3626,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3604,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3627,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3646,
											"end": 3650,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3636,
											"end": 3651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3667,
											"end": 3668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3675,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3686,
											"end": 4583,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3686,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3817,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3790,
											"end": 3822,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3833,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3825,
											"end": 3837,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3877,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 3936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3927,
											"end": 3941,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3944,
											"end": 3956,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 3990,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3977,
											"end": 3999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4037,
											"end": 4044,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4035,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4018,
											"end": 4045,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 4116,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4193,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4194,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 4237,
											"end": 4268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4233,
											"end": 4273,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4283,
											"end": 4355,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4283,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 4283,
											"end": 4355,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 4335,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4373,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4442,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4432,
											"end": 4443,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4428,
											"end": 4448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4425,
											"end": 4458,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 4546,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4542,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4532,
											"end": 4547,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4527,
											"end": 4529,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4525,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 4484,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 3686,
											"end": 4583,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4588,
											"end": 4861,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 4588,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4688,
											"end": 4695,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4707,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4680,
											"end": 4712,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 4726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4727,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4766,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4796,
											"end": 4812,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4786,
											"end": 4813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4817,
											"end": 4829,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4855,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4588,
											"end": 4861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 6632,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 4866,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5705,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5813,
											"end": 5814,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5804,
											"end": 5815,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 5815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 5801,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5785,
											"end": 5802,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5785,
											"end": 5802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 5750,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5875,
											"end": 5885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5875,
											"end": 5885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5875,
											"end": 5885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5934,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 5972,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 5972,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 5959,
											"end": 5972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6043,
											"end": 6045,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 6035,
											"end": 6046,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6035,
											"end": 6046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6016,
											"end": 6033,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6016,
											"end": 6033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 5981,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6119,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6102,
											"end": 6157,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6195,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6195,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6182,
											"end": 6195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6266,
											"end": 6268,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 6258,
											"end": 6269,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6258,
											"end": 6269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6251,
											"end": 6255,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6239,
											"end": 6256,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6239,
											"end": 6256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6204,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113B30B63AB2A232B1B4B6B0B639911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6340,
											"end": 6342,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6396,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6507,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 6497,
											"end": 6508,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6497,
											"end": 6508,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6478,
											"end": 6495,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6478,
											"end": 6495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6443,
											"end": 6519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "227D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6581,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6571,
											"end": 6582,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6571,
											"end": 6582,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6571,
											"end": 6582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6625,
											"name": "PUSH",
											"source": 12,
											"value": "3A"
										},
										{
											"begin": 6615,
											"end": 6626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6626,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 6632,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4866,
											"end": 6632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6819,
											"end": 7003,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 6819,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6889,
											"end": 6895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6942,
											"end": 6944,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 6928,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6917,
											"end": 6940,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 6945,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6948,
											"end": 6960,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6819,
											"end": 7003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 7003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7008,
											"end": 9305,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 7008,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8102,
											"end": 8145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8102,
											"end": 8145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8168,
											"end": 8181,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8168,
											"end": 8181,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8190,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 8168,
											"end": 8181,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8253,
											"end": 8254,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8244,
											"end": 8255,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8244,
											"end": 8255,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8225,
											"end": 8242,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8190,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8190,
											"end": 8264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8190,
											"end": 8264,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 8190,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8323,
											"end": 8324,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8283,
											"end": 8299,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8299,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8325,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8308,
											"end": 8374,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8412,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8412,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8421,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 8399,
											"end": 8412,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8485,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 8475,
											"end": 8486,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8475,
											"end": 8486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8456,
											"end": 8473,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 8473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8421,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8421,
											"end": 8497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8421,
											"end": 8497,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 8421,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 8516,
											"end": 8533,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8516,
											"end": 8533,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8516,
											"end": 8533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8516,
											"end": 8533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8549,
											"end": 8560,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8549,
											"end": 8560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8549,
											"end": 8560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8542,
											"end": 8597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 8635,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 8635,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8644,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 8622,
											"end": 8635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8706,
											"end": 8708,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 8698,
											"end": 8709,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 8709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8691,
											"end": 8695,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8679,
											"end": 8696,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 8679,
											"end": 8696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8644,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8644,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8644,
											"end": 8720,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 8644,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113130B630B731B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8780,
											"end": 8782,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 8739,
											"end": 8756,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8756,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8772,
											"end": 8783,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8772,
											"end": 8783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8772,
											"end": 8783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8765,
											"end": 8824,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8849,
											"end": 8862,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8849,
											"end": 8862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8871,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 8849,
											"end": 8862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8933,
											"end": 8935,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8925,
											"end": 8936,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 8936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8918,
											"end": 8922,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8906,
											"end": 8923,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 8906,
											"end": 8923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8871,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8871,
											"end": 8947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8871,
											"end": 8947,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 8871,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161139B637BA111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9007,
											"end": 9009,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8966,
											"end": 8983,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8966,
											"end": 8983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8966,
											"end": 8983,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8966,
											"end": 8983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9010,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9070,
											"end": 9083,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9070,
											"end": 9083,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9092,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 9070,
											"end": 9083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9154,
											"end": 9156,
											"name": "PUSH",
											"source": 12,
											"value": "3C"
										},
										{
											"begin": 9146,
											"end": 9157,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9139,
											"end": 9143,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9144,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9127,
											"end": 9144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9092,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9092,
											"end": 9168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9092,
											"end": 9168,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 9092,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9184,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 9214,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 9240,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9293,
											"end": 9295,
											"name": "PUSH",
											"source": 12,
											"value": "3C"
										},
										{
											"begin": 9282,
											"end": 9290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9278,
											"end": 9280,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9274,
											"end": 9291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9270,
											"end": 9296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "111611383937B832B93A34B2B9911D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1212,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9240,
											"end": 9297,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9240,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9238,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 9214,
											"end": 9298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9298,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 9214,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1298,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1282,
											"end": 1298,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1217,
											"end": 1331,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9184,
											"end": 9299,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 9184,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9177,
											"end": 9299,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 7008,
											"end": 9305,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7008,
											"end": 9305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9310,
											"end": 9437,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9310,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9371,
											"end": 9381,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9366,
											"end": 9369,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9362,
											"end": 9382,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9352,
											"end": 9383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9406,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9392,
											"end": 9407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9426,
											"end": 9430,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9416,
											"end": 9431,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9442,
											"end": 9567,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 9442,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9516,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9538,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9538,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9561,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 9525,
											"end": 9561,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9541,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 9541,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9541,
											"end": 9559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 9921,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 9704,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9744,
											"end": 9745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9770,
											"end": 9771,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 9760,
											"end": 9892,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9824,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9809,
											"end": 9812,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9805,
											"end": 9825,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9802,
											"end": 9803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9826,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 9853,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9846,
											"end": 9847,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9839,
											"end": 9854,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9877,
											"end": 9881,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9867,
											"end": 9882,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9892,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 9760,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9906,
											"end": 9915,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 9921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9926,
											"end": 10094,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 9926,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10039,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10047,
											"end": 10062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10047,
											"end": 10062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10047,
											"end": 10062,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10063,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10063,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10064,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10017,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 10017,
											"end": 10088,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 10068,
											"end": 10086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10099,
											"end": 10595,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 10099,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10322,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10310,
											"end": 10323,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 10391,
											"end": 10397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10386,
											"end": 10389,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10379,
											"end": 10383,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10367,
											"end": 10384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 10332,
											"end": 10398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10398,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 10332,
											"end": 10398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10474,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10474,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10436,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10436,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 10461,
											"end": 10474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10436,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10530,
											"end": 10534,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10518,
											"end": 10535,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 10483,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10483,
											"end": 10553,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 10483,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10099,
											"end": 10595,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10099,
											"end": 10595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525Upgradeable.sol",
								"contracts/IERC721Upgradeable.sol",
								"contracts/extensions/IERC3525MetadataUpgradeable.sol",
								"contracts/extensions/IERC721MetadataUpgradeable.sol",
								"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"constructContractURI()": "725fa09c",
							"constructSlotURI(uint256)": "6c037f8a",
							"constructTokenURI(uint256)": "894b4c2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"constructContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slot_\",\"type\":\"uint256\"}],\"name\":\"constructSlotURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"constructTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":\"ERC3525MetadataDescriptorUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x6f7014d688c4386c26e8c02371ecb7f7740d2542f1ecadffd5a3084511e2a344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d8f5aabdb088f19c80ce460a2e670ecc651ff4ca46878d239e29bfe705e52c\",\"dweb:/ipfs/QmUveDGa7vEtYBxbVUajNcDvyjP6oaD7Va1M5qwZbudmAn\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/IERC3525Upgradeable.sol\":{\"keccak256\":\"0x6735117e768e23449716c0731a3d9b6ce272a3baab429a550efddadc92bb32cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://905eb0442bb6d2effe9999ebe555d8c645a1203aef734387d9ad3c8a78866573\",\"dweb:/ipfs/QmaP28QdxdfjwoyCSpD366TyZMcivKJn4xgpgS9Kwj9Suv\"]},\"contracts/IERC721Upgradeable.sol\":{\"keccak256\":\"0x01c55b4cb358f8b123a28de104ae771d27d40514d6c1ea0bb0fc256f805195e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab4dfd72e1d1e5cf4f2823f877335a8c7a3a7a6e20d9261b8970a947893dbb1\",\"dweb:/ipfs/QmPStyDfyF6WzftUAdqpk82iAMQ75RSaZzWU4tt8qf736i\"]},\"contracts/extensions/IERC3525MetadataUpgradeable.sol\":{\"keccak256\":\"0x9ba530840b3eb25b4175cf8423c0cfe8d2da75d8c4dc88ecf85204a8940d047e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94e61fa49eda2bf457ad69f6fca4ab70cbbac78c7df35b50c705333b0e90368a\",\"dweb:/ipfs/QmQhvs1NkY3oMGx2WCmTkCR1ZtzpKYKeEZirhLWrKAEXkx\"]},\"contracts/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x94599f6f4e0106919c549625cf71353ea433cf47837ecbc33ce57a81d5c65b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66ab447a9cd0241771098ee3363755b8ceb29ba45e2593ba054c871a342aef44\",\"dweb:/ipfs/QmPx5tH4E3MM6K52ANV1s8zF5xbBgtok5F43uybc5BS9GF\"]},\"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol\":{\"keccak256\":\"0x20efdb03e745b622fefeafbe9005b9139331b741352e548a5217deacc6a59658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c19ba90774d9a4a9e0e162e2b72ab84550aadaa2606cb4ea2fe3196252d98a7\",\"dweb:/ipfs/QmfF56aWkwSHJKhzpb1HherTesa482fVfHc6DGuDrKZQRe\"]},\"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol\":{\"keccak256\":\"0xa40c93b0968840218c1febb1d73c1fc6cfa5f40786f1c4e3115674f997733089\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bfbb5541c22bce8a4312eb8fd6488afd6d2c281e29b4dd39e9417214caabe30\",\"dweb:/ipfs/QmetZ6ioQ68taJrQ89GJTbctMZRCFJtZ5m7tBAZ5556GvZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2310,
								"contract": "contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol:ERC3525MetadataDescriptorUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol": {
				"IERC3525MetadataDescriptorUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "constructContractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "slot",
									"type": "uint256"
								}
							],
							"name": "constructSlotURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "constructTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"constructContractURI()": "725fa09c",
							"constructSlotURI(uint256)": "6c037f8a",
							"constructTokenURI(uint256)": "894b4c2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"constructContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"constructSlotURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"constructTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol\":\"IERC3525MetadataDescriptorUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol\":{\"keccak256\":\"0xa40c93b0968840218c1febb1d73c1fc6cfa5f40786f1c4e3115674f997733089\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bfbb5541c22bce8a4312eb8fd6488afd6d2c281e29b4dd39e9417214caabe30\",\"dweb:/ipfs/QmetZ6ioQ68taJrQ89GJTbctMZRCFJtZ5m7tBAZ5556GvZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:0",
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nativeSrc": "8860:31:0",
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:0",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
					"exportedSymbols": {
						"Base64": [
							300
						]
					},
					"id": 301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base64",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 256,
								"nodeType": "StructuredDocumentation",
								"src": "126:75:1",
								"text": " @dev Provides a set of functions to operate with Base64 strings."
							},
							"fullyImplemented": true,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Base64",
							"nameLocation": "210:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "223:54:1",
										"text": " @dev Base64 Encoding/Decoding Table"
									},
									"id": 260,
									"mutability": "constant",
									"name": "_TABLE",
									"nameLocation": "307:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 300,
									"src": "282:100:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 258,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "282:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
										"id": 259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce",
											"typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""
										},
										"value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "549:2953:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 268,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "771:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "766:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "781:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "766:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol",
												"id": 274,
												"nodeType": "IfStatement",
												"src": "762:31:1",
												"trueBody": {
													"expression": {
														"hexValue": "",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "791:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"functionReturnParameters": 267,
													"id": 273,
													"nodeType": "Return",
													"src": "784:9:1"
												}
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "table",
														"nameLocation": "857:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "843:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 275,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "843:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "_TABLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 260,
													"src": "865:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "843:28:1"
											},
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1288:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "1274:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 279,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1274:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34",
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1308:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 284,
																							"name": "data",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 263,
																							"src": "1314:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1319:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1314:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 286,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1328:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "1314:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 288,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1313:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1333:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1313:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1312:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1308:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1297:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 281,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1301:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1274:62:1"
											},
											{
												"AST": {
													"nativeSrc": "1399:2073:1",
													"nodeType": "YulBlock",
													"src": "1399:2073:1",
													"statements": [
														{
															"nativeSrc": "1484:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1484:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "table",
																		"nativeSrc": "1504:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1504:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1511:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:1"
																},
																"nativeSrc": "1500:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1500:13:1"
															},
															"variables": [
																{
																	"name": "tablePtr",
																	"nativeSrc": "1488:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1488:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1583:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1583:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "1604:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1612:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1612:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1600:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:1"
																},
																"nativeSrc": "1600:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1600:15:1"
															},
															"variables": [
																{
																	"name": "resultPtr",
																	"nativeSrc": "1587:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1587:9:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1828:1257:1",
																"nodeType": "YulBlock",
																"src": "1828:1257:1",
																"statements": [
																	{
																		"nativeSrc": "1881:26:1",
																		"nodeType": "YulAssignment",
																		"src": "1881:26:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "1896:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "1896:7:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1905:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:1",
																					"type": "",
																					"value": "3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1892:3:1"
																			},
																			"nativeSrc": "1892:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1892:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "1881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1924:27:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1924:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "1943:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "1943:7:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1937:5:1"
																			},
																			"nativeSrc": "1937:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1937:14:1"
																		},
																		"variables": [
																			{
																				"name": "input",
																				"nativeSrc": "1928:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1928:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2535:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2535:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2556:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2556:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2574:2:1",
																													"nodeType": "YulLiteral",
																													"src": "2574:2:1",
																													"type": "",
																													"value": "18"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2578:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2578:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2570:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2570:3:1"
																											},
																											"nativeSrc": "2570:14:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2570:14:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2586:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2586:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2566:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2566:3:1"
																									},
																									"nativeSrc": "2566:25:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2566:25:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2552:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2552:3:1"
																							},
																							"nativeSrc": "2552:40:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2552:40:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2546:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2546:5:1"
																					},
																					"nativeSrc": "2546:47:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2546:47:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2527:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2527:7:1"
																			},
																			"nativeSrc": "2527:67:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2527:67:1"
																		},
																		"nativeSrc": "2527:67:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2527:67:1"
																	},
																	{
																		"nativeSrc": "2611:30:1",
																		"nodeType": "YulAssignment",
																		"src": "2611:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2628:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2628:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2639:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2624:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2624:3:1"
																			},
																			"nativeSrc": "2624:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2624:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2611:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2678:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2678:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2699:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2699:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2717:2:1",
																													"nodeType": "YulLiteral",
																													"src": "2717:2:1",
																													"type": "",
																													"value": "12"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2721:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2721:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2713:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2713:3:1"
																											},
																											"nativeSrc": "2713:14:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2713:14:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2729:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2729:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2709:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2709:3:1"
																									},
																									"nativeSrc": "2709:25:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2709:25:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:1"
																							},
																							"nativeSrc": "2695:40:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:40:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:1"
																					},
																					"nativeSrc": "2689:47:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:47:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2670:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2670:7:1"
																			},
																			"nativeSrc": "2670:67:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:67:1"
																		},
																		"nativeSrc": "2670:67:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:67:1"
																	},
																	{
																		"nativeSrc": "2754:30:1",
																		"nodeType": "YulAssignment",
																		"src": "2754:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2771:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2771:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2782:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2782:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2767:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2767:3:1"
																			},
																			"nativeSrc": "2767:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2767:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2821:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2821:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2842:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2842:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2860:1:1",
																													"nodeType": "YulLiteral",
																													"src": "2860:1:1",
																													"type": "",
																													"value": "6"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2863:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2863:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2856:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2856:3:1"
																											},
																											"nativeSrc": "2856:13:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2856:13:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2871:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2871:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2852:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2852:3:1"
																									},
																									"nativeSrc": "2852:24:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2852:24:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2838:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2838:3:1"
																							},
																							"nativeSrc": "2838:39:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2838:39:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2832:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2832:5:1"
																					},
																					"nativeSrc": "2832:46:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:46:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2813:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:1"
																			},
																			"nativeSrc": "2813:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2813:66:1"
																		},
																		"nativeSrc": "2813:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2813:66:1"
																	},
																	{
																		"nativeSrc": "2896:30:1",
																		"nodeType": "YulAssignment",
																		"src": "2896:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2913:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2913:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2924:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2924:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2909:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2909:3:1"
																			},
																			"nativeSrc": "2909:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2909:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2896:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2896:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2963:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2963:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2984:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2984:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"name": "input",
																											"nativeSrc": "2998:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2998:5:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3005:4:1",
																											"nodeType": "YulLiteral",
																											"src": "3005:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2994:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2994:3:1"
																									},
																									"nativeSrc": "2994:16:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2994:16:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2980:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2980:3:1"
																							},
																							"nativeSrc": "2980:31:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2980:31:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2974:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2974:5:1"
																					},
																					"nativeSrc": "2974:38:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2974:38:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2955:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2955:7:1"
																			},
																			"nativeSrc": "2955:58:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2955:58:1"
																		},
																		"nativeSrc": "2955:58:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2955:58:1"
																	},
																	{
																		"nativeSrc": "3030:30:1",
																		"nodeType": "YulAssignment",
																		"src": "3030:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3047:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "3047:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3058:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3043:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3043:3:1"
																			},
																			"nativeSrc": "3043:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3043:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3030:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3030:9:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "dataPtr",
																		"nativeSrc": "1794:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1794:7:1"
																	},
																	{
																		"name": "endPtr",
																		"nativeSrc": "1803:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1803:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1791:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1791:2:1"
																},
																"nativeSrc": "1791:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1791:19:1"
															},
															"nativeSrc": "1682:1403:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1811:16:1",
																"nodeType": "YulBlock",
																"src": "1811:16:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "1686:104:1",
																"nodeType": "YulBlock",
																"src": "1686:104:1",
																"statements": [
																	{
																		"nativeSrc": "1704:19:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1704:19:1",
																		"value": {
																			"name": "data",
																			"nativeSrc": "1719:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "1719:4:1"
																		},
																		"variables": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "1708:7:1",
																				"nodeType": "YulTypedName",
																				"src": "1708:7:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1740:36:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1740:36:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1758:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1758:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nativeSrc": "1770:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1770:4:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1764:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1764:5:1"
																					},
																					"nativeSrc": "1764:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1764:11:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1754:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1754:3:1"
																			},
																			"nativeSrc": "1754:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1754:22:1"
																		},
																		"variables": [
																			{
																				"name": "endPtr",
																				"nativeSrc": "1744:6:1",
																				"nodeType": "YulTypedName",
																				"src": "1744:6:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1682:1403:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3265:113:1",
																		"nodeType": "YulBlock",
																		"src": "3265:113:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3295:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3295:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3306:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3306:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3291:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3291:3:1"
																							},
																							"nativeSrc": "3291:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3291:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3310:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3310:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3283:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3283:7:1"
																					},
																					"nativeSrc": "3283:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3283:32:1"
																				},
																				"nativeSrc": "3283:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3283:32:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3344:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3344:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3355:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3355:1:1",
																									"type": "",
																									"value": "2"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3340:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3340:3:1"
																							},
																							"nativeSrc": "3340:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3340:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3359:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3359:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3332:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3332:7:1"
																					},
																					"nativeSrc": "3332:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3332:32:1"
																				},
																				"nativeSrc": "3332:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3332:32:1"
																			}
																		]
																	},
																	"nativeSrc": "3258:120:1",
																	"nodeType": "YulCase",
																	"src": "3258:120:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3263:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3263:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3398:64:1",
																		"nodeType": "YulBlock",
																		"src": "3398:64:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3428:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3428:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3439:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3439:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3424:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3424:3:1"
																							},
																							"nativeSrc": "3424:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3424:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3443:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3443:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3416:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3416:7:1"
																					},
																					"nativeSrc": "3416:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3416:32:1"
																				},
																				"nativeSrc": "3416:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3416:32:1"
																			}
																		]
																	},
																	"nativeSrc": "3391:71:1",
																	"nodeType": "YulCase",
																	"src": "3391:71:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3396:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3236:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3236:4:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3230:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3230:5:1"
																		},
																		"nativeSrc": "3230:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3230:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3243:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3243:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3226:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:1"
																},
																"nativeSrc": "3226:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3226:19:1"
															},
															"nativeSrc": "3219:243:1",
															"nodeType": "YulSwitch",
															"src": "3219:243:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "1719:4:1",
														"valueSize": 1
													},
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "1758:4:1",
														"valueSize": 1
													},
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "1770:4:1",
														"valueSize": 1
													},
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "3236:4:1",
														"valueSize": 1
													},
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": false,
														"src": "1604:6:1",
														"valueSize": 1
													},
													{
														"declaration": 276,
														"isOffset": false,
														"isSlot": false,
														"src": "1504:5:1",
														"valueSize": 1
													}
												],
												"id": 295,
												"nodeType": "InlineAssembly",
												"src": "1390:2082:1"
											},
											{
												"expression": {
													"id": 296,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 280,
													"src": "3489:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 267,
												"id": 297,
												"nodeType": "Return",
												"src": "3482:13:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "389:82:1",
										"text": " @dev Converts a `bytes` to its Bytes64 `string` representation."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nameLocation": "485:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "505:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "492:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "492:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:19:1"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "534:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "534:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:15:1"
									},
									"scope": 300,
									"src": "476:3026:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 301,
							"src": "202:3302:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3405:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1621
						],
						"SignedMath": [
							1726
						],
						"Strings": [
							555
						]
					},
					"id": 556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 304,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 1622,
							"src": "127:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 303,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1621,
										"src": "135:4:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 1727,
							"src": "165:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 305,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1726,
										"src": "173:10:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 307,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:2",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "Strings",
							"nameLocation": "259:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 310,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "273:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 308,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 309,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 313,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "335:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 311,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 312,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:2",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 320,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "505:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "520:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:2"
									},
									"src": "470:66:2"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "708:627:2",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "718:611:2",
												"statements": [
													{
														"assignments": [
															329
														],
														"declarations": [
															{
																"constant": false,
																"id": 329,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "742:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 328,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 336,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 332,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "770:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 330,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1621,
																		"src": "759:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1621_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:2",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1441,
																	"src": "759:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:2"
													},
													{
														"assignments": [
															338
														],
														"declarations": [
															{
																"constant": false,
																"id": 338,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "794:20:2",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 337,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 343,
														"initialValue": {
															"arguments": [
																{
																	"id": 341,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "828:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 339,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:2"
													},
													{
														"assignments": [
															345
														],
														"declarations": [
															{
																"constant": false,
																"id": 345,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:2",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "849:11:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 344,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:2"
													},
													{
														"AST": {
															"nativeSrc": "930:67:2",
															"nodeType": "YulBlock",
															"src": "930:67:2",
															"statements": [
																{
																	"nativeSrc": "948:35:2",
																	"nodeType": "YulAssignment",
																	"src": "948:35:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:2",
																						"nodeType": "YulLiteral",
																						"src": "971:2:2",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:2"
																				},
																				"nativeSrc": "967:15:2",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:2"
																		},
																		"nativeSrc": "955:28:2",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:2"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:2"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 338,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:2",
																"valueSize": 1
															},
															{
																"declaration": 329,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:2",
																"valueSize": 1
															},
															{
																"declaration": 345,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:2",
																"valueSize": 1
															}
														],
														"id": 347,
														"nodeType": "InlineAssembly",
														"src": "921:76:2"
													},
													{
														"body": {
															"id": 362,
															"nodeType": "Block",
															"src": "1023:269:2",
															"statements": [
																{
																	"expression": {
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:2",
																		"subExpression": {
																			"id": 349,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "1041:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 351,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:2"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:2",
																		"nodeType": "YulBlock",
																		"src": "1124:86:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:2",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:2"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:2",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:2",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:2"
																									},
																									"nativeSrc": "1164:14:2",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:2"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:2",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:2"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:2",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:2"
																							},
																							"nativeSrc": "1159:32:2",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:2"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:2",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:2"
																					},
																					"nativeSrc": "1146:46:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:2"
																				},
																				"nativeSrc": "1146:46:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:2"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 310,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 345,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 323,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:2",
																			"valueSize": 1
																		}
																	],
																	"id": 352,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:2"
																},
																{
																	"expression": {
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "1227:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 356,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 357,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "1260:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 361,
																	"nodeType": "IfStatement",
																	"src": "1256:21:2",
																	"trueBody": {
																		"id": 360,
																		"nodeType": "Break",
																		"src": "1272:5:2"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 363,
														"nodeType": "WhileStatement",
														"src": "1010:282:2"
													},
													{
														"expression": {
															"id": 364,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1312:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 327,
														"id": 365,
														"nodeType": "Return",
														"src": "1305:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:2"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "693:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:2"
									},
									"scope": 555,
									"src": "637:698:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "1511:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 379,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "1542:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:2",
															"trueExpression": {
																"hexValue": "2d",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 388,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 371,
																			"src": "1588:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 386,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "1573:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1726_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:2",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1725,
																		"src": "1573:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 385,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "1564:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 376,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:2",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 375,
												"id": 392,
												"nodeType": "Return",
												"src": "1521:75:2"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:2",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1459:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 370,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1496:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:2"
									},
									"scope": 555,
									"src": "1435:168:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1782:100:2",
										"statements": [
											{
												"id": 412,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "1835:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 406,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "1854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 404,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "1842:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1621_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:2",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1563,
																			"src": "1842:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	414,
																	497,
																	517
																],
																"referencedDeclaration": 497,
																"src": "1823:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 401,
														"id": 411,
														"nodeType": "Return",
														"src": "1816:49:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1729:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1767:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:2"
									},
									"scope": 555,
									"src": "1708:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "2095:435:2",
										"statements": [
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 496,
														"src": "2105:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"id": 426,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 417,
													"src": "2126:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:2"
											},
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 496,
														"src": "2141:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 428,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 433,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "2177:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 430,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:2"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 439,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2198:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 441,
														"indexExpression": {
															"hexValue": "30",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:2"
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 445,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2223:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 447,
														"indexExpression": {
															"hexValue": "31",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:2"
											},
											{
												"body": {
													"id": 479,
													"nodeType": "Block",
													"src": "2293:95:2",
													"statements": [
														{
															"expression": {
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 465,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2307:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 467,
																	"indexExpression": {
																		"id": 466,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "2314:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 468,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "2319:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 472,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 469,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "2330:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 474,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:2"
														},
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 475,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "2361:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2281:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"initializationExpression": {
													"assignments": [
														452
													],
													"declarations": [
														{
															"constant": false,
															"id": 452,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 480,
															"src": "2253:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 451,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 458,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 454,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "2269:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:2"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:2",
														"subExpression": {
															"id": 462,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "2290:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 464,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 481,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "2401:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 490,
												"nodeType": "IfStatement",
												"src": "2397:96:2",
												"trueBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "2418:75:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 485,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2468:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 486,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "2475:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 484,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "2439:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 488,
															"nodeType": "RevertStatement",
															"src": "2432:50:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2516:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 491,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 495,
												"nodeType": "Return",
												"src": "2502:21:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2026:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2041:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2080:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:2"
									},
									"scope": 555,
									"src": "2005:525:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2762:75:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 510,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "2807:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 513,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2815:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 505,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															414,
															497,
															517
														],
														"referencedDeclaration": 497,
														"src": "2779:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 504,
												"id": 515,
												"nodeType": "Return",
												"src": "2772:58:2"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:2",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2710:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:2"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2747:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:2"
									},
									"scope": 555,
									"src": "2689:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "2992:104:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 529,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "3015:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 527,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 534,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3034:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 532,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 541,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "3063:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 538,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 547,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "3086:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 545,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 544,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 526,
												"id": 552,
												"nodeType": "Return",
												"src": "3002:87:2"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:2",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2929:15:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2946:15:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2986:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:2"
									},
									"scope": 555,
									"src": "2914:182:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 556,
							"src": "251:2847:2",
							"usedErrors": [
								320
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							567
						]
					},
					"id": 568,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 557,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 558,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 567,
							"linearizedBaseContracts": [
								567
							],
							"name": "IERC165",
							"nameLocation": "431:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "817:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 560,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "860:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:3"
									},
									"scope": 567,
									"src": "790:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 568,
							"src": "421:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1621
						]
					},
					"id": 1622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 569,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1621,
							"linearizedBaseContracts": [
								1621
							],
							"name": "Math",
							"nameLocation": "211:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:4",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 573,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:4"
									},
									"src": "277:29:4"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 578,
									"members": [
										{
											"id": 574,
											"name": "Floor",
											"nameLocation": "336:5:4",
											"nodeType": "EnumValue",
											"src": "336:5:4"
										},
										{
											"id": 575,
											"name": "Ceil",
											"nameLocation": "379:4:4",
											"nodeType": "EnumValue",
											"src": "379:4:4"
										},
										{
											"id": 576,
											"name": "Trunc",
											"nameLocation": "421:5:4",
											"nodeType": "EnumValue",
											"src": "421:5:4"
										},
										{
											"id": 577,
											"name": "Expand",
											"nameLocation": "451:6:4",
											"nodeType": "EnumValue",
											"src": "451:6:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:4",
									"nodeType": "EnumDefinition",
									"src": "312:169:4"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "661:140:4",
										"statements": [
											{
												"id": 608,
												"nodeType": "UncheckedBlock",
												"src": "671:124:4",
												"statements": [
													{
														"assignments": [
															591
														],
														"declarations": [
															{
																"constant": false,
																"id": 591,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 608,
																"src": "695:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 590,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 595,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "707:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 593,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "711:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "730:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 597,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "726:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 589,
															"id": 602,
															"nodeType": "Return",
															"src": "737:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 605,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "782:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 606,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 589,
														"id": 607,
														"nodeType": "Return",
														"src": "768:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "646:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:4"
									},
									"scope": 1621,
									"src": "585:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "984:113:4",
										"statements": [
											{
												"id": 636,
												"nodeType": "UncheckedBlock",
												"src": "994:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 622,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1022:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 623,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "1026:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 629,
														"nodeType": "IfStatement",
														"src": "1018:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 627,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 621,
															"id": 628,
															"nodeType": "Return",
															"src": "1029:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 631,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "1074:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 632,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "1078:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 634,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 621,
														"id": 635,
														"nodeType": "Return",
														"src": "1060:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "924:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "969:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "975:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:4"
									},
									"scope": 1621,
									"src": "908:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1283:417:4",
										"statements": [
											{
												"id": 678,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 650,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1551:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 657,
														"nodeType": "IfStatement",
														"src": "1547:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 649,
															"id": 656,
															"nodeType": "Return",
															"src": "1559:16:4"
														}
													},
													{
														"assignments": [
															659
														],
														"declarations": [
															{
																"constant": false,
																"id": 659,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 678,
																"src": "1589:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 658,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 663,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "1601:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 661,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "1624:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 665,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "1628:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 667,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "1633:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 673,
														"nodeType": "IfStatement",
														"src": "1620:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 671,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 649,
															"id": 672,
															"nodeType": "Return",
															"src": "1636:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 675,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "1681:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 676,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 649,
														"id": 677,
														"nodeType": "Return",
														"src": "1667:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1223:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1234:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:4"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1274:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:4"
									},
									"scope": 1621,
									"src": "1207:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "1887:114:4",
										"statements": [
											{
												"id": 706,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 692,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "1925:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 699,
														"nodeType": "IfStatement",
														"src": "1921:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 691,
															"id": 698,
															"nodeType": "Return",
															"src": "1933:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 701,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "1978:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 702,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "1982:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 691,
														"id": 705,
														"nodeType": "Return",
														"src": "1964:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1827:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1838:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:4"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1872:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1878:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:4"
									},
									"scope": 1621,
									"src": "1811:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2198:114:4",
										"statements": [
											{
												"id": 734,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "2236:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 727,
														"nodeType": "IfStatement",
														"src": "2232:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 719,
															"id": 726,
															"nodeType": "Return",
															"src": "2244:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "2289:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "2293:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 719,
														"id": 733,
														"nodeType": "Return",
														"src": "2275:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2138:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2149:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:4"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2183:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2189:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:4"
									},
									"scope": 1621,
									"src": "2122:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "2449:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 746,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "2466:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 747,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "2470:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 750,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "2478:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:4",
													"trueExpression": {
														"id": 749,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "2474:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 745,
												"id": 752,
												"nodeType": "Return",
												"src": "2459:20:4"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "2395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "2406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "2440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:4"
									},
									"scope": 1621,
									"src": "2382:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "2624:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "2641:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 765,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "2645:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 768,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2653:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:4",
													"trueExpression": {
														"id": 767,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "2649:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 770,
												"nodeType": "Return",
												"src": "2634:20:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2570:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2581:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2615:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:4"
									},
									"scope": 1621,
									"src": "2557:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "2845:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "2900:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 783,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "2904:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 785,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 786,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "2910:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 787,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "2914:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 789,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 781,
												"id": 793,
												"nodeType": "Return",
												"src": "2892:28:4"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2802:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:4"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2836:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:4"
									},
									"scope": 1621,
									"src": "2774:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "3219:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 805,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "3233:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "3229:127:4",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "3241:115:4",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 808,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "3340:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 809,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "3344:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 804,
															"id": 811,
															"nodeType": "Return",
															"src": "3333:12:4"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 814,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "3444:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 818,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "3458:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 821,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 822,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "3467:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 804,
												"id": 827,
												"nodeType": "Return",
												"src": "3437:35:4"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "3165:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "3176:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:4"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "3210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:4"
									},
									"scope": 1621,
									"src": "3148:331:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "3901:4018:4",
										"statements": [
											{
												"id": 953,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:4",
												"statements": [
													{
														"assignments": [
															842
														],
														"declarations": [
															{
																"constant": false,
																"id": 842,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 953,
																"src": "4232:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 841,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 846,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 843,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "4248:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 844,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "4252:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:4"
													},
													{
														"assignments": [
															848
														],
														"declarations": [
															{
																"constant": false,
																"id": 848,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 953,
																"src": "4312:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 847,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:4"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:4",
															"nodeType": "YulBlock",
															"src": "4392:122:4",
															"statements": [
																{
																	"nativeSrc": "4410:30:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:4",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:4"
																				},
																				"nativeSrc": "4433:6:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:4"
																		},
																		"nativeSrc": "4420:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:4",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:4",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:4"
																				},
																				"nativeSrc": "4470:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:4"
																				},
																				"nativeSrc": "4486:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:4"
																		},
																		"nativeSrc": "4466:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 842,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:4",
																"valueSize": 1
															},
															{
																"declaration": 842,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:4",
																"valueSize": 1
															},
															{
																"declaration": 848,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:4",
																"valueSize": 1
															},
															{
																"declaration": 832,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:4",
																"valueSize": 1
															},
															{
																"declaration": 834,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:4",
																"valueSize": 1
															}
														],
														"id": 850,
														"nodeType": "InlineAssembly",
														"src": "4383:131:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "4595:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "4591:368:4",
														"trueBody": {
															"id": 858,
															"nodeType": "Block",
															"src": "4607:352:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 854,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "4925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 855,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "4933:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 840,
																	"id": 857,
																	"nodeType": "Return",
																	"src": "4918:26:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "5065:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 861,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "5080:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 867,
														"nodeType": "IfStatement",
														"src": "5061:88:4",
														"trueBody": {
															"id": 866,
															"nodeType": "Block",
															"src": "5087:62:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 863,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 573,
																			"src": "5112:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 865,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:4"
																}
															]
														}
													},
													{
														"assignments": [
															869
														],
														"declarations": [
															{
																"constant": false,
																"id": 869,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 953,
																"src": "5404:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 870,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:4"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:4",
															"nodeType": "YulBlock",
															"src": "5444:291:4",
															"statements": [
																{
																	"nativeSrc": "5513:38:4",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:4"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:4"
																		},
																		"nativeSrc": "5526:25:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:4",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:4"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:4",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:4"
																				},
																				"nativeSrc": "5653:20:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:4"
																		},
																		"nativeSrc": "5642:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:4",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:4"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:4"
																		},
																		"nativeSrc": "5700:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 836,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:4",
																"valueSize": 1
															},
															{
																"declaration": 842,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:4",
																"valueSize": 1
															},
															{
																"declaration": 842,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:4",
																"valueSize": 1
															},
															{
																"declaration": 842,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:4",
																"valueSize": 1
															},
															{
																"declaration": 848,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:4",
																"valueSize": 1
															},
															{
																"declaration": 848,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:4",
																"valueSize": 1
															},
															{
																"declaration": 869,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:4",
																"valueSize": 1
															},
															{
																"declaration": 869,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:4",
																"valueSize": 1
															},
															{
																"declaration": 869,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:4",
																"valueSize": 1
															},
															{
																"declaration": 832,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:4",
																"valueSize": 1
															},
															{
																"declaration": 834,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:4",
																"valueSize": 1
															}
														],
														"id": 871,
														"nodeType": "InlineAssembly",
														"src": "5435:300:4"
													},
													{
														"assignments": [
															873
														],
														"declarations": [
															{
																"constant": false,
																"id": 873,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 953,
																"src": "5939:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 872,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 880,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "5954:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 876,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "5973:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 878,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:4"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:4",
															"nodeType": "YulBlock",
															"src": "6008:362:4",
															"statements": [
																{
																	"nativeSrc": "6073:37:4",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:4"
																		},
																		"nativeSrc": "6088:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:4",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:4",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:4"
																		},
																		"nativeSrc": "6186:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:4",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:4",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:4"
																						},
																						"nativeSrc": "6333:12:4",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:4"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:4"
																				},
																				"nativeSrc": "6329:23:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:4"
																		},
																		"nativeSrc": "6325:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:4",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 836,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:4",
																"valueSize": 1
															},
															{
																"declaration": 836,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:4",
																"valueSize": 1
															},
															{
																"declaration": 842,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:4",
																"valueSize": 1
															},
															{
																"declaration": 842,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:4",
																"valueSize": 1
															},
															{
																"declaration": 873,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:4",
																"valueSize": 1
															},
															{
																"declaration": 873,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:4",
																"valueSize": 1
															},
															{
																"declaration": 873,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:4",
																"valueSize": 1
															},
															{
																"declaration": 873,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:4",
																"valueSize": 1
															},
															{
																"declaration": 873,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:4",
																"valueSize": 1
															}
														],
														"id": 881,
														"nodeType": "InlineAssembly",
														"src": "5999:371:4"
													},
													{
														"expression": {
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 882,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "6436:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 883,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "6445:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 884,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "6453:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 887,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:4"
													},
													{
														"assignments": [
															889
														],
														"declarations": [
															{
																"constant": false,
																"id": 889,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 953,
																"src": "6775:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 888,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 896,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 891,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "6798:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:4"
													},
													{
														"expression": {
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 897,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "7031:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 899,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "7046:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 900,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7060:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 904,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:4"
													},
													{
														"expression": {
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 905,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "7100:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 907,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "7115:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 908,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 912,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:4"
													},
													{
														"expression": {
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 913,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "7170:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 915,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "7185:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 916,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7199:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 920,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:4"
													},
													{
														"expression": {
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 921,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "7240:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 923,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "7255:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 924,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7269:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 928,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:4"
													},
													{
														"expression": {
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 929,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "7310:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 931,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "7325:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 932,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7339:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 936,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:4"
													},
													{
														"expression": {
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 937,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "7381:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 939,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "7396:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 940,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7410:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 944,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:4"
													},
													{
														"expression": {
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 945,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "7851:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 946,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "7860:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 947,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "7868:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 950,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:4"
													},
													{
														"expression": {
															"id": 951,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "7896:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 840,
														"id": 952,
														"nodeType": "Return",
														"src": "7889:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3819:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3830:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3841:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3885:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:4"
									},
									"scope": 1621,
									"src": "3803:4116:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "8161:192:4",
										"statements": [
											{
												"assignments": [
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "8171:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 970,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [
														{
															"id": 973,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "8195:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 974,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "8198:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "8201:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															955,
															998
														],
														"referencedDeclaration": 955,
														"src": "8188:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 979,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "8244:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$578",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$578",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 978,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "8227:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$578_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 982,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "8264:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 983,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "8267:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 984,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "8270:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 981,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "8223:101:4",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "8288:36:4",
													"statements": [
														{
															"expression": {
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 989,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "8302:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 995,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 971,
													"src": "8340:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 969,
												"id": 996,
												"nodeType": "Return",
												"src": "8333:13:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "8067:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "8078:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "8089:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "8110:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$578",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 964,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 963,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 578,
														"src": "8110:8:4"
													},
													"referencedDeclaration": 578,
													"src": "8110:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$578",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:4"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "8152:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:4"
									},
									"scope": 1621,
									"src": "8051:302:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "8644:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1006,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "8658:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "8654:45:4",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "8666:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1005,
															"id": 1010,
															"nodeType": "Return",
															"src": "8680:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1109,
														"src": "9378:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1017,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "9406:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1016,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1277,
																			1312
																		],
																		"referencedDeclaration": 1277,
																		"src": "9401:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1021,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:4"
											},
											{
												"id": 1108,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:4",
												"statements": [
													{
														"expression": {
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1024,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "9839:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1025,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "9849:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1026,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "9858:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1027,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "9862:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1034,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:4"
													},
													{
														"expression": {
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1035,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "9888:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1036,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "9898:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1037,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "9907:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1038,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "9911:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1041,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1045,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:4"
													},
													{
														"expression": {
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1046,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "9937:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1047,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "9947:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1048,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "9956:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1049,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "9960:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1052,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1056,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:4"
													},
													{
														"expression": {
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1057,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "9986:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1058,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "9996:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1059,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "10005:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1060,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "10009:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1063,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1067,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:4"
													},
													{
														"expression": {
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1068,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "10035:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1069,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "10045:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1070,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "10054:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1071,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "10058:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1074,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1078,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:4"
													},
													{
														"expression": {
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1079,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "10084:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1080,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "10094:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1081,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "10103:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1082,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "10107:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1085,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1089,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:4"
													},
													{
														"expression": {
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1090,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "10133:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1091,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "10143:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1092,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "10152:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1093,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "10156:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1096,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1100,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1102,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "10193:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1103,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "10201:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1104,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "10205:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1101,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "10189:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1005,
														"id": 1107,
														"nodeType": "Return",
														"src": "10182:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "8601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:4"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "8635:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:4"
									},
									"scope": 1621,
									"src": "8587:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "10405:164:4",
										"statements": [
											{
												"id": 1143,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:4",
												"statements": [
													{
														"assignments": [
															1122
														],
														"declarations": [
															{
																"constant": false,
																"id": 1122,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1143,
																"src": "10439:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1121,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1126,
														"initialValue": {
															"arguments": [
																{
																	"id": 1124,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "10461:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1123,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1110,
																	1145
																],
																"referencedDeclaration": 1110,
																"src": "10456:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1127,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "10484:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1129,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1116,
																						"src": "10511:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1128,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1620,
																					"src": "10494:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$578_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1131,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1122,
																						"src": "10524:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1132,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1122,
																						"src": "10533:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1134,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "10542:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1120,
														"id": 1142,
														"nodeType": "Return",
														"src": "10477:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10354:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$578",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1114,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 578,
														"src": "10354:8:4"
													},
													"referencedDeclaration": 578,
													"src": "10354:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$578",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:4"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10396:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:4"
									},
									"scope": 1621,
									"src": "10329:240:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "10760:922:4",
										"statements": [
											{
												"assignments": [
													1154
												],
												"declarations": [
													{
														"constant": false,
														"id": 1154,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1276,
														"src": "10770:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"hexValue": "30",
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:4"
											},
											{
												"id": 1273,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1157,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "10826:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1171,
														"nodeType": "IfStatement",
														"src": "10822:99:4",
														"trueBody": {
															"id": 1170,
															"nodeType": "Block",
															"src": "10844:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1162,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "10862:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1165,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:4"
																},
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "10893:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1172,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "10938:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1186,
														"nodeType": "IfStatement",
														"src": "10934:96:4",
														"trueBody": {
															"id": 1185,
															"nodeType": "Block",
															"src": "10955:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1177,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "10973:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1180,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:4"
																},
																{
																	"expression": {
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11003:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "11047:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1201,
														"nodeType": "IfStatement",
														"src": "11043:96:4",
														"trueBody": {
															"id": 1200,
															"nodeType": "Block",
															"src": "11064:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1192,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "11082:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1195,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:4"
																},
																{
																	"expression": {
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1196,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11112:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1199,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1202,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "11156:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1216,
														"nodeType": "IfStatement",
														"src": "11152:96:4",
														"trueBody": {
															"id": 1215,
															"nodeType": "Block",
															"src": "11173:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1207,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "11191:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1210,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:4"
																},
																{
																	"expression": {
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1211,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11221:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1214,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1217,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "11265:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1231,
														"nodeType": "IfStatement",
														"src": "11261:93:4",
														"trueBody": {
															"id": 1230,
															"nodeType": "Block",
															"src": "11281:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1222,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "11299:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1225,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:4"
																},
																{
																	"expression": {
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1226,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11328:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1229,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1232,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "11371:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1246,
														"nodeType": "IfStatement",
														"src": "11367:93:4",
														"trueBody": {
															"id": 1245,
															"nodeType": "Block",
															"src": "11387:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1237,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "11405:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1240,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:4"
																},
																{
																	"expression": {
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1241,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11434:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1244,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1247,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "11477:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1261,
														"nodeType": "IfStatement",
														"src": "11473:93:4",
														"trueBody": {
															"id": 1260,
															"nodeType": "Block",
															"src": "11493:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1252,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "11511:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1255,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:4"
																},
																{
																	"expression": {
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1256,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11540:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1259,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1262,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "11583:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1272,
														"nodeType": "IfStatement",
														"src": "11579:64:4",
														"trueBody": {
															"id": 1271,
															"nodeType": "Block",
															"src": "11599:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11617:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1270,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1274,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1154,
													"src": "11669:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1275,
												"nodeType": "Return",
												"src": "11662:13:4"
											}
										]
									},
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:4",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "10713:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:4"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "10751:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:4"
									},
									"scope": 1621,
									"src": "10699:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "11915:168:4",
										"statements": [
											{
												"id": 1310,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:4",
												"statements": [
													{
														"assignments": [
															1289
														],
														"declarations": [
															{
																"constant": false,
																"id": 1289,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1310,
																"src": "11949:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1288,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1293,
														"initialValue": {
															"arguments": [
																{
																	"id": 1291,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "11971:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1290,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1277,
																	1312
																],
																"referencedDeclaration": 1277,
																"src": "11966:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1294,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "11998:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1296,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1283,
																						"src": "12025:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1295,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1620,
																					"src": "12008:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$578_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1299,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1289,
																						"src": "12043:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1301,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "12052:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1307,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1287,
														"id": 1309,
														"nodeType": "Return",
														"src": "11991:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "11849:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "11864:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$578",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1281,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 578,
														"src": "11864:8:4"
													},
													"referencedDeclaration": 578,
													"src": "11864:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$578",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:4"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "11906:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:4"
									},
									"scope": 1621,
									"src": "11835:248:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "12276:854:4",
										"statements": [
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1440,
														"src": "12286:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1320,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"hexValue": "30",
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:4"
											},
											{
												"id": 1437,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "12342:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1340,
														"nodeType": "IfStatement",
														"src": "12338:103:4",
														"trueBody": {
															"id": 1339,
															"nodeType": "Block",
															"src": "12361:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "12379:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1334,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:4"
																},
																{
																	"expression": {
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1335,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "12414:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1338,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1341,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "12458:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1357,
														"nodeType": "IfStatement",
														"src": "12454:103:4",
														"trueBody": {
															"id": 1356,
															"nodeType": "Block",
															"src": "12477:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1346,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "12495:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:4"
																},
																{
																	"expression": {
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1352,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "12530:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1355,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1358,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "12574:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1374,
														"nodeType": "IfStatement",
														"src": "12570:103:4",
														"trueBody": {
															"id": 1373,
															"nodeType": "Block",
															"src": "12593:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1363,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "12611:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1368,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:4"
																},
																{
																	"expression": {
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1369,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "12646:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1372,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1375,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "12690:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1391,
														"nodeType": "IfStatement",
														"src": "12686:100:4",
														"trueBody": {
															"id": 1390,
															"nodeType": "Block",
															"src": "12708:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1380,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "12726:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1385,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:4"
																},
																{
																	"expression": {
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1386,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "12760:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1389,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1392,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "12803:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1408,
														"nodeType": "IfStatement",
														"src": "12799:100:4",
														"trueBody": {
															"id": 1407,
															"nodeType": "Block",
															"src": "12821:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1397,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "12839:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1402,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:4"
																},
																{
																	"expression": {
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1403,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "12873:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1406,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "12916:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1425,
														"nodeType": "IfStatement",
														"src": "12912:100:4",
														"trueBody": {
															"id": 1424,
															"nodeType": "Block",
															"src": "12934:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1414,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "12952:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1419,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:4"
																},
																{
																	"expression": {
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1420,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "12986:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1423,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1426,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "13029:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1436,
														"nodeType": "IfStatement",
														"src": "13025:66:4",
														"trueBody": {
															"id": 1435,
															"nodeType": "Block",
															"src": "13047:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "13065:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1434,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1438,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1321,
													"src": "13117:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1439,
												"nodeType": "Return",
												"src": "13110:13:4"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:4",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "12229:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:4"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "12267:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:4"
									},
									"scope": 1621,
									"src": "12214:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "13365:170:4",
										"statements": [
											{
												"id": 1474,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:4",
												"statements": [
													{
														"assignments": [
															1453
														],
														"declarations": [
															{
																"constant": false,
																"id": 1453,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1474,
																"src": "13399:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1452,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1457,
														"initialValue": {
															"arguments": [
																{
																	"id": 1455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "13422:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1454,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1441,
																	1476
																],
																"referencedDeclaration": 1441,
																"src": "13416:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "13449:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1460,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1447,
																						"src": "13476:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1459,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1620,
																					"src": "13459:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$578_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1463,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1453,
																						"src": "13495:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1465,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "13504:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1471,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1451,
														"id": 1473,
														"nodeType": "Return",
														"src": "13442:76:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "13299:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "13314:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$578",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1445,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 578,
														"src": "13314:8:4"
													},
													"referencedDeclaration": 578,
													"src": "13314:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$578",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:4"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "13356:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:4"
									},
									"scope": 1621,
									"src": "13284:251:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "13855:600:4",
										"statements": [
											{
												"assignments": [
													1485
												],
												"declarations": [
													{
														"constant": false,
														"id": 1485,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1562,
														"src": "13865:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"hexValue": "30",
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:4"
											},
											{
												"id": 1559,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1488,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "13921:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1502,
														"nodeType": "IfStatement",
														"src": "13917:98:4",
														"trueBody": {
															"id": 1501,
															"nodeType": "Block",
															"src": "13939:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "13957:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:4"
																},
																{
																	"expression": {
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1497,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "13988:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1500,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "14032:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1517,
														"nodeType": "IfStatement",
														"src": "14028:95:4",
														"trueBody": {
															"id": 1516,
															"nodeType": "Block",
															"src": "14049:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "14067:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1511,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:4"
																},
																{
																	"expression": {
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "14097:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1515,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "14140:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "14136:95:4",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "14157:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "14175:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:4"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "14205:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "14248:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1547,
														"nodeType": "IfStatement",
														"src": "14244:95:4",
														"trueBody": {
															"id": 1546,
															"nodeType": "Block",
															"src": "14265:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "14283:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1541,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:4"
																},
																{
																	"expression": {
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1542,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "14313:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1545,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1548,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "14356:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1558,
														"nodeType": "IfStatement",
														"src": "14352:64:4",
														"trueBody": {
															"id": 1557,
															"nodeType": "Block",
															"src": "14372:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1553,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "14390:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1556,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1560,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1485,
													"src": "14442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1561,
												"nodeType": "Return",
												"src": "14435:13:4"
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:4",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "13808:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:4"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "13846:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:4"
									},
									"scope": 1621,
									"src": "13792:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "14692:177:4",
										"statements": [
											{
												"id": 1599,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:4",
												"statements": [
													{
														"assignments": [
															1575
														],
														"declarations": [
															{
																"constant": false,
																"id": 1575,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1599,
																"src": "14726:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1574,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1579,
														"initialValue": {
															"arguments": [
																{
																	"id": 1577,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "14750:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1576,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1563,
																	1601
																],
																"referencedDeclaration": 1563,
																"src": "14743:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1580,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "14777:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1582,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1569,
																						"src": "14804:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$578",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1581,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1620,
																					"src": "14787:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$578_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1589,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1584,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1587,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1585,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1575,
																									"src": "14823:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1586,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1588,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1590,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1566,
																					"src": "14838:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1596,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1573,
														"id": 1598,
														"nodeType": "Return",
														"src": "14770:82:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:4",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "14626:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "14641:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$578",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1568,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1567,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 578,
														"src": "14641:8:4"
													},
													"referencedDeclaration": 578,
													"src": "14641:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$578",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:4"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "14683:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:4"
									},
									"scope": 1621,
									"src": "14610:259:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "15067:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1612,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "15090:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$578",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$578",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1610,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1618,
												"nodeType": "Return",
												"src": "15077:31:4"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:4",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "15019:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$578",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1603,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 578,
														"src": "15019:8:4"
													},
													"referencedDeclaration": 578,
													"src": "15019:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$578",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "15061:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:4"
									},
									"scope": 1621,
									"src": "14993:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1622,
							"src": "203:14914:4",
							"usedErrors": [
								573
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1726
						]
					},
					"id": 1727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1623,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1624,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:5",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1726,
							"linearizedBaseContracts": [
								1726
							],
							"name": "SignedMath",
							"nameLocation": "224:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "376:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1634,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "393:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1635,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "397:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1638,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "405:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:5",
													"trueExpression": {
														"id": 1637,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "401:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1640,
												"nodeType": "Return",
												"src": "386:20:5"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:5",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "325:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1626,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "335:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1628,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:5"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "368:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1631,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:5"
									},
									"scope": 1726,
									"src": "312:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "555:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1652,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1653,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "576:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1656,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "584:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:5",
													"trueExpression": {
														"id": 1655,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "580:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1658,
												"nodeType": "Return",
												"src": "565:20:5"
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:5",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "504:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1644,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "514:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1646,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:5"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "547:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1649,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:5"
									},
									"scope": 1726,
									"src": "491:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "797:162:5",
										"statements": [
											{
												"assignments": [
													1671
												],
												"declarations": [
													{
														"constant": false,
														"id": 1671,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "859:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1670,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1684,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1672,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "871:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1673,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "875:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1675,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1676,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1663,
																				"src": "882:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1677,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1665,
																				"src": "886:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1679,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1682,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1685,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "911:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1690,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "931:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1688,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1686,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1695,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1663,
																				"src": "945:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1696,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1665,
																				"src": "949:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1698,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1700,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1702,
												"nodeType": "Return",
												"src": "904:48:5"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:5",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "746:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1662,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "756:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1664,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:5"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "789:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1667,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:5"
									},
									"scope": 1726,
									"src": "729:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "1103:158:5",
										"statements": [
											{
												"id": 1723,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1714,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "1228:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:5",
																		"subExpression": {
																			"id": 1718,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "1242:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:5",
																	"trueExpression": {
																		"id": 1717,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "1237:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1712,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1711,
														"id": 1722,
														"nodeType": "Return",
														"src": "1213:31:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:5",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "1061:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:5"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 1726,
									"src": "1048:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1727,
							"src": "216:1047:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:5"
				},
				"id": 5
			},
			"contracts/IERC3525Upgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/IERC3525Upgradeable.sol",
					"exportedSymbols": {
						"IERC165": [
							567
						],
						"IERC3525Upgradeable": [
							1827
						],
						"IERC721Upgradeable": [
							1943
						]
					},
					"id": 1828,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1728,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1828,
							"sourceUnit": 568,
							"src": "58:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC721Upgradeable.sol",
							"file": "./IERC721Upgradeable.sol",
							"id": 1730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1828,
							"sourceUnit": 1944,
							"src": "124:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1732,
										"name": "IERC165",
										"nameLocations": [
											"367:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 567,
										"src": "367:7:6"
									},
									"id": 1733,
									"nodeType": "InheritanceSpecifier",
									"src": "367:7:6"
								},
								{
									"baseName": {
										"id": 1734,
										"name": "IERC721Upgradeable",
										"nameLocations": [
											"376:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1943,
										"src": "376:18:6"
									},
									"id": 1735,
									"nodeType": "InheritanceSpecifier",
									"src": "376:18:6"
								}
							],
							"canonicalName": "IERC3525Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1731,
								"nodeType": "StructuredDocumentation",
								"src": "160:173:6",
								"text": " @title ERC-3525 Semi-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0xd5358140."
							},
							"fullyImplemented": false,
							"id": 1827,
							"linearizedBaseContracts": [
								1827,
								1943,
								567
							],
							"name": "IERC3525Upgradeable",
							"nameLocation": "344:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "401:434:6",
										"text": " @dev MUST emit when value of a token is transferred to another token with the same slot,\n  including zero value transfers (_value == 0) as well as transfers when tokens are created\n  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\n @param _fromTokenId The token id to transfer value from\n @param _toTokenId The token id to transfer value to\n @param _value The transferred value"
									},
									"eventSelector": "0b2aac84f3ec956911fd78eae5311062972ff949f38412e8da39069d9f068cc6",
									"id": 1744,
									"name": "TransferValue",
									"nameLocation": "846:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"indexed": true,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "876:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "860:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"indexed": true,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "906:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "890:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "926:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "918:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:74:6"
									},
									"src": "840:94:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "940:261:6",
										"text": " @dev MUST emits when the approval value of a token is set or changed.\n @param _tokenId The token to approve\n @param _operator The operator to approve for\n @param _value The maximum value that `_operator` is allowed to manage"
									},
									"eventSelector": "621b050de0ad08b51d19b48b3e6df75348c4de6bdd93e81b252ca62e28265b1b",
									"id": 1753,
									"name": "ApprovalValue",
									"nameLocation": "1212:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1242:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1226:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1268:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1252:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1287:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1279:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:69:6"
									},
									"src": "1206:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "1301:249:6",
										"text": " @dev MUST emit when the slot of a token is set or changed.\n @param _tokenId The token of which slot is set or changed\n @param _oldSlot The previous slot of the token\n @param _newSlot The updated slot of the token"
									},
									"eventSelector": "e4f48c240d3b994948aa54f3e2f5fca59263dfe1d52b6e4cf39a5d249b5ccb65",
									"id": 1762,
									"name": "SlotChanged",
									"nameLocation": "1562:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1590:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1574:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"indexed": true,
												"mutability": "mutable",
												"name": "_oldSlot",
												"nameLocation": "1616:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1600:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newSlot",
												"nameLocation": "1642:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1626:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:78:6"
									},
									"src": "1556:96:6"
								},
								{
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "1658:424:6",
										"text": " @notice Get the number of decimals the token uses for value - e.g. 6, means the user\n  representation of the value of a token can be calculated by dividing it by 1,000,000.\n  Considering the compatibility with third-party wallets, this function is defined as\n  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\n @return The number of decimals for value"
									},
									"functionSelector": "3e7e8669",
									"id": 1768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "valueDecimals",
									"nameLocation": "2096:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2109:2:6"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "2135:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1765,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2135:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:7:6"
									},
									"scope": 1827,
									"src": "2087:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "2148:155:6",
										"text": " @notice Get the value of a token.\n @param _tokenId The token for which to query the balance\n @return The value of `_tokenId`"
									},
									"functionSelector": "9cc7f708",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2317:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2335:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "2327:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:18:6"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "2368:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:9:6"
									},
									"scope": 1827,
									"src": "2308:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "2383:138:6",
										"text": " @notice Get the slot of a token.\n @param _tokenId The identifier for a token\n @return The slot of the token"
									},
									"functionSelector": "263f3e7e",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slotOf",
									"nameLocation": "2535:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2550:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2542:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:18:6"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2583:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2582:9:6"
									},
									"scope": 1827,
									"src": "2526:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "2598:463:6",
										"text": " @notice Allow an operator to manage the value of a token, up to the `_value` amount.\n @dev MUST revert unless caller is the current owner, an authorized operator, or the approved\n  address for `_tokenId`.\n  MUST emit ApprovalValue event.\n @param _tokenId The token to approve\n @param _operator The operator to be approved\n @param _value The maximum value of `_toTokenId` that `_operator` is allowed to manage"
									},
									"functionSelector": "8cb0a511",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3075:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3100:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "3092:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3126:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "3118:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3153:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "3145:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:83:6"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:0:6"
									},
									"scope": 1827,
									"src": "3066:117:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "3189:309:6",
										"text": " @notice Get the maximum value of a token that an operator is allowed to manage.\n @param _tokenId The token for which to query the allowance\n @param _operator The address of an operator\n @return The current approval value of `_tokenId` that `_operator` is allowed to manage"
									},
									"functionSelector": "e345e0bc",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3512:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3530:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3522:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3548:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3540:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:37:6"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3582:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:9:6"
									},
									"scope": 1827,
									"src": "3503:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "3597:745:6",
										"text": " @notice Transfer value from a specified token to another specified token with the same slot.\n @dev Caller MUST be the current owner, an authorized operator or an operator who has been\n  approved the whole `_fromTokenId` or part of it.\n  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.\n  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `TransferValue` event.\n @param _fromTokenId The token to transfer value from\n @param _toTokenId The token to transfer value to\n @param _value The transferred value"
									},
									"functionSelector": "310ed7f0",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4356:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "4386:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4378:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "4416:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4408:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "4444:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4436:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4368:88:6"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4473:0:6"
									},
									"scope": 1827,
									"src": "4347:127:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "4480:826:6",
										"text": " @notice Transfer value from a specified token to an address. The caller should confirm that\n  `_to` is capable of receiving ERC3525 tokens.\n @dev This function MUST create a new ERC3525 token with the same slot for `_to` to receive\n  the transferred value.\n  MUST revert if `_fromTokenId` is zero token id or does not exist.\n  MUST revert if `_to` is zero address.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `Transfer` and `TransferValue` events.\n @param _fromTokenId The token to transfer value from\n @param _to The address to transfer value to\n @param _value The transferred value\n @return ID of the new token created for `_to` which receives the transferred value"
									},
									"functionSelector": "0f485c02",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5320:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "5350:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5342:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5380:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5372:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5372:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5401:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5393:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5332:81:6"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:9:6"
									},
									"scope": 1827,
									"src": "5311:138:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1828,
							"src": "334:5117:6",
							"usedErrors": [],
							"usedEvents": [
								1744,
								1753,
								1762,
								1842,
								1851,
								1860
							]
						}
					],
					"src": "33:5419:6"
				},
				"id": 6
			},
			"contracts/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165": [
							567
						],
						"IERC721Upgradeable": [
							1943
						]
					},
					"id": 1944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1829,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1830,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1944,
							"sourceUnit": 568,
							"src": "58:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1832,
										"name": "IERC165",
										"nameLocations": [
											"330:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 567,
										"src": "330:7:7"
									},
									"id": 1833,
									"nodeType": "InheritanceSpecifier",
									"src": "330:7:7"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1831,
								"nodeType": "StructuredDocumentation",
								"src": "125:172:7",
								"text": " @title ERC-721 Non-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x80ac58cd."
							},
							"fullyImplemented": false,
							"id": 1943,
							"linearizedBaseContracts": [
								1943,
								567
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "308:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "344:400:7",
										"text": " @dev This emits when ownership of any NFT changes by any mechanism.\n  This event emits when NFTs are created (`from` == 0) and destroyed\n  (`to` == 0). Exception: during contract creation, any number of NFTs\n  may be created and assigned without emitting Transfer. At the time of\n  any transfer, the approved address for that NFT (if any) is reset to none."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1842,
									"name": "Transfer",
									"nameLocation": "755:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "780:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "764:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "803:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "787:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "824:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "808:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:70:7"
									},
									"src": "749:85:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "840:293:7",
										"text": " @dev This emits when the approved address for an NFT is changed or\n  reaffirmed. The zero address indicates there is no approved address.\n  When a Transfer event emits, this also indicates that the approved\n  address for that NFT (if any) is reset to none."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1851,
									"name": "Approval",
									"nameLocation": "1144:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1169:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1153:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"indexed": true,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1193:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1177:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1220:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1204:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:77:7"
									},
									"src": "1138:92:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "1236:143:7",
										"text": " @dev This emits when an operator is enabled or disabled for an owner.\n  The operator can manage all NFTs of the owner."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1860,
									"name": "ApprovalForAll",
									"nameLocation": "1390:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1421:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1405:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1445:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1429:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1461:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1456:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1456:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:67:7"
									},
									"src": "1384:88:7"
								},
								{
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "1478:330:7",
										"text": " @notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
									},
									"functionSelector": "70a08231",
									"id": 1868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1822:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1840:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1832:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:16:7"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1871:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:9:7"
									},
									"scope": 1943,
									"src": "1813:67:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "1886:258:7",
										"text": " @notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
									},
									"functionSelector": "6352211e",
									"id": 1876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2158:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2174:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2166:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:18:7"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2207:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:9:7"
									},
									"scope": 1943,
									"src": "2149:67:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "2222:844:7",
										"text": " @notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
									},
									"functionSelector": "b88d4fde",
									"id": 1888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3080:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3105:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3097:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3120:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3112:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3133:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3125:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3158:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3143:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3143:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:67:7"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3180:0:7"
									},
									"scope": 1943,
									"src": "3071:110:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "3187:358:7",
										"text": " @notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n  except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "42842e0e",
									"id": 1898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3559:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3584:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "3576:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3576:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3599:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "3591:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3612:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "3604:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3604:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3575:46:7"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3638:0:7"
									},
									"scope": 1943,
									"src": "3550:89:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "3645:581:7",
										"text": " @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "23b872dd",
									"id": 1908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4240:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4261:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "4253:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4276:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "4268:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4268:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4289:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "4281:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:46:7"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4315:0:7"
									},
									"scope": 1943,
									"src": "4231:85:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "4322:361:7",
										"text": " @notice Change or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n  Throws unless `msg.sender` is the current NFT owner, or an authorized\n  operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
									},
									"functionSelector": "095ea7b3",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4697:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4713:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "4705:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4732:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "4724:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4704:37:7"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4758:0:7"
									},
									"scope": 1943,
									"src": "4688:71:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "4765:394:7",
										"text": " @notice Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @dev Emits the ApprovalForAll event. The contract MUST allow\n  multiple operators per owner.\n @param _operator Address to add to the set of authorized operators\n @param _approved True if the operator is approved, false to revoke approval"
									},
									"functionSelector": "a22cb465",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5173:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5199:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5191:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5215:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5210:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1920,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5210:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5190:35:7"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5234:0:7"
									},
									"scope": 1943,
									"src": "5164:71:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "5241:272:7",
										"text": " @notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
									},
									"functionSelector": "081812fc",
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5527:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5547:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "5539:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5538:18:7"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "5580:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5580:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5579:9:7"
									},
									"scope": 1943,
									"src": "5518:71:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "5595:302:7",
										"text": " @notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
									},
									"functionSelector": "e985e9c5",
									"id": 1942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5911:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5936:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5928:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5928:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5952:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5944:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5927:35:7"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "5986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5985:6:7"
									},
									"scope": 1943,
									"src": "5902:90:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1944,
							"src": "298:5696:7",
							"usedErrors": [],
							"usedEvents": [
								1842,
								1851,
								1860
							]
						}
					],
					"src": "33:5962:7"
				},
				"id": 7
			},
			"contracts/extensions/IERC3525MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/extensions/IERC3525MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC165": [
							567
						],
						"IERC3525MetadataUpgradeable": [
							1967
						],
						"IERC3525Upgradeable": [
							1827
						],
						"IERC721MetadataUpgradeable": [
							1994
						],
						"IERC721Upgradeable": [
							1943
						]
					},
					"id": 1968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1945,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "contracts/IERC3525Upgradeable.sol",
							"file": "../IERC3525Upgradeable.sol",
							"id": 1946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 1828,
							"src": "58:36:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/extensions/IERC721MetadataUpgradeable.sol",
							"file": "./IERC721MetadataUpgradeable.sol",
							"id": 1947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 1995,
							"src": "95:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1949,
										"name": "IERC3525Upgradeable",
										"nameLocations": [
											"893:19:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1827,
										"src": "893:19:8"
									},
									"id": 1950,
									"nodeType": "InheritanceSpecifier",
									"src": "893:19:8"
								},
								{
									"baseName": {
										"id": 1951,
										"name": "IERC721MetadataUpgradeable",
										"nameLocations": [
											"914:26:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1994,
										"src": "914:26:8"
									},
									"id": 1952,
									"nodeType": "InheritanceSpecifier",
									"src": "914:26:8"
								}
							],
							"canonicalName": "IERC3525MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1948,
								"nodeType": "StructuredDocumentation",
								"src": "139:712:8",
								"text": " @title ERC-3525 Semi-Fungible Token Standard, optional extension for metadata\n @dev Interfaces for any contract that wants to support query of the Uniform Resource Identifier\n  (URI) for the ERC3525 contract as well as a specified slot.\n  Because of the higher reliability of data stored in smart contracts compared to data stored in\n  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and\n  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing\n  to any resource stored in a centralized system.\n  See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0xe1600902."
							},
							"fullyImplemented": false,
							"id": 1967,
							"linearizedBaseContracts": [
								1967,
								1994,
								1827,
								1943,
								567
							],
							"name": "IERC3525MetadataUpgradeable",
							"nameLocation": "862:27:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "947:403:8",
										"text": " @notice Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract.\n @dev This function SHOULD return the URI for this contract in JSON format, starting with\n  header `data:application/json;`.\n  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.\n @return The JSON formatted URI of the current ERC3525 contract"
									},
									"functionSelector": "e8a3d485",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contractURI",
									"nameLocation": "1364:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:2:8"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "1401:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1401:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:15:8"
									},
									"scope": 1967,
									"src": "1355:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "1422:362:8",
										"text": " @notice Returns the Uniform Resource Identifier (URI) for the specified slot.\n @dev This function SHOULD return the URI for `_slot` in JSON format, starting with header\n  `data:application/json;`.\n  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.\n @return The JSON formatted URI of `_slot`"
									},
									"functionSelector": "09c3dd87",
									"id": 1966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slotURI",
									"nameLocation": "1798:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "_slot",
												"nameLocation": "1814:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1806:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:15:8"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1844:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1844:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:15:8"
									},
									"scope": 1967,
									"src": "1789:70:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1968,
							"src": "852:1009:8",
							"usedErrors": [],
							"usedEvents": [
								1744,
								1753,
								1762,
								1842,
								1851,
								1860
							]
						}
					],
					"src": "33:1829:8"
				},
				"id": 8
			},
			"contracts/extensions/IERC721MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/extensions/IERC721MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC165": [
							567
						],
						"IERC721MetadataUpgradeable": [
							1994
						],
						"IERC721Upgradeable": [
							1943
						]
					},
					"id": 1995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "contracts/IERC721Upgradeable.sol",
							"file": "../IERC721Upgradeable.sol",
							"id": 1970,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 1944,
							"src": "58:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1972,
										"name": "IERC721Upgradeable",
										"nameLocations": [
											"336:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1943,
										"src": "336:18:9"
									},
									"id": 1973,
									"nodeType": "InheritanceSpecifier",
									"src": "336:18:9"
								}
							],
							"canonicalName": "IERC721MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1971,
								"nodeType": "StructuredDocumentation",
								"src": "95:200:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x5b5e139f."
							},
							"fullyImplemented": false,
							"id": 1994,
							"linearizedBaseContracts": [
								1994,
								1943,
								567
							],
							"name": "IERC721MetadataUpgradeable",
							"nameLocation": "306:26:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "361:87:9",
										"text": " @notice A descriptive name for a collection of NFTs in this contract"
									},
									"functionSelector": "06fdde03",
									"id": 1979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "462:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:9"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "492:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "492:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:15:9"
									},
									"scope": 1994,
									"src": "453:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "513:72:9",
										"text": " @notice An abbreviated name for NFTs in this contract"
									},
									"functionSelector": "95d89b41",
									"id": 1985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "599:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:9"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "631:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1982,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "631:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:15:9"
									},
									"scope": 1994,
									"src": "590:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "652:274:9",
										"text": " @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n  3986. The URI may point to a JSON file that conforms to the \"ERC721\n  Metadata JSON Schema\"."
									},
									"functionSelector": "c87b56dd",
									"id": 1993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "940:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "957:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "949:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:18:9"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "990:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "990:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:9"
									},
									"scope": 1994,
									"src": "931:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1995,
							"src": "296:711:9",
							"usedErrors": [],
							"usedEvents": [
								1842,
								1851,
								1860
							]
						}
					],
					"src": "33:975:9"
				},
				"id": 9
			},
			"contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/ERC3525MetadataDescriptorUpgradeable.sol",
					"exportedSymbols": {
						"Base64": [
							300
						],
						"ERC3525MetadataDescriptorUpgradeable": [
							2311
						],
						"IERC165": [
							567
						],
						"IERC3525MetadataDescriptorUpgradeable": [
							2333
						],
						"IERC3525MetadataUpgradeable": [
							1967
						],
						"IERC3525Upgradeable": [
							1827
						],
						"IERC721MetadataUpgradeable": [
							1994
						],
						"IERC721Upgradeable": [
							1943
						],
						"Initializable": [
							253
						],
						"Math": [
							1621
						],
						"SignedMath": [
							1726
						],
						"Strings": [
							555
						]
					},
					"id": 2312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1996,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1997,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2312,
							"sourceUnit": 556,
							"src": "58:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
							"file": "@openzeppelin/contracts/utils/Base64.sol",
							"id": 1998,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2312,
							"sourceUnit": 301,
							"src": "110:50:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol",
							"file": "./interface/IERC3525MetadataDescriptorUpgradeable.sol",
							"id": 1999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2312,
							"sourceUnit": 2334,
							"src": "161:63:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/extensions/IERC3525MetadataUpgradeable.sol",
							"file": "../extensions/IERC3525MetadataUpgradeable.sol",
							"id": 2000,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2312,
							"sourceUnit": 1968,
							"src": "225:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2312,
							"sourceUnit": 254,
							"src": "281:96:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2001,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 253,
										"src": "289:13:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2003,
										"name": "Initializable",
										"nameLocations": [
											"428:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "428:13:10"
									},
									"id": 2004,
									"nodeType": "InheritanceSpecifier",
									"src": "428:13:10"
								},
								{
									"baseName": {
										"id": 2005,
										"name": "IERC3525MetadataDescriptorUpgradeable",
										"nameLocations": [
											"443:37:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2333,
										"src": "443:37:10"
									},
									"id": 2006,
									"nodeType": "InheritanceSpecifier",
									"src": "443:37:10"
								}
							],
							"canonicalName": "ERC3525MetadataDescriptorUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2311,
							"linearizedBaseContracts": [
								2311,
								2333,
								253
							],
							"name": "ERC3525MetadataDescriptorUpgradeable",
							"nameLocation": "388:36:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2009,
									"libraryName": {
										"id": 2007,
										"name": "Strings",
										"nameLocations": [
											"494:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 555,
										"src": "494:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "488:26:10",
									"typeName": {
										"id": 2008,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "506:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "590:7:10",
										"statements": []
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2011,
												"name": "onlyInitializing",
												"nameLocations": [
													"573:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "573:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "573:16:10"
										}
									],
									"name": "__ERC3525MetadataDescriptor_init",
									"nameLocation": "529:32:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:2:10"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:10"
									},
									"scope": 2311,
									"src": "520:77:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "683:7:10",
										"statements": []
									},
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2018,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2017,
												"name": "onlyInitializing",
												"nameLocations": [
													"666:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "666:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "666:16:10"
										}
									],
									"name": "__ERC3525MetadataDescriptor_init_unchained",
									"nameLocation": "612:42:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:10"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:0:10"
									},
									"scope": 2311,
									"src": "603:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2318
									],
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "774:892:10",
										"statements": [
											{
												"assignments": [
													2029
												],
												"declarations": [
													{
														"constant": false,
														"id": 2029,
														"mutability": "mutable",
														"name": "erc3525",
														"nameLocation": "812:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2069,
														"src": "784:35:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
															"typeString": "contract IERC3525MetadataUpgradeable"
														},
														"typeName": {
															"id": 2028,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2027,
																"name": "IERC3525MetadataUpgradeable",
																"nameLocations": [
																	"784:27:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1967,
																"src": "784:27:10"
															},
															"referencedDeclaration": 1967,
															"src": "784:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
																"typeString": "contract IERC3525MetadataUpgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2034,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2031,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "850:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "854:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "850:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2030,
														"name": "IERC3525MetadataUpgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "822:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC3525MetadataUpgradeable_$1967_$",
															"typeString": "type(contract IERC3525MetadataUpgradeable)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
														"typeString": "contract IERC3525MetadataUpgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "784:77:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "995:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "7b226e616d65223a22",
																					"id": 2044,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1133:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					"value": "{\"name\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 2045,
																							"name": "erc3525",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2029,
																							"src": "1175:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
																								"typeString": "contract IERC3525MetadataUpgradeable"
																							}
																						},
																						"id": 2046,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1183:4:10",
																						"memberName": "name",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1979,
																						"src": "1175:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view external returns (string memory)"
																						}
																					},
																					"id": 2047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1175:14:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c226465736372697074696f6e223a22",
																					"id": 2048,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1219:19:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					"value": "\",\"description\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2049,
																						"name": "_contractDescription",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2180,
																						"src": "1268:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 2050,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1268:22:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22696d616765223a22",
																					"id": 2051,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1320:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					"value": "\",\"image\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2052,
																						"name": "_contractImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2188,
																						"src": "1363:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () view returns (bytes memory)"
																						}
																					},
																					"id": 2053,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1363:16:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"hexValue": "222c2276616c7565446563696d616c73223a22",
																					"id": 2054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1409:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64",
																						"typeString": "literal_string \"\",\"valueDecimals\":\"\""
																					},
																					"value": "\",\"valueDecimals\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"expression": {
																											"id": 2057,
																											"name": "erc3525",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2029,
																											"src": "1469:7:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
																												"typeString": "contract IERC3525MetadataUpgradeable"
																											}
																										},
																										"id": 2058,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "1477:13:10",
																										"memberName": "valueDecimals",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1768,
																										"src": "1469:21:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																											"typeString": "function () view external returns (uint8)"
																										}
																									},
																									"id": 2059,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "1469:23:10",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								],
																								"id": 2056,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "1461:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 2055,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "1461:7:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2060,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1461:32:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2061,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1494:8:10",
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 368,
																						"src": "1461:41:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 2062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1461:43:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "227d",
																					"id": 2063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1534:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																						"typeString": "literal_string \"\"}\""
																					},
																					"value": "\"}"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64",
																						"typeString": "literal_string \"\",\"valueDecimals\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																						"typeString": "literal_string \"\"}\""
																					}
																				],
																				"expression": {
																					"id": 2042,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1087:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1091:12:10",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "1087:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1087:477:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 2040,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "1048:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$300_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1055:6:10",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 299,
																		"src": "1048:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1048:538:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2037,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "915:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "919:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "915:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "915:730:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "891:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2035,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "891:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "891:768:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2026,
												"id": 2068,
												"nodeType": "Return",
												"src": "871:788:10"
											}
										]
									},
									"functionSelector": "725fa09c",
									"id": 2070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "constructContractURI",
									"nameLocation": "704:20:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2023,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "741:8:10"
									},
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:10"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "759:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2024,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "759:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:15:10"
									},
									"scope": 2311,
									"src": "695:971:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2325
									],
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "1760:781:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1893:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "7b226e616d65223a22",
																					"id": 2087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2031:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					"value": "{\"name\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 2089,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2072,
																							"src": "2083:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2088,
																						"name": "_slotName",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2203,
																						"src": "2073:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 2090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2073:16:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c226465736372697074696f6e223a22",
																					"id": 2091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2119:19:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					"value": "\",\"description\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 2093,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2072,
																							"src": "2185:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2092,
																						"name": "_slotDescription",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2218,
																						"src": "2168:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 2094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2168:23:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22696d616765223a22",
																					"id": 2095,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2221:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					"value": "\",\"image\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 2097,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2072,
																							"src": "2275:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2096,
																						"name": "_slotImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2230,
																						"src": "2264:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function (uint256) view returns (bytes memory)"
																						}
																					},
																					"id": 2098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2264:17:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"hexValue": "222c2270726f70657274696573223a",
																					"id": 2099,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2311:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					"value": "\",\"properties\":"
																				},
																				{
																					"arguments": [
																						{
																							"id": 2101,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2072,
																							"src": "2374:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2100,
																						"name": "_slotProperties",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2242,
																						"src": "2358:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 2102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2358:22:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "7d",
																					"id": 2103,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2410:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					},
																					"value": "}"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					}
																				],
																				"expression": {
																					"id": 2085,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1985:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1989:12:10",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "1985:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1985:454:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 2083,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "1946:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$300_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1953:6:10",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 299,
																		"src": "1946:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1946:515:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1813:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1817:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1813:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1813:707:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1789:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2078,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1789:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:745:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2077,
												"id": 2108,
												"nodeType": "Return",
												"src": "1770:764:10"
											}
										]
									},
									"functionSelector": "6c037f8a",
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "constructSlotURI",
									"nameLocation": "1681:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2074,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1727:8:10"
									},
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "1706:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "1698:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1697:15:10"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "1745:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:15:10"
									},
									"scope": 2311,
									"src": "1672:869:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2332
									],
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "2639:1120:10",
										"statements": [
											{
												"assignments": [
													2120
												],
												"declarations": [
													{
														"constant": false,
														"id": 2120,
														"mutability": "mutable",
														"name": "erc3525",
														"nameLocation": "2677:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2171,
														"src": "2649:35:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
															"typeString": "contract IERC3525MetadataUpgradeable"
														},
														"typeName": {
															"id": 2119,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2118,
																"name": "IERC3525MetadataUpgradeable",
																"nameLocations": [
																	"2649:27:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1967,
																"src": "2649:27:10"
															},
															"referencedDeclaration": 1967,
															"src": "2649:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
																"typeString": "contract IERC3525MetadataUpgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2125,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2715:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2719:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2715:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2121,
														"name": "IERC3525MetadataUpgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "2687:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC3525MetadataUpgradeable_$1967_$",
															"typeString": "type(contract IERC3525MetadataUpgradeable)"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
														"typeString": "contract IERC3525MetadataUpgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2649:77:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2818:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "7b226e616d65223a22",
																					"id": 2135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3006:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					"value": "{\"name\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 2137,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2112,
																							"src": "3058:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2136,
																						"name": "_tokenName",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2266,
																						"src": "3047:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 2138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3047:20:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c226465736372697074696f6e223a22",
																					"id": 2139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3097:19:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					"value": "\",\"description\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 2141,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2112,
																							"src": "3164:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2140,
																						"name": "_tokenDescription",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2281,
																						"src": "3146:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 2142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3146:27:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22696d616765223a22",
																					"id": 2143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3203:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					"value": "\",\"image\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 2145,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2112,
																							"src": "3258:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2144,
																						"name": "_tokenImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2293,
																						"src": "3246:11:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function (uint256) view returns (bytes memory)"
																						}
																					},
																					"id": 2146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3246:21:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"hexValue": "222c2262616c616e6365223a22",
																					"id": 2147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3297:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d",
																						"typeString": "literal_string \"\",\"balance\":\"\""
																					},
																					"value": "\",\"balance\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"id": 2150,
																									"name": "tokenId_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2112,
																									"src": "3360:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 2148,
																									"name": "erc3525",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2120,
																									"src": "3342:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
																										"typeString": "contract IERC3525MetadataUpgradeable"
																									}
																								},
																								"id": 2149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3350:9:10",
																								"memberName": "balanceOf",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1776,
																								"src": "3342:17:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) view external returns (uint256)"
																								}
																							},
																							"id": 2151,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3342:27:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2152,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3370:8:10",
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 368,
																						"src": "3342:36:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 2153,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3342:38:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22736c6f74223a22",
																					"id": 2154,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3410:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140",
																						"typeString": "literal_string \"\",\"slot\":\"\""
																					},
																					"value": "\",\"slot\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"id": 2157,
																									"name": "tokenId_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2112,
																									"src": "3467:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 2155,
																									"name": "erc3525",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2120,
																									"src": "3452:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
																										"typeString": "contract IERC3525MetadataUpgradeable"
																									}
																								},
																								"id": 2156,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3460:6:10",
																								"memberName": "slotOf",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1784,
																								"src": "3452:14:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) view external returns (uint256)"
																								}
																							},
																							"id": 2158,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3452:24:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3477:8:10",
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 368,
																						"src": "3452:33:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 2160,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3452:35:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c2270726f70657274696573223a",
																					"id": 2161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3517:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					"value": "\",\"properties\":"
																				},
																				{
																					"arguments": [
																						{
																							"id": 2163,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2112,
																							"src": "3581:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2162,
																						"name": "_tokenProperties",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2305,
																						"src": "3564:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 2164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3564:26:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "7d",
																					"id": 2165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3620:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					},
																					"value": "}"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d",
																						"typeString": "literal_string \"\",\"balance\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140",
																						"typeString": "literal_string \"\",\"slot\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					}
																				],
																				"expression": {
																					"id": 2133,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2910:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2914:12:10",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2910:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2910:788:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 2131,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "2871:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$300_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2878:6:10",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 299,
																		"src": "2871:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2871:849:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2128,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2780:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2784:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2780:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2780:958:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2756:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2126,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2756:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2756:996:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2170,
												"nodeType": "Return",
												"src": "2736:1016:10"
											}
										]
									},
									"functionSelector": "894b4c2e",
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "constructTokenURI",
									"nameLocation": "2556:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2114,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2606:8:10"
									},
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "2582:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "2574:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2573:18:10"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "2624:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2624:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:15:10"
									},
									"scope": 2311,
									"src": "2547:1212:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "3843:44:10",
										"statements": [
											{
												"expression": {
													"hexValue": "53656d6946756e6769626c6520746f6b656e",
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3860:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c814eed526670625d910e296b8d01b903788a181dbca614281c4e1fdce1980e2",
														"typeString": "literal_string \"SemiFungible token\""
													},
													"value": "SemiFungible token"
												},
												"functionReturnParameters": 2176,
												"id": 2178,
												"nodeType": "Return",
												"src": "3853:27:10"
											}
										]
									},
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractDescription",
									"nameLocation": "3774:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3794:2:10"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "3828:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3828:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:15:10"
									},
									"scope": 2311,
									"src": "3765:122:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "3964:26:10",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3981:2:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2184,
												"id": 2186,
												"nodeType": "Return",
												"src": "3974:9:10"
											}
										]
									},
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractImage",
									"nameLocation": "3902:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:10"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "3950:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:10"
									},
									"scope": 2311,
									"src": "3893:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "4076:52:10",
										"statements": [
											{
												"expression": {
													"id": 2195,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2190,
													"src": "4086:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "4086:5:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "313233",
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4115:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107",
																"typeString": "literal_string \"123\""
															},
															"value": "123"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_64e604787cbf194841e7b68d7cd28786f6c9a0a3ab9f8b0a0e87cb4387ab0107",
																"typeString": "literal_string \"123\""
															}
														],
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4108:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2197,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4108:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2194,
												"id": 2201,
												"nodeType": "Return",
												"src": "4101:20:10"
											}
										]
									},
									"id": 2203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotName",
									"nameLocation": "4005:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "4023:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "4015:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:15:10"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "4061:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4061:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4060:15:10"
									},
									"scope": 2311,
									"src": "3996:132:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "4221:53:10",
										"statements": [
											{
												"expression": {
													"id": 2210,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2205,
													"src": "4231:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2211,
												"nodeType": "ExpressionStatement",
												"src": "4231:5:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "736c6f74",
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4260:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8db286b53365f5ab351e48395351b18b2a0f10195109ca91fe49d850a855cfe7",
																"typeString": "literal_string \"slot\""
															},
															"value": "slot"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8db286b53365f5ab351e48395351b18b2a0f10195109ca91fe49d850a855cfe7",
																"typeString": "literal_string \"slot\""
															}
														],
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4253:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2212,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4253:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4253:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2216,
												"nodeType": "Return",
												"src": "4246:21:10"
											}
										]
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotDescription",
									"nameLocation": "4143:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "4168:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "4160:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:15:10"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "4206:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4206:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4205:15:10"
									},
									"scope": 2311,
									"src": "4134:140:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "4360:41:10",
										"statements": [
											{
												"expression": {
													"id": 2225,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2220,
													"src": "4370:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "4370:5:10"
											},
											{
												"expression": {
													"hexValue": "",
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4392:2:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2224,
												"id": 2228,
												"nodeType": "Return",
												"src": "4385:9:10"
											}
										]
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotImage",
									"nameLocation": "4289:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "4308:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4300:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4299:15:10"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4346:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4346:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4345:14:10"
									},
									"scope": 2311,
									"src": "4280:121:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "4493:43:10",
										"statements": [
											{
												"expression": {
													"id": 2237,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2232,
													"src": "4503:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "4503:5:10"
											},
											{
												"expression": {
													"hexValue": "5b5d",
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4525:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_518674ab2b227e5f11e9084f615d57663cde47bce1ba168b4c19c7ee22a73d70",
														"typeString": "literal_string \"[]\""
													},
													"value": "[]"
												},
												"functionReturnParameters": 2236,
												"id": 2240,
												"nodeType": "Return",
												"src": "4518:11:10"
											}
										]
									},
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotProperties",
									"nameLocation": "4416:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "4440:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "4432:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4431:15:10"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "4478:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4478:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:15:10"
									},
									"scope": 2311,
									"src": "4407:129:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "4626:257:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2254,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4783:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4787:6:10",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4783:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2253,
																				"name": "IERC3525MetadataUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1967,
																				"src": "4755:27:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC3525MetadataUpgradeable_$1967_$",
																					"typeString": "type(contract IERC3525MetadataUpgradeable)"
																				}
																			},
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4755:39:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC3525MetadataUpgradeable_$1967",
																				"typeString": "contract IERC3525MetadataUpgradeable"
																			}
																		},
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4795:4:10",
																		"memberName": "name",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1979,
																		"src": "4755:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
																			"typeString": "function () view external returns (string memory)"
																		}
																	},
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4755:46:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2259,
																			"name": "tokenId_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2244,
																			"src": "4825:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4834:8:10",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 368,
																		"src": "4825:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4825:19:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2251,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4717:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4721:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4717:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4717:145:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4693:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2249,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4693:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:183:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2248,
												"id": 2264,
												"nodeType": "Return",
												"src": "4673:203:10"
											}
										]
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenName",
									"nameLocation": "4551:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "4570:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "4562:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:18:10"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "4611:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4611:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4610:15:10"
									},
									"scope": 2311,
									"src": "4542:341:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "4980:59:10",
										"statements": [
											{
												"expression": {
													"id": 2273,
													"name": "tokenId_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2268,
													"src": "4990:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "4990:8:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "746f6b656e3131",
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5022:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61dce4da91a22469600f955f1d01f776285ff3b8d1358595069befaf85b9f918",
																"typeString": "literal_string \"token11\""
															},
															"value": "token11"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_61dce4da91a22469600f955f1d01f776285ff3b8d1358595069befaf85b9f918",
																"typeString": "literal_string \"token11\""
															}
														],
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5015:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2275,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "5015:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5015:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2272,
												"id": 2279,
												"nodeType": "Return",
												"src": "5008:24:10"
											}
										]
									},
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenDescription",
									"nameLocation": "4898:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "4924:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "4916:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4916:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4915:18:10"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "4965:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4965:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4964:15:10"
									},
									"scope": 2311,
									"src": "4889:150:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "5130:44:10",
										"statements": [
											{
												"expression": {
													"id": 2288,
													"name": "tokenId_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2283,
													"src": "5140:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "5140:8:10"
											},
											{
												"expression": {
													"hexValue": "",
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5165:2:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2287,
												"id": 2291,
												"nodeType": "Return",
												"src": "5158:9:10"
											}
										]
									},
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenImage",
									"nameLocation": "5055:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "5075:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "5067:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5066:18:10"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "5116:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5116:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:14:10"
									},
									"scope": 2311,
									"src": "5046:128:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "5270:46:10",
										"statements": [
											{
												"expression": {
													"id": 2300,
													"name": "tokenId_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2295,
													"src": "5280:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "5280:8:10"
											},
											{
												"expression": {
													"hexValue": "7b7d",
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5305:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b48d38f93eaa084033fc5970bf96e559c33c4cdc07d889ab00b4d63f9590739d",
														"typeString": "literal_string \"{}\""
													},
													"value": "{}"
												},
												"functionReturnParameters": 2299,
												"id": 2303,
												"nodeType": "Return",
												"src": "5298:11:10"
											}
										]
									},
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenProperties",
									"nameLocation": "5189:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "5214:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "5206:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5205:18:10"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "5255:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5255:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5254:15:10"
									},
									"scope": 2311,
									"src": "5180:136:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "5322:254:10",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 2310,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "5601:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2311,
									"src": "5581:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2307,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5581:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2309,
										"length": {
											"hexValue": "3530",
											"id": 2308,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5589:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "5581:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2312,
							"src": "379:5230:10",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:5576:10"
				},
				"id": 10
			},
			"contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/interface/IERC3525MetadataDescriptorUpgradeable.sol",
					"exportedSymbols": {
						"IERC3525MetadataDescriptorUpgradeable": [
							2333
						]
					},
					"id": 2334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3525MetadataDescriptorUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2333,
							"linearizedBaseContracts": [
								2333
							],
							"name": "IERC3525MetadataDescriptorUpgradeable",
							"nameLocation": "68:37:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "725fa09c",
									"id": 2318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "constructContractURI",
									"nameLocation": "122:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:2:11"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "168:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "168:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:15:11"
									},
									"scope": 2333,
									"src": "113:70:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c037f8a",
									"id": 2325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "constructSlotURI",
									"nameLocation": "198:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "223:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "215:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:11"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "252:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:15:11"
									},
									"scope": 2333,
									"src": "189:78:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "894b4c2e",
									"id": 2332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "constructTokenURI",
									"nameLocation": "286:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "312:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "304:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:17:11"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "344:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "344:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:15:11"
									},
									"scope": 2333,
									"src": "277:82:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2334,
							"src": "58:304:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:329:11"
				},
				"id": 11
			}
		}
	}
}