{
	"id": "ad8ca9a2b5c447c34f03797f80765840",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/periphery/ERC3525MetadataDescriptor.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"./interface/IERC3525MetadataDescriptor.sol\";\nimport \"../extensions/IERC3525Metadata.sol\";\n\ncontract ERC3525MetadataDescriptor is IERC3525MetadataDescriptor {\n\n    using Strings for uint256;\n\n    function constructContractURI() external view override returns (string memory) {\n        IERC3525Metadata erc3525 = IERC3525Metadata(msg.sender);\n        return \n            string(\n                abi.encodePacked(\n                \n                    'data:application/json;base64,',\n                    Base64.encode(\n                        abi.encodePacked(\n                            '{\"name\":\"', \n                            erc3525.name(),\n                            '\",\"description\":\"',\n                            _contractDescription(),\n                            '\",\"image\":\"',\n                            _contractImage(),\n                            '\",\"valueDecimals\":\"', \n                            uint256(erc3525.valueDecimals()).toString(),\n                            '\"}'\n                        )\n                    )\n        \n                )\n            );\n    }\n\n    function constructSlotURI(uint256 slot_) external view override returns (string memory) {\n        return\n            string(\n                abi.encodePacked(\n        \n                    'data:application/json;base64,',\n                    Base64.encode(\n                        abi.encodePacked(\n                            '{\"name\":\"', \n                            _slotName(slot_),\n                            '\",\"description\":\"',\n                            _slotDescription(slot_),\n                            '\",\"image\":\"',\n                            _slotImage(slot_),\n                            '\",\"properties\":',\n                            _slotProperties(slot_),\n                            '}'\n                        )\n                    )\n                \n                )\n            );\n    }\n\n    function constructTokenURI(uint256 tokenId_) public view override returns (string memory) {\n        IERC3525Metadata erc3525 = IERC3525Metadata(msg.sender);\n        return \n            string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(\n                        abi.encodePacked(\n                         '{\"name\":\"',\n                            _tokenName(tokenId_),\n                            '\",\"description\":\"',\n                            _tokenDescription(tokenId_),\n                            '\",\"image\":\"',\n                            _tokenImage(tokenId_),\n                            '\",\"balance\":\"',\n                            erc3525.balanceOf(tokenId_).toString(),\n                            '\",\"slot\":\"',\n                            erc3525.slotOf(tokenId_).toString(),\n                            '\",\"properties\":',\n                            _tokenProperties(tokenId_),\n                            \"}\"\n                \n                        )\n                    )\n                )\n            );\n    }\n\n    function _contractDescription() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    function _contractImage() internal view virtual returns (bytes memory) {\n        return \"\";\n    }\n\n    function _slotName(uint256 slot_) internal view virtual returns (string memory) {\n        slot_;\n        return \"\";\n    }\n\n    function _slotDescription(uint256 slot_) internal view virtual returns (string memory) {\n        slot_;\n        return \"\";\n    }\n\n    function _slotImage(uint256 slot_) internal  virtual view  returns (bytes memory) {\n        slot_;\n\n        return bytes(IERC3525Metadata(msg.sender).slotURI(slot_));\n    }\n\n    function _slotProperties(uint256 slot_) internal view virtual returns (string memory) {\n        slot_;\n        return \"[]\";\n    }\n\n    function _tokenName(uint256 tokenId_) internal view virtual returns (string memory) {\n       \n        return \n            string(\n                abi.encodePacked(\n                    IERC3525Metadata(msg.sender).name(), \n                    \" #\", tokenId_.toString()\n                )\n            );\n    }\n\n    function _tokenDescription(uint256 tokenId_) internal view virtual returns (string memory) {\n        tokenId_;\n        return \"\";\n    }\n// Inside ERC3525MetadataDescriptor contract\n\nfunction _tokenImage(uint256 tokenId_) internal view virtual returns (string memory) {\n    // Get the image content for the token of the slot from the ERC3525 contract\n //   string memory imageContent = IERC3525Metadata(msg.sender).getSlotImage(IERC3525Metadata(msg.sender).slotOf(tokenId_));\n    return \"\";\n}\n\n    function _tokenProperties(uint256 tokenId_) internal view virtual returns (string memory) {\n        tokenId_;\n        return \"{}\";\n    }\n}"
			},
			"contracts/extensions/IERC3525Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"../IERC3525.sol\";\nimport \"./IERC721Metadata.sol\";\n\n/**\n * @title ERC-3525 Semi-Fungible Token Standard, optional extension for metadata\n * @dev Interfaces for any contract that wants to support query of the Uniform Resource Identifier\n *  (URI) for the ERC3525 contract as well as a specified slot.\n *  Because of the higher reliability of data stored in smart contracts compared to data stored in\n *  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and\n *  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing\n *  to any resource stored in a centralized system.\n *  See https://eips.ethereum.org/EIPS/eip-3525\n * Note: the ERC-165 identifier for this interface is 0xe1600902.\n */\ninterface IERC3525Metadata is IERC3525, IERC721Metadata {\n    /**\n     * @notice Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract.\n     * @dev This function SHOULD return the URI for this contract in JSON format, starting with\n     *  header `data:application/json;`.\n     *  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.\n     * @return The JSON formatted URI of the current ERC3525 contract\n     */\n    function contractURI() external view returns (string memory);\n\n    /**\n     * @notice Returns the Uniform Resource Identifier (URI) for the specified slot.\n     * @dev This function SHOULD return the URI for `_slot` in JSON format, starting with header\n     *  `data:application/json;`.\n     *  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.\n     * @return The JSON formatted URI of `_slot`\n     */\n    function slotURI(uint256 _slot) external view returns (string memory);\n\n \n}\n"
			},
			"contracts/periphery/interface/IERC3525MetadataDescriptor.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IERC3525MetadataDescriptor {\n\n    function constructContractURI() external view returns (string memory);\n\n    function constructSlotURI(uint256 slot) external view returns (string memory);\n    \n    function constructTokenURI(uint256 tokenId) external view returns (string memory);\n\n}"
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 32)\n\n            // Run over the input, 3 bytes at a time\n            for {\n                let dataPtr := data\n                let endPtr := add(data, mload(data))\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 bytes (18 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F which is the number of\n                // the previous character in the ASCII table prior to the Base64 Table\n                // The result is then added to the table to get the character to write,\n                // and finally write it in the result pointer but with a left shift\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"contracts/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n *  Note: the ERC-165 identifier for this interface is 0x5b5e139f.\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @notice A descriptive name for a collection of NFTs in this contract\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @notice An abbreviated name for NFTs in this contract\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n     * @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n     *  3986. The URI may point to a JSON file that conforms to the \"ERC721\n     *  Metadata JSON Schema\".\n     */\n    function tokenURI(uint256 _tokenId) external  returns (string memory);\n}\n"
			},
			"contracts/IERC3525.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-3525 Semi-Fungible Token Standard\n * @dev See https://eips.ethereum.org/EIPS/eip-3525\n * Note: the ERC-165 identifier for this interface is 0xd5358140.\n */\ninterface IERC3525 is IERC165, IERC721 {\n    /**\n     * @dev MUST emit when value of a token is transferred to another token with the same slot,\n     *  including zero value transfers (_value == 0) as well as transfers when tokens are created\n     *  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\n     * @param _fromTokenId The token id to transfer value from\n     * @param _toTokenId The token id to transfer value to\n     * @param _value The transferred value\n     */\n    event TransferValue(uint256 indexed _fromTokenId, uint256 indexed _toTokenId, uint256 _value);\n\n    /**\n     * @dev MUST emits when the approval value of a token is set or changed.\n     * @param _tokenId The token to approve\n     * @param _operator The operator to approve for\n     * @param _value The maximum value that `_operator` is allowed to manage\n     */\n    event ApprovalValue(uint256 indexed _tokenId, address indexed _operator, uint256 _value);\n\n    /**\n     * @dev MUST emit when the slot of a token is set or changed.\n     * @param _tokenId The token of which slot is set or changed\n     * @param _oldSlot The previous slot of the token\n     * @param _newSlot The updated slot of the token\n     */ \n    event SlotChanged(uint256 indexed _tokenId, uint256 indexed _oldSlot, uint256 indexed _newSlot);\n\n    /**\n     * @notice Get the number of decimals the token uses for value - e.g. 6, means the user\n     *  representation of the value of a token can be calculated by dividing it by 1,000,000.\n     *  Considering the compatibility with third-party wallets, this function is defined as\n     *  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\n     * @return The number of decimals for value\n     */\n    function valueDecimals() external view returns (uint8);\n\n    /**\n     * @notice Get the value of a token.\n     * @param _tokenId The token for which to query the balance\n     * @return The value of `_tokenId`\n     */\n    function balanceOf(uint256 _tokenId) external view returns (uint256);\n\n    /**\n     * @notice Get the slot of a token.\n     * @param _tokenId The identifier for a token\n     * @return The slot of the token\n     */\n    function slotOf(uint256 _tokenId) external view returns (uint256);\n\n    /**\n     * @notice Allow an operator to manage the value of a token, up to the `_value` amount.\n     * @dev MUST revert unless caller is the current owner, an authorized operator, or the approved\n     *  address for `_tokenId`.\n     *  MUST emit ApprovalValue event.\n     * @param _tokenId The token to approve\n     * @param _operator The operator to be approved\n     * @param _value The maximum value of `_toTokenId` that `_operator` is allowed to manage\n     */\n    function approve(\n        uint256 _tokenId,\n        address _operator,\n        uint256 _value\n    ) external payable;\n\n    /**\n     * @notice Get the maximum value of a token that an operator is allowed to manage.\n     * @param _tokenId The token for which to query the allowance\n     * @param _operator The address of an operator\n     * @return The current approval value of `_tokenId` that `_operator` is allowed to manage\n     */\n    function allowance(uint256 _tokenId, address _operator) external view returns (uint256);\n\n    /**\n     * @notice Transfer value from a specified token to another specified token with the same slot.\n     * @dev Caller MUST be the current owner, an authorized operator or an operator who has been\n     *  approved the whole `_fromTokenId` or part of it.\n     *  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.\n     *  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.\n     *  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n     *  operator.\n     *  MUST emit `TransferValue` event.\n     * @param _fromTokenId The token to transfer value from\n     * @param _toTokenId The token to transfer value to\n     * @param _value The transferred value\n     */\n    function transferFrom(\n        uint256 _fromTokenId,\n        uint256 _toTokenId,\n        uint256 _value\n    ) external payable;\n\n    /**\n     * @notice Transfer value from a specified token to an address. The caller should confirm that\n     *  `_to` is capable of receiving ERC3525 tokens.\n     * @dev This function MUST create a new ERC3525 token with the same slot for `_to` to receive\n     *  the transferred value.\n     *  MUST revert if `_fromTokenId` is zero token id or does not exist.\n     *  MUST revert if `_to` is zero address.\n     *  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n     *  operator.\n     *  MUST emit `Transfer` and `TransferValue` events.\n     * @param _fromTokenId The token to transfer value from\n     * @param _to The address to transfer value to\n     * @param _value The transferred value\n     * @return ID of the new token created for `_to` which receives the transferred value\n     */\n    function transferFrom(\n        uint256 _fromTokenId,\n        address _to,\n        uint256 _value\n    ) external payable returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"contracts/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/** \n * @title ERC-721 Non-Fungible Token Standard\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n *  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\n */\ninterface IERC721 is IERC165 {\n    /** \n     * @dev This emits when ownership of any NFT changes by any mechanism.\n     *  This event emits when NFTs are created (`from` == 0) and destroyed\n     *  (`to` == 0). Exception: during contract creation, any number of NFTs\n     *  may be created and assigned without emitting Transfer. At the time of\n     *  any transfer, the approved address for that NFT (if any) is reset to none.\n     */\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n\n    /**\n     * @dev This emits when the approved address for an NFT is changed or\n     *  reaffirmed. The zero address indicates there is no approved address.\n     *  When a Transfer event emits, this also indicates that the approved\n     *  address for that NFT (if any) is reset to none.\n     */\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n\n    /**\n     * @dev This emits when an operator is enabled or disabled for an owner.\n     *  The operator can manage all NFTs of the owner.\n     */\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    /**\n     * @notice Count all NFTs assigned to an owner\n     * @dev NFTs assigned to the zero address are considered invalid, and this\n     *  function throws for queries about the zero address.\n     * @param _owner An address for whom to query the balance\n     * @return The number of NFTs owned by `_owner`, possibly zero\n     */\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /**\n     * @notice Find the owner of an NFT\n     * @dev NFTs assigned to zero address are considered invalid, and queries\n     *  about them do throw.\n     * @param _tokenId The identifier for an NFT\n     * @return The address of the owner of the NFT\n     */\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT. When transfer is complete, this function\n     *  checks if `_to` is a smart contract (code size > 0). If so, it calls\n     *  `onERC721Received` on `_to` and throws if the return value is not\n     *  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     * @param data Additional data with no specified format, sent in call to `_to`\n     */\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata data) external payable;\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev This works identically to the other function with an extra data parameter,\n     *  except this function just sets data to \"\".\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     */\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n     *  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n     *  THEY MAY BE PERMANENTLY LOST\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT.\n     * @param _from The current owner of the NFT\n     * @param _to The new owner\n     * @param _tokenId The NFT to transfer\n     */\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Change or reaffirm the approved address for an NFT\n     * @dev The zero address indicates there is no approved address.\n     *  Throws unless `msg.sender` is the current NFT owner, or an authorized\n     *  operator of the current owner.\n     * @param _approved The new approved NFT controller\n     * @param _tokenId The NFT to approve\n     */\n    function approve(address _approved, uint256 _tokenId) external payable;\n\n    /**\n     * @notice Enable or disable approval for a third party (\"operator\") to manage\n     *  all of `msg.sender`'s assets\n     * @dev Emits the ApprovalForAll event. The contract MUST allow\n     *  multiple operators per owner.\n     * @param _operator Address to add to the set of authorized operators\n     * @param _approved True if the operator is approved, false to revoke approval\n     */\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    /**\n     * @notice Get the approved address for a single NFT\n     * @dev Throws if `_tokenId` is not a valid NFT.\n     * @param _tokenId The NFT to find the approved address for\n     * @return The approved address for this NFT, or the zero address if there is none\n     */\n    function getApproved(uint256 _tokenId) external view returns (address);\n\n    /**\n     * @notice Query if an address is an authorized operator for another address\n     * @param _owner The address that owns the NFTs\n     * @param _operator The address that acts on behalf of the owner\n     * @return True if `_operator` is an approved operator for `_owner`, false otherwise\n     */\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Base64.sol": {
				"Base64": {
					"abi": [],
					"devdoc": {
						"details": "Provides a set of functions to operate with Base64 strings.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_TABLE": {
								"details": "Base64 Encoding/Decoding Table"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3504  library Base64 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3504  library Base64 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d7b22f22f90a5ff9f91b5a30cd4cf670bb2c651371d05277c891492d7012465664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d7b22f22f90a5ff9f91b5a30cd4cf670bb2c651371d05277c891492d7012465664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xB2 0x2F 0x22 0xF9 EXP PUSH0 0xF9 0xF9 SHL GAS ADDRESS 0xCD 0x4C 0xF6 PUSH17 0xBB2C651371D05277C891492D7012465664 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "202:3302:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:3302:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d7b22f22f90a5ff9f91b5a30cd4cf670bb2c651371d05277c891492d7012465664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xB2 0x2F 0x22 0xF9 EXP PUSH0 0xF9 0xF9 SHL GAS ADDRESS 0xCD 0x4C 0xF6 PUSH17 0xBB2C651371D05277C891492D7012465664 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "202:3302:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"encode(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 3504,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d7b22f22f90a5ff9f91b5a30cd4cf670bb2c651371d05277c891492d7012465664736f6c63430008180033",
									".code": [
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 3504,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525.sol",
								"contracts/IERC721.sol",
								"contracts/extensions/IERC3525Metadata.sol",
								"contracts/extensions/IERC721Metadata.sol",
								"contracts/periphery/ERC3525MetadataDescriptor.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x6f7014d688c4386c26e8c02371ecb7f7740d2542f1ecadffd5a3084511e2a344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d8f5aabdb088f19c80ce460a2e670ecc651ff4ca46878d239e29bfe705e52c\",\"dweb:/ipfs/QmUveDGa7vEtYBxbVUajNcDvyjP6oaD7Va1M5qwZbudmAn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 SWAP14 PUSH31 0x68BFFBC4888354CFF095E9700CA0E729A422F1E73D4BD1EDDA5BE5EB4F6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "251:2847:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 SWAP14 PUSH31 0x68BFFBC4888354CFF095E9700CA0E729A422F1E73D4BD1EDDA5BE5EB4F6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "251:2847:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220259d7e68bffbc4888354cff095e9700ca0e729a422f1e73d4bd1edda5be5eb4f64736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525.sol",
								"contracts/IERC721.sol",
								"contracts/extensions/IERC3525Metadata.sol",
								"contracts/extensions/IERC721Metadata.sol",
								"contracts/periphery/ERC3525MetadataDescriptor.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE TLOAD PUSH0 DUP15 PUSH25 0x2ACF3A91D0C2E50DD08225FC7D98EFE12CE9B6EFC9DA9C3B81 CODESIZE SDIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE TLOAD PUSH0 DUP15 PUSH25 0x2ACF3A91D0C2E50DD08225FC7D98EFE12CE9B6EFC9DA9C3B81 CODESIZE SDIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e5c5f8e782acf3a91d0c2e50dd08225fc7d98efe12ce9b6efc9da9c3b81380564736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525.sol",
								"contracts/IERC721.sol",
								"contracts/extensions/IERC3525Metadata.sol",
								"contracts/extensions/IERC721Metadata.sol",
								"contracts/periphery/ERC3525MetadataDescriptor.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFB3E 0xD9 0xD6 SWAP7 0xDE CHAINID PUSH1 0xCA JUMPDEST 0x1E 0xD4 MSIZE 0xBD 0xCF NOT DUP12 MLOAD 0xAA SDIV SSTORE 0xD8 SELFBALANCE BALANCE 0xE0 0xD1 0xD9 EXTCODECOPY 0x27 GASLIMIT SSTORE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:1047:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFB3E 0xD9 0xD6 SWAP7 0xDE CHAINID PUSH1 0xCA JUMPDEST 0x1E 0xD4 MSIZE 0xBD 0xCF NOT DUP12 MLOAD 0xAA SDIV SSTORE 0xD8 SELFBALANCE BALANCE 0xE0 0xD1 0xD9 EXTCODECOPY 0x27 GASLIMIT SSTORE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:1047:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061fb3ed9d696de4660ca5b1ed459bdcf198b51aa0555d84731e0d1d93c27455564736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525.sol",
								"contracts/IERC721.sol",
								"contracts/extensions/IERC3525Metadata.sol",
								"contracts/extensions/IERC721Metadata.sol",
								"contracts/periphery/ERC3525MetadataDescriptor.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC3525.sol": {
				"IERC3525": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xd5358140.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"title": "ERC-3525 Semi-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"slotOf(uint256)": "263f3e7e",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xd5358140.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC3525.sol\":\"IERC3525\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/extensions/IERC3525Metadata.sol": {
				"IERC3525Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ApprovalValue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_oldSlot",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_newSlot",
									"type": "uint256"
								}
							],
							"name": "SlotChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferValue",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "slotOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slot",
									"type": "uint256"
								}
							],
							"name": "slotURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valueDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interfaces for any contract that wants to support query of the Uniform Resource Identifier  (URI) for the ERC3525 contract as well as a specified slot.  Because of the higher reliability of data stored in smart contracts compared to data stored in  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing  to any resource stored in a centralized system.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xe1600902.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"ApprovalValue(uint256,address,uint256)": {
								"details": "MUST emits when the approval value of a token is set or changed.",
								"params": {
									"_operator": "The operator to approve for",
									"_tokenId": "The token to approve",
									"_value": "The maximum value that `_operator` is allowed to manage"
								}
							},
							"SlotChanged(uint256,uint256,uint256)": {
								"details": "MUST emit when the slot of a token is set or changed.",
								"params": {
									"_newSlot": "The updated slot of the token",
									"_oldSlot": "The previous slot of the token",
									"_tokenId": "The token of which slot is set or changed"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							},
							"TransferValue(uint256,uint256,uint256)": {
								"details": "MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).",
								"params": {
									"_fromTokenId": "The token id to transfer value from",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(uint256,address)": {
								"params": {
									"_operator": "The address of an operator",
									"_tokenId": "The token for which to query the allowance"
								},
								"returns": {
									"_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
								}
							},
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"approve(uint256,address,uint256)": {
								"details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
								"params": {
									"_operator": "The operator to be approved",
									"_tokenId": "The token to approve",
									"_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"balanceOf(uint256)": {
								"params": {
									"_tokenId": "The token for which to query the balance"
								},
								"returns": {
									"_0": "The value of `_tokenId`"
								}
							},
							"contractURI()": {
								"details": "This function SHOULD return the URI for this contract in JSON format, starting with  header `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.",
								"returns": {
									"_0": "The JSON formatted URI of the current ERC3525 contract"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"slotOf(uint256)": {
								"params": {
									"_tokenId": "The identifier for a token"
								},
								"returns": {
									"_0": "The slot of the token"
								}
							},
							"slotURI(uint256)": {
								"details": "This function SHOULD return the URI for `_slot` in JSON format, starting with header  `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.",
								"returns": {
									"_0": "The JSON formatted URI of `_slot`"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenURI(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \"ERC721  Metadata JSON Schema\"."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"transferFrom(uint256,address,uint256)": {
								"details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_to": "The address to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "ID of the new token created for `_to` which receives the transferred value"
								}
							},
							"transferFrom(uint256,uint256,uint256)": {
								"details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
								"params": {
									"_fromTokenId": "The token to transfer value from",
									"_toTokenId": "The token to transfer value to",
									"_value": "The transferred value"
								}
							},
							"valueDecimals()": {
								"returns": {
									"_0": "The number of decimals for value"
								}
							}
						},
						"title": "ERC-3525 Semi-Fungible Token Standard, optional extension for metadata",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(uint256,address)": "e345e0bc",
							"approve(address,uint256)": "095ea7b3",
							"approve(uint256,address,uint256)": "8cb0a511",
							"balanceOf(address)": "70a08231",
							"balanceOf(uint256)": "9cc7f708",
							"contractURI()": "e8a3d485",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"slotOf(uint256)": "263f3e7e",
							"slotURI(uint256)": "09c3dd87",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(uint256,address,uint256)": "0f485c02",
							"transferFrom(uint256,uint256,uint256)": "310ed7f0",
							"valueDecimals()": "3e7e8669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slot\",\"type\":\"uint256\"}],\"name\":\"slotURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interfaces for any contract that wants to support query of the Uniform Resource Identifier  (URI) for the ERC3525 contract as well as a specified slot.  Because of the higher reliability of data stored in smart contracts compared to data stored in  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing  to any resource stored in a centralized system.  See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xe1600902.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"contractURI()\":{\"details\":\"This function SHOULD return the URI for this contract in JSON format, starting with  header `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.\",\"returns\":{\"_0\":\"The JSON formatted URI of the current ERC3525 contract\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"slotURI(uint256)\":{\"details\":\"This function SHOULD return the URI for `_slot` in JSON format, starting with header  `data:application/json;`.  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.\",\"returns\":{\"_0\":\"The JSON formatted URI of `_slot`\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \\\"ERC721  Metadata JSON Schema\\\".\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard, optional extension for metadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"contractURI()\":{\"notice\":\"Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"slotURI(uint256)\":{\"notice\":\"Returns the Uniform Resource Identifier (URI) for the specified slot.\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC3525Metadata.sol\":\"IERC3525Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"contracts/extensions/IERC3525Metadata.sol\":{\"keccak256\":\"0xf8eec6537ae391a19bcb87fb4d417568012741f1cb05f292c252ef5560250a7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d87aaa39c94ab2b447c615a5bec5ff8166985d6034df188792eb4e64613cde1\",\"dweb:/ipfs/QmVPhg7pPth4wum5Cp5ruY33i9BVuiVJMMAeNq4bJHY43r\"]},\"contracts/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd3238d11cd53a7f65af1156c7891580eba0c9ed588ba821a84b039ca75627d76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ac46574057fc1885d585ad9d05dff2618a2abd291645e0061d3c3a0a1343b42\",\"dweb:/ipfs/QmRUaPW9bk4puerk3QRqiWbe25rFDgquEKmxWN1PcrtU1L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(uint256,address)": {
								"notice": "Get the maximum value of a token that an operator is allowed to manage."
							},
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"approve(uint256,address,uint256)": {
								"notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"balanceOf(uint256)": {
								"notice": "Get the value of a token."
							},
							"contractURI()": {
								"notice": "Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract."
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"name()": {
								"notice": "A descriptive name for a collection of NFTs in this contract"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"slotOf(uint256)": {
								"notice": "Get the slot of a token."
							},
							"slotURI(uint256)": {
								"notice": "Returns the Uniform Resource Identifier (URI) for the specified slot."
							},
							"symbol()": {
								"notice": "An abbreviated name for NFTs in this contract"
							},
							"tokenURI(uint256)": {
								"notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"transferFrom(uint256,address,uint256)": {
								"notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
							},
							"transferFrom(uint256,uint256,uint256)": {
								"notice": "Transfer value from a specified token to another specified token with the same slot."
							},
							"valueDecimals()": {
								"notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x5b5e139f.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT.",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenURI(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \"ERC721  Metadata JSON Schema\"."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x5b5e139f.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \\\"ERC721  Metadata JSON Schema\\\".\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"contracts/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd3238d11cd53a7f65af1156c7891580eba0c9ed588ba821a84b039ca75627d76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ac46574057fc1885d585ad9d05dff2618a2abd291645e0061d3c3a0a1343b42\",\"dweb:/ipfs/QmRUaPW9bk4puerk3QRqiWbe25rFDgquEKmxWN1PcrtU1L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Change or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"name()": {
								"notice": "A descriptive name for a collection of NFTs in this contract"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
							},
							"symbol()": {
								"notice": "An abbreviated name for NFTs in this contract"
							},
							"tokenURI(uint256)": {
								"notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/periphery/ERC3525MetadataDescriptor.sol": {
				"ERC3525MetadataDescriptor": {
					"abi": [
						{
							"inputs": [],
							"name": "constructContractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "slot_",
									"type": "uint256"
								}
							],
							"name": "constructSlotURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "constructTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":260:4923  contract ERC3525MetadataDescriptor is IERC3525MetadataDescriptor {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":260:4923  contract ERC3525MetadataDescriptor is IERC3525MetadataDescriptor {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c037f8a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x725fa09c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x894b4c2e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1262:2074  function constructSlotURI(uint256 slot_) external view override returns (string memory) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":364:1256  function constructContractURI() external view override returns (string memory) {... */\n    tag_4:\n      tag_6\n      tag_13\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2080:3183  function constructTokenURI(uint256 tokenId_) public view override returns (string memory) {... */\n    tag_5:\n      tag_6\n      tag_16\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1262:2074  function constructSlotURI(uint256 slot_) external view override returns (string memory) {... */\n    tag_9:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1335:1348  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1503:2018  Base64.encode(... */\n      tag_20\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1630:1646  _slotName(slot_) */\n      tag_21\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3507:3516  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3402:3523  function _slotName(uint256 slot_) internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1630:1646  _slotName(slot_) */\n    tag_21:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3507:3516  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1821:1838  _slotImage(slot_) */\n      tag_25\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1832:1837  slot_ */\n      dup6\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1821:1831  _slotImage */\n      tag_26\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1821:1838  _slotImage(slot_) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3952:3963  return \"[]\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup2\n      mstore\n      shl(0xf0, 0x5b5d)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1542:1996  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_29\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1503:1516  Base64.encode */\n      tag_31\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1503:2018  Base64.encode(... */\n      jump\t// in\n    tag_20:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1403:2053  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1360:2067  return... */\n      swap1\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1262:2074  function constructSlotURI(uint256 slot_) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":364:1256  function constructContractURI() external view override returns (string memory) {... */\n    tag_13:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":428:441  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":453:477  IERC3525Metadata erc3525 */\n      0x00\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":497:507  msg.sender */\n      caller\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":453:508  IERC3525Metadata erc3525 = IERC3525Metadata(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":670:1208  Base64.encode(... */\n      tag_35\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":797:804  erc3525 */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":797:809  erc3525.name */\n      and\n      0x06fdde03\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":797:811  erc3525.name() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_38\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3277:3286  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1083:1126  uint256(erc3525.valueDecimals()).toString() */\n      tag_44\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1091:1098  erc3525 */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1091:1112  erc3525.valueDecimals */\n      and\n      0x3e7e8669\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1091:1114  erc3525.valueDecimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1083:1115  uint256(erc3525.valueDecimals()) */\n      0xff\n      and\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1083:1124  uint256(erc3525.valueDecimals()).toString */\n      tag_49\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":1083:1126  uint256(erc3525.valueDecimals()).toString() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":709:1186  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_29\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":670:1208  Base64.encode(... */\n    tag_35:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":562:1235  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":518:1249  return ... */\n      swap2\n      pop\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":364:1256  function constructContractURI() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2080:3183  function constructTokenURI(uint256 tokenId_) public view override returns (string memory) {... */\n    tag_17:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2155:2168  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2224:2234  msg.sender */\n      caller\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2380:3144  Base64.encode(... */\n      tag_54\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2503:2523  _tokenName(tokenId_) */\n      tag_55\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2514:2522  tokenId_ */\n      dup5\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2503:2513  _tokenName */\n      tag_56\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2503:2523  _tokenName(tokenId_) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3507:3516  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2798:2825  erc3525.balanceOf(tokenId_) */\n      mload(0x40)\n      shl(0xe3, 0x1398fee1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6783:6808   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2798:2836  erc3525.balanceOf(tokenId_).toString() */\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2798:2815  erc3525.balanceOf */\n      dup8\n      and\n      swap1\n      0x9cc7f708\n      swap1\n        /* \"#utility.yul\":6756:6774   */\n      0x24\n      add\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2798:2825  erc3525.balanceOf(tokenId_) */\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2798:2834  erc3525.balanceOf(tokenId_).toString */\n      tag_49\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2798:2836  erc3525.balanceOf(tokenId_).toString() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2908:2932  erc3525.slotOf(tokenId_) */\n      mload(0x40)\n      shl(0xe1, 0x131f9f3f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6783:6808   */\n      dup10\n      swap1\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2908:2943  erc3525.slotOf(tokenId_).toString() */\n      tag_68\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2908:2922  erc3525.slotOf */\n      dup9\n      and\n      swap1\n      0x263f3e7e\n      swap1\n        /* \"#utility.yul\":6756:6774   */\n      0x24\n      add\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2908:2932  erc3525.slotOf(tokenId_) */\n      tag_62\n        /* \"#utility.yul\":6637:6814   */\n      jump\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2908:2943  erc3525.slotOf(tokenId_).toString() */\n    tag_68:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4903:4914  return \"{}\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup2\n      mstore\n      shl(0xf0, 0x7b7d)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2419:3122  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_29\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2380:3144  Base64.encode(... */\n    tag_54:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2289:3162  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2245:3176  return ... */\n      swap2\n      pop\n      pop\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":2080:3183  function constructTokenURI(uint256 tokenId_) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3663:3835  function _slotImage(uint256 slot_) internal  virtual view  returns (bytes memory) {... */\n    tag_26:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3784:3827  IERC3525Metadata(msg.sender).slotURI(slot_) */\n      mload(0x40)\n      shl(0xe0, 0x09c3dd87)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6783:6808   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3731:3743  bytes memory */\n      0x60\n      swap1\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3801:3811  msg.sender */\n      caller\n      swap1\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3784:3820  IERC3525Metadata(msg.sender).slotURI */\n      0x09c3dd87\n      swap1\n        /* \"#utility.yul\":6756:6774   */\n      0x24\n      add\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3784:3827  IERC3525Metadata(msg.sender).slotURI(slot_) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_84\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_39\n      jump\t// in\n    tag_84:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3771:3828  return bytes(IERC3525Metadata(msg.sender).slotURI(slot_)) */\n      swap3\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3663:3835  function _slotImage(uint256 slot_) internal  virtual view  returns (bytes memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":534:547  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:770  data */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:777  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":781:782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:782  data.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n      tag_87\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":784:793  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:862  string memory table */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":865:871  _TABLE */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x40\n      dup2\n      mstore\n      0x20\n      add\n      data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce\n      0x40\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:871  string memory table = _TABLE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1294  string memory result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1333:1334  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1318  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1325  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1328:1329  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1329  data.length + 2 */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1313:1334  (data.length + 2) / 3 */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_92\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1309  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1297:1336  new string(4 * ((data.length + 2) / 3)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_95\n      jumpi\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_97:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1336  string memory result = new string(4 * ((data.length + 2) / 3)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1511:1512  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1504:1509  table */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1500:1513  add(table, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1612:1614  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1604:1610  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1600:1615  add(result, 32) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1719:1723  data */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1770:1774  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1764:1775  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1758:1762  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1754:1776  add(data, mload(data)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1803:1809  endPtr */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1794:1801  dataPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1791:1810  lt(dataPtr, endPtr) */\n      lt\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1905:1906  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1896:1903  dataPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1892:1907  add(dataPtr, 3) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1881:1907  dataPtr := add(dataPtr, 3) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1943:1950  dataPtr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1937:1951  mload(dataPtr) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2586:2590  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2578:2583  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2574:2576  18 */\n      0x12\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2570:2584  shr(18, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2566:2591  and(shr(18, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2556:2564  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2552:2592  add(tablePtr, and(shr(18, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2546:2593  mload(add(tablePtr, and(shr(18, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2535:2544  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2527:2594  mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2639:2640  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2628:2637  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2624:2641  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2611:2641  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2729:2733  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2721:2726  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2717:2719  12 */\n      0x0c\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2713:2727  shr(12, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2709:2734  and(shr(12, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2699:2707  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2695:2735  add(tablePtr, and(shr(12, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2689:2736  mload(add(tablePtr, and(shr(12, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2678:2687  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2670:2737  mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2782:2783  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2771:2780  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2767:2784  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2754:2784  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2871:2875  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2863:2868  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2860:2861  6 */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2856:2869  shr(6, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2852:2876  and(shr(6, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2842:2850  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2838:2877  add(tablePtr, and(shr(6, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2832:2878  mload(add(tablePtr, and(shr(6, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2821:2830  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2813:2879  mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2924:2925  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2913:2922  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2909:2926  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2896:2926  resultPtr := add(resultPtr, 1) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3005:3009  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2998:3003  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2994:3010  and(input, 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2984:2992  tablePtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2980:3011  add(tablePtr, and(input, 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2974:3012  mload(add(tablePtr, and(input, 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2963:2972  resultPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2955:3013  mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F)))) */\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3058:3059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3047:3056  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3043:3060  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3030:3060  resultPtr := add(resultPtr, 1) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1682:3085  for {... */\n      jump(tag_98)\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1686:1790  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3243:3244  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3236:3240  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3230:3241  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3226:3245  mod(mload(data), 3) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3263:3264  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n      dup2\n      eq\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3396:3397  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3391:3462  case 2 {... */\n      dup2\n      eq\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3219:3462  switch mod(mload(data), 3)... */\n      jump(tag_101)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3310:3314  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3306:3307  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3295:3304  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3291:3308  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3283:3315  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3359:3363  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3355:3356  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3344:3353  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3340:3357  sub(resultPtr, 2) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3332:3364  mstore8(sub(resultPtr, 2), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3258:3378  case 1 {... */\n      jump(tag_101)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3391:3462  case 2 {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3443:3447  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3439:3440  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3428:3437  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3424:3441  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3416:3448  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3219:3462  switch mod(mload(data), 3)... */\n    tag_101:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3489:3495  result */\n      swap2\n      swap6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3502  function encode(bytes memory data) internal pure returns (string memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_110\n      tag_96\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_112:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":3976:4282  function _tokenName(uint256 tokenId_) internal view virtual returns (string memory) {... */\n    tag_56:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4045:4058  string memory */\n      0x60\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4177:4187  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4160:4193  IERC3525Metadata(msg.sender).name */\n      and\n      0x06fdde03\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4160:4195  IERC3525Metadata(msg.sender).name() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_121\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_39\n      jump\t// in\n    tag_121:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4224:4243  tokenId_.toString() */\n      tag_122\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4224:4232  tokenId_ */\n      dup4\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4224:4241  tokenId_.toString */\n      tag_49\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4224:4243  tokenId_.toString() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/periphery/ERC3525MetadataDescriptor.sol\":4122:4261  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_129\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_8:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_155:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:449   */\n    tag_148:\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:407   */\n    tag_157:\n        /* \"#utility.yul\":308:314   */\n      dup4\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:407   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":384:395   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":378:396   */\n      mload\n        /* \"#utility.yul\":365:376   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":358:397   */\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":323:333   */\n      add\n        /* \"#utility.yul\":294:407   */\n      jump(tag_157)\n    tag_159:\n      pop\n      pop\n        /* \"#utility.yul\":441:442   */\n      0x00\n        /* \"#utility.yul\":423:439   */\n      swap2\n      add\n        /* \"#utility.yul\":416:443   */\n      mstore\n        /* \"#utility.yul\":199:449   */\n      jump\t// out\n        /* \"#utility.yul\":454:850   */\n    tag_11:\n        /* \"#utility.yul\":603:605   */\n      0x20\n        /* \"#utility.yul\":592:601   */\n      dup2\n        /* \"#utility.yul\":585:606   */\n      mstore\n        /* \"#utility.yul\":566:570   */\n      0x00\n        /* \"#utility.yul\":635:641   */\n      dup3\n        /* \"#utility.yul\":629:642   */\n      mload\n        /* \"#utility.yul\":678:684   */\n      dup1\n        /* \"#utility.yul\":673:675   */\n      0x20\n        /* \"#utility.yul\":662:671   */\n      dup5\n        /* \"#utility.yul\":658:676   */\n      add\n        /* \"#utility.yul\":651:685   */\n      mstore\n        /* \"#utility.yul\":694:773   */\n      tag_161\n        /* \"#utility.yul\":766:772   */\n      dup2\n        /* \"#utility.yul\":761:763   */\n      0x40\n        /* \"#utility.yul\":750:759   */\n      dup6\n        /* \"#utility.yul\":746:764   */\n      add\n        /* \"#utility.yul\":741:743   */\n      0x20\n        /* \"#utility.yul\":733:739   */\n      dup8\n        /* \"#utility.yul\":729:744   */\n      add\n        /* \"#utility.yul\":694:773   */\n      tag_148\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":834:836   */\n      0x1f\n        /* \"#utility.yul\":813:828   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":809:838   */\n      and\n        /* \"#utility.yul\":794:839   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":841:843   */\n      0x40\n        /* \"#utility.yul\":790:844   */\n      add\n      swap3\n        /* \"#utility.yul\":454:850   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":855:1053   */\n    tag_149:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":950:1015   */\n      tag_163\n        /* \"#utility.yul\":1008:1014   */\n      dup2\n        /* \"#utility.yul\":1003:1006   */\n      dup6\n        /* \"#utility.yul\":996:1000   */\n      0x20\n        /* \"#utility.yul\":989:994   */\n      dup7\n        /* \"#utility.yul\":985:1001   */\n      add\n        /* \"#utility.yul\":950:1015   */\n      tag_148\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1031:1047   */\n      swap3\n      swap1\n      swap3\n      add\n      swap3\n        /* \"#utility.yul\":855:1053   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1336:3083   */\n    tag_30:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":2132:2175   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2198:2211   */\n      dup5\n      mload\n        /* \"#utility.yul\":2114:2117   */\n      0x00\n      swap1\n        /* \"#utility.yul\":2220:2294   */\n      tag_167\n        /* \"#utility.yul\":2198:2211   */\n      dup2\n        /* \"#utility.yul\":2283:2284   */\n      0x09\n        /* \"#utility.yul\":2274:2285   */\n      dup6\n      add\n        /* \"#utility.yul\":2267:2271   */\n      0x20\n        /* \"#utility.yul\":2255:2272   */\n      dup11\n      add\n        /* \"#utility.yul\":2220:2294   */\n      tag_148\n      jump\t// in\n    tag_167:\n      shl(0x79, 0x1116113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":2353:2354   */\n      0x09\n        /* \"#utility.yul\":2313:2329   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":2345:2355   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2338:2404   */\n      mstore\n        /* \"#utility.yul\":2429:2442   */\n      dup6\n      mload\n        /* \"#utility.yul\":2451:2527   */\n      tag_168\n        /* \"#utility.yul\":2429:2442   */\n      dup2\n        /* \"#utility.yul\":2513:2515   */\n      0x1a\n        /* \"#utility.yul\":2505:2516   */\n      dup5\n      add\n        /* \"#utility.yul\":2498:2502   */\n      0x20\n        /* \"#utility.yul\":2486:2503   */\n      dup11\n      add\n        /* \"#utility.yul\":2451:2527   */\n      tag_148\n      jump\t// in\n    tag_168:\n      shl(0xa9, 0x11161134b6b0b3b2911d11)\n        /* \"#utility.yul\":2587:2589   */\n      0x1a\n        /* \"#utility.yul\":2546:2563   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2579:2590   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2572:2627   */\n      mstore\n        /* \"#utility.yul\":2652:2665   */\n      dup5\n      mload\n        /* \"#utility.yul\":2674:2750   */\n      tag_169\n        /* \"#utility.yul\":2652:2665   */\n      dup2\n        /* \"#utility.yul\":2736:2738   */\n      0x25\n        /* \"#utility.yul\":2728:2739   */\n      dup5\n      add\n        /* \"#utility.yul\":2721:2725   */\n      0x20\n        /* \"#utility.yul\":2709:2726   */\n      dup10\n      add\n        /* \"#utility.yul\":2674:2750   */\n      tag_148\n      jump\t// in\n    tag_169:\n      shl(0x89, 0x111611383937b832b93a34b2b9911d)\n        /* \"#utility.yul\":2810:2812   */\n      0x25\n        /* \"#utility.yul\":2769:2786   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2802:2813   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2795:2858   */\n      mstore\n        /* \"#utility.yul\":2883:2896   */\n      dup4\n      mload\n        /* \"#utility.yul\":2905:2981   */\n      tag_170\n        /* \"#utility.yul\":2883:2896   */\n      dup2\n        /* \"#utility.yul\":2967:2969   */\n      0x34\n        /* \"#utility.yul\":2959:2970   */\n      dup5\n      add\n        /* \"#utility.yul\":2952:2956   */\n      0x20\n        /* \"#utility.yul\":2940:2957   */\n      dup9\n      add\n        /* \"#utility.yul\":2905:2981   */\n      tag_148\n      jump\t// in\n    tag_170:\n      shl(0xf8, 0x7d)\n        /* \"#utility.yul\":3041:3043   */\n      0x34\n        /* \"#utility.yul\":3000:3017   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3033:3044   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3026:3050   */\n      mstore\n        /* \"#utility.yul\":3074:3076   */\n      0x35\n        /* \"#utility.yul\":3066:3077   */\n      add\n      swap7\n        /* \"#utility.yul\":1336:3083   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3088:3549   */\n    tag_33:\n        /* \"#utility.yul\":3350:3381   */\n      0x646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000\n        /* \"#utility.yul\":3345:3348   */\n      dup2\n        /* \"#utility.yul\":3338:3382   */\n      mstore\n        /* \"#utility.yul\":3320:3323   */\n      0x00\n        /* \"#utility.yul\":3411:3417   */\n      dup3\n        /* \"#utility.yul\":3405:3418   */\n      mload\n        /* \"#utility.yul\":3427:3502   */\n      tag_172\n        /* \"#utility.yul\":3495:3501   */\n      dup2\n        /* \"#utility.yul\":3490:3492   */\n      0x1d\n        /* \"#utility.yul\":3485:3488   */\n      dup6\n        /* \"#utility.yul\":3481:3493   */\n      add\n        /* \"#utility.yul\":3474:3478   */\n      0x20\n        /* \"#utility.yul\":3466:3472   */\n      dup8\n        /* \"#utility.yul\":3462:3479   */\n      add\n        /* \"#utility.yul\":3427:3502   */\n      tag_148\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3522:3538   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3540:3542   */\n      0x1d\n        /* \"#utility.yul\":3518:3543   */\n      add\n      swap3\n        /* \"#utility.yul\":3088:3549   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3554:3681   */\n    tag_96:\n        /* \"#utility.yul\":3615:3625   */\n      0x4e487b71\n        /* \"#utility.yul\":3610:3613   */\n      0xe0\n        /* \"#utility.yul\":3606:3626   */\n      shl\n        /* \"#utility.yul\":3603:3604   */\n      0x00\n        /* \"#utility.yul\":3596:3627   */\n      mstore\n        /* \"#utility.yul\":3646:3650   */\n      0x41\n        /* \"#utility.yul\":3643:3644   */\n      0x04\n        /* \"#utility.yul\":3636:3651   */\n      mstore\n        /* \"#utility.yul\":3670:3674   */\n      0x24\n        /* \"#utility.yul\":3667:3668   */\n      0x00\n        /* \"#utility.yul\":3660:3675   */\n      revert\n        /* \"#utility.yul\":3686:4583   */\n    tag_39:\n        /* \"#utility.yul\":3766:3772   */\n      0x00\n        /* \"#utility.yul\":3819:3821   */\n      0x20\n        /* \"#utility.yul\":3807:3816   */\n      dup3\n        /* \"#utility.yul\":3798:3805   */\n      dup5\n        /* \"#utility.yul\":3794:3817   */\n      sub\n        /* \"#utility.yul\":3790:3822   */\n      slt\n        /* \"#utility.yul\":3787:3839   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":3835:3836   */\n      0x00\n        /* \"#utility.yul\":3832:3833   */\n      dup1\n        /* \"#utility.yul\":3825:3837   */\n      revert\n        /* \"#utility.yul\":3787:3839   */\n    tag_175:\n        /* \"#utility.yul\":3868:3877   */\n      dup2\n        /* \"#utility.yul\":3862:3878   */\n      mload\n        /* \"#utility.yul\":3897:3915   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3938:3940   */\n      dup1\n        /* \"#utility.yul\":3930:3936   */\n      dup3\n        /* \"#utility.yul\":3927:3941   */\n      gt\n        /* \"#utility.yul\":3924:3958   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":3954:3955   */\n      0x00\n        /* \"#utility.yul\":3951:3952   */\n      dup1\n        /* \"#utility.yul\":3944:3956   */\n      revert\n        /* \"#utility.yul\":3924:3958   */\n    tag_176:\n        /* \"#utility.yul\":3992:3998   */\n      dup2\n        /* \"#utility.yul\":3981:3990   */\n      dup5\n        /* \"#utility.yul\":3977:3999   */\n      add\n        /* \"#utility.yul\":3967:3999   */\n      swap2\n      pop\n        /* \"#utility.yul\":4037:4044   */\n      dup5\n        /* \"#utility.yul\":4030:4034   */\n      0x1f\n        /* \"#utility.yul\":4026:4028   */\n      dup4\n        /* \"#utility.yul\":4022:4035   */\n      add\n        /* \"#utility.yul\":4018:4045   */\n      slt\n        /* \"#utility.yul\":4008:4063   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":4059:4060   */\n      0x00\n        /* \"#utility.yul\":4056:4057   */\n      dup1\n        /* \"#utility.yul\":4049:4061   */\n      revert\n        /* \"#utility.yul\":4008:4063   */\n    tag_177:\n        /* \"#utility.yul\":4088:4090   */\n      dup2\n        /* \"#utility.yul\":4082:4091   */\n      mload\n        /* \"#utility.yul\":4110:4112   */\n      dup2\n        /* \"#utility.yul\":4106:4108   */\n      dup2\n        /* \"#utility.yul\":4103:4113   */\n      gt\n        /* \"#utility.yul\":4100:4136   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":4116:4134   */\n      tag_179\n      tag_96\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4191:4193   */\n      0x40\n        /* \"#utility.yul\":4185:4194   */\n      mload\n        /* \"#utility.yul\":4159:4161   */\n      0x1f\n        /* \"#utility.yul\":4245:4258   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4241:4263   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4265:4267   */\n      0x3f\n        /* \"#utility.yul\":4237:4268   */\n      add\n        /* \"#utility.yul\":4233:4273   */\n      and\n        /* \"#utility.yul\":4221:4274   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4289:4307   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4309:4331   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4286:4332   */\n      or\n        /* \"#utility.yul\":4283:4355   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":4335:4353   */\n      tag_181\n      tag_96\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4375:4385   */\n      dup2\n        /* \"#utility.yul\":4371:4373   */\n      0x40\n        /* \"#utility.yul\":4364:4386   */\n      mstore\n        /* \"#utility.yul\":4410:4412   */\n      dup3\n        /* \"#utility.yul\":4402:4408   */\n      dup2\n        /* \"#utility.yul\":4395:4413   */\n      mstore\n        /* \"#utility.yul\":4450:4457   */\n      dup8\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4440:4442   */\n      dup5\n        /* \"#utility.yul\":4436:4438   */\n      dup8\n        /* \"#utility.yul\":4432:4443   */\n      add\n        /* \"#utility.yul\":4428:4448   */\n      add\n        /* \"#utility.yul\":4425:4458   */\n      gt\n        /* \"#utility.yul\":4422:4475   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":4471:4472   */\n      0x00\n        /* \"#utility.yul\":4468:4469   */\n      dup1\n        /* \"#utility.yul\":4461:4473   */\n      revert\n        /* \"#utility.yul\":4422:4475   */\n    tag_182:\n        /* \"#utility.yul\":4484:4552   */\n      tag_183\n        /* \"#utility.yul\":4549:4551   */\n      dup4\n        /* \"#utility.yul\":4544:4546   */\n      0x20\n        /* \"#utility.yul\":4536:4542   */\n      dup4\n        /* \"#utility.yul\":4532:4547   */\n      add\n        /* \"#utility.yul\":4527:4529   */\n      0x20\n        /* \"#utility.yul\":4523:4525   */\n      dup9\n        /* \"#utility.yul\":4519:4530   */\n      add\n        /* \"#utility.yul\":4484:4552   */\n      tag_148\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4571:4577   */\n      swap8\n        /* \"#utility.yul\":3686:4583   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4588:4861   */\n    tag_48:\n        /* \"#utility.yul\":4656:4662   */\n      0x00\n        /* \"#utility.yul\":4709:4711   */\n      0x20\n        /* \"#utility.yul\":4697:4706   */\n      dup3\n        /* \"#utility.yul\":4688:4695   */\n      dup5\n        /* \"#utility.yul\":4684:4707   */\n      sub\n        /* \"#utility.yul\":4680:4712   */\n      slt\n        /* \"#utility.yul\":4677:4729   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":4725:4726   */\n      0x00\n        /* \"#utility.yul\":4722:4723   */\n      dup1\n        /* \"#utility.yul\":4715:4727   */\n      revert\n        /* \"#utility.yul\":4677:4729   */\n    tag_185:\n        /* \"#utility.yul\":4757:4766   */\n      dup2\n        /* \"#utility.yul\":4751:4767   */\n      mload\n        /* \"#utility.yul\":4807:4811   */\n      0xff\n        /* \"#utility.yul\":4800:4805   */\n      dup2\n        /* \"#utility.yul\":4796:4812   */\n      and\n        /* \"#utility.yul\":4789:4794   */\n      dup2\n        /* \"#utility.yul\":4786:4813   */\n      eq\n        /* \"#utility.yul\":4776:4831   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4827:4828   */\n      0x00\n        /* \"#utility.yul\":4824:4825   */\n      dup1\n        /* \"#utility.yul\":4817:4829   */\n      revert\n        /* \"#utility.yul\":4776:4831   */\n    tag_186:\n        /* \"#utility.yul\":4850:4855   */\n      swap4\n        /* \"#utility.yul\":4588:4861   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4866:6632   */\n    tag_51:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":5662:5705   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5728:5741   */\n      dup5\n      mload\n        /* \"#utility.yul\":5644:5647   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5750:5824   */\n      tag_188\n        /* \"#utility.yul\":5728:5741   */\n      dup2\n        /* \"#utility.yul\":5813:5814   */\n      0x09\n        /* \"#utility.yul\":5804:5815   */\n      dup6\n      add\n        /* \"#utility.yul\":5797:5801   */\n      0x20\n        /* \"#utility.yul\":5785:5802   */\n      dup11\n      add\n        /* \"#utility.yul\":5750:5824   */\n      tag_148\n      jump\t// in\n    tag_188:\n      shl(0x79, 0x1116113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":5883:5884   */\n      0x09\n        /* \"#utility.yul\":5843:5859   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":5875:5885   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5868:5934   */\n      mstore\n        /* \"#utility.yul\":5959:5972   */\n      dup6\n      mload\n        /* \"#utility.yul\":5981:6057   */\n      tag_189\n        /* \"#utility.yul\":5959:5972   */\n      dup2\n        /* \"#utility.yul\":6043:6045   */\n      0x1a\n        /* \"#utility.yul\":6035:6046   */\n      dup5\n      add\n        /* \"#utility.yul\":6028:6032   */\n      0x20\n        /* \"#utility.yul\":6016:6033   */\n      dup11\n      add\n        /* \"#utility.yul\":5981:6057   */\n      tag_148\n      jump\t// in\n    tag_189:\n      shl(0xa9, 0x11161134b6b0b3b2911d11)\n        /* \"#utility.yul\":6117:6119   */\n      0x1a\n        /* \"#utility.yul\":6076:6093   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6109:6120   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":6102:6157   */\n      mstore\n        /* \"#utility.yul\":6182:6195   */\n      dup5\n      mload\n        /* \"#utility.yul\":6204:6280   */\n      tag_190\n        /* \"#utility.yul\":6182:6195   */\n      dup2\n        /* \"#utility.yul\":6266:6268   */\n      0x25\n        /* \"#utility.yul\":6258:6269   */\n      dup5\n      add\n        /* \"#utility.yul\":6251:6255   */\n      0x20\n        /* \"#utility.yul\":6239:6256   */\n      dup10\n      add\n        /* \"#utility.yul\":6204:6280   */\n      tag_148\n      jump\t// in\n    tag_190:\n      shl(0x69, 0x1116113b30b63ab2a232b1b4b6b0b639911d11)\n        /* \"#utility.yul\":6340:6342   */\n      0x25\n        /* \"#utility.yul\":6299:6316   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6332:6343   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":6325:6396   */\n      mstore\n        /* \"#utility.yul\":6421:6434   */\n      dup4\n      mload\n        /* \"#utility.yul\":6443:6519   */\n      tag_191\n        /* \"#utility.yul\":6421:6434   */\n      dup2\n        /* \"#utility.yul\":6505:6507   */\n      0x38\n        /* \"#utility.yul\":6497:6508   */\n      dup5\n      add\n        /* \"#utility.yul\":6490:6494   */\n      0x20\n        /* \"#utility.yul\":6478:6495   */\n      dup9\n      add\n        /* \"#utility.yul\":6443:6519   */\n      tag_148\n      jump\t// in\n    tag_191:\n      shl(0xf0, 0x227d)\n        /* \"#utility.yul\":6579:6581   */\n      0x38\n        /* \"#utility.yul\":6538:6555   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6571:6582   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":6564:6599   */\n      mstore\n        /* \"#utility.yul\":6623:6625   */\n      0x3a\n        /* \"#utility.yul\":6615:6626   */\n      add\n      swap7\n        /* \"#utility.yul\":4866:6632   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6819:7003   */\n    tag_67:\n        /* \"#utility.yul\":6889:6895   */\n      0x00\n        /* \"#utility.yul\":6942:6944   */\n      0x20\n        /* \"#utility.yul\":6930:6939   */\n      dup3\n        /* \"#utility.yul\":6921:6928   */\n      dup5\n        /* \"#utility.yul\":6917:6940   */\n      sub\n        /* \"#utility.yul\":6913:6945   */\n      slt\n        /* \"#utility.yul\":6910:6962   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":6958:6959   */\n      0x00\n        /* \"#utility.yul\":6955:6956   */\n      dup1\n        /* \"#utility.yul\":6948:6960   */\n      revert\n        /* \"#utility.yul\":6910:6962   */\n    tag_194:\n      pop\n        /* \"#utility.yul\":6981:6997   */\n      mload\n      swap2\n        /* \"#utility.yul\":6819:7003   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7008:9307   */\n    tag_76:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":8104:8147   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8170:8183   */\n      dup7\n      mload\n        /* \"#utility.yul\":8086:8089   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8192:8266   */\n      tag_196\n        /* \"#utility.yul\":8170:8183   */\n      dup2\n        /* \"#utility.yul\":8255:8256   */\n      0x09\n        /* \"#utility.yul\":8246:8257   */\n      dup6\n      add\n        /* \"#utility.yul\":8239:8243   */\n      0x20\n        /* \"#utility.yul\":8227:8244   */\n      dup13\n      add\n        /* \"#utility.yul\":8192:8266   */\n      tag_148\n      jump\t// in\n    tag_196:\n      shl(0x79, 0x1116113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":8325:8326   */\n      0x09\n        /* \"#utility.yul\":8285:8301   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":8317:8327   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8310:8376   */\n      mstore\n        /* \"#utility.yul\":8401:8414   */\n      dup8\n      mload\n        /* \"#utility.yul\":8423:8499   */\n      tag_197\n        /* \"#utility.yul\":8401:8414   */\n      dup2\n        /* \"#utility.yul\":8485:8487   */\n      0x1a\n        /* \"#utility.yul\":8477:8488   */\n      dup5\n      add\n        /* \"#utility.yul\":8470:8474   */\n      0x20\n        /* \"#utility.yul\":8458:8475   */\n      dup13\n      add\n        /* \"#utility.yul\":8423:8499   */\n      tag_148\n      jump\t// in\n    tag_197:\n      shl(0xa9, 0x11161134b6b0b3b2911d11)\n        /* \"#utility.yul\":8559:8561   */\n      0x1a\n        /* \"#utility.yul\":8518:8535   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8551:8562   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8544:8599   */\n      mstore\n        /* \"#utility.yul\":8624:8637   */\n      dup7\n      mload\n        /* \"#utility.yul\":8646:8722   */\n      tag_198\n        /* \"#utility.yul\":8624:8637   */\n      dup2\n        /* \"#utility.yul\":8708:8710   */\n      0x25\n        /* \"#utility.yul\":8700:8711   */\n      dup5\n      add\n        /* \"#utility.yul\":8693:8697   */\n      0x20\n        /* \"#utility.yul\":8681:8698   */\n      dup12\n      add\n        /* \"#utility.yul\":8646:8722   */\n      tag_148\n      jump\t// in\n    tag_198:\n      shl(0x99, 0x1116113130b630b731b2911d11)\n        /* \"#utility.yul\":8782:8784   */\n      0x25\n        /* \"#utility.yul\":8741:8758   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8774:8785   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8767:8826   */\n      mstore\n        /* \"#utility.yul\":8851:8864   */\n      dup6\n      mload\n        /* \"#utility.yul\":8873:8949   */\n      tag_199\n        /* \"#utility.yul\":8851:8864   */\n      dup2\n        /* \"#utility.yul\":8935:8937   */\n      0x32\n        /* \"#utility.yul\":8927:8938   */\n      dup5\n      add\n        /* \"#utility.yul\":8920:8924   */\n      0x20\n        /* \"#utility.yul\":8908:8925   */\n      dup11\n      add\n        /* \"#utility.yul\":8873:8949   */\n      tag_148\n      jump\t// in\n    tag_199:\n      shl(0xb1, 0x11161139b637ba111d11)\n        /* \"#utility.yul\":9009:9011   */\n      0x32\n        /* \"#utility.yul\":8968:8985   */\n      swap3\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9001:9012   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8994:9047   */\n      mstore\n        /* \"#utility.yul\":9072:9085   */\n      dup5\n      mload\n        /* \"#utility.yul\":9094:9170   */\n      tag_200\n        /* \"#utility.yul\":9072:9085   */\n      dup2\n        /* \"#utility.yul\":9156:9158   */\n      0x3c\n        /* \"#utility.yul\":9148:9159   */\n      dup5\n      add\n        /* \"#utility.yul\":9141:9145   */\n      0x20\n        /* \"#utility.yul\":9129:9146   */\n      dup10\n      add\n        /* \"#utility.yul\":9094:9170   */\n      tag_148\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9186:9301   */\n      tag_201\n        /* \"#utility.yul\":9216:9300   */\n      tag_202\n        /* \"#utility.yul\":9242:9299   */\n      tag_203\n        /* \"#utility.yul\":9295:9297   */\n      0x3c\n        /* \"#utility.yul\":9284:9292   */\n      dup5\n        /* \"#utility.yul\":9280:9282   */\n      dup7\n        /* \"#utility.yul\":9276:9293   */\n      add\n        /* \"#utility.yul\":9272:9298   */\n      add\n      shl(0x89, 0x111611383937b832b93a34b2b9911d)\n        /* \"#utility.yul\":1123:1178   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1203:1205   */\n      0x0f\n        /* \"#utility.yul\":1194:1206   */\n      add\n      swap1\n        /* \"#utility.yul\":1058:1212   */\n      jump\n        /* \"#utility.yul\":9242:9299   */\n    tag_203:\n        /* \"#utility.yul\":9234:9240   */\n      dup8\n        /* \"#utility.yul\":9216:9300   */\n      tag_149\n      jump\t// in\n    tag_202:\n      shl(0xf8, 0x7d)\n        /* \"#utility.yul\":1282:1298   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1323:1324   */\n      0x01\n        /* \"#utility.yul\":1314:1325   */\n      add\n      swap1\n        /* \"#utility.yul\":1217:1331   */\n      jump\n        /* \"#utility.yul\":9186:9301   */\n    tag_201:\n        /* \"#utility.yul\":9179:9301   */\n      swap11\n        /* \"#utility.yul\":7008:9307   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9312:9439   */\n    tag_152:\n        /* \"#utility.yul\":9373:9383   */\n      0x4e487b71\n        /* \"#utility.yul\":9368:9371   */\n      0xe0\n        /* \"#utility.yul\":9364:9384   */\n      shl\n        /* \"#utility.yul\":9361:9362   */\n      0x00\n        /* \"#utility.yul\":9354:9385   */\n      mstore\n        /* \"#utility.yul\":9404:9408   */\n      0x11\n        /* \"#utility.yul\":9401:9402   */\n      0x04\n        /* \"#utility.yul\":9394:9409   */\n      mstore\n        /* \"#utility.yul\":9428:9432   */\n      0x24\n        /* \"#utility.yul\":9425:9426   */\n      0x00\n        /* \"#utility.yul\":9418:9433   */\n      revert\n        /* \"#utility.yul\":9444:9569   */\n    tag_89:\n        /* \"#utility.yul\":9509:9518   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9530:9540   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9527:9563   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":9543:9561   */\n      tag_84\n      tag_152\n      jump\t// in\n        /* \"#utility.yul\":9706:9923   */\n    tag_91:\n        /* \"#utility.yul\":9746:9747   */\n      0x00\n        /* \"#utility.yul\":9772:9773   */\n      dup3\n        /* \"#utility.yul\":9762:9894   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":9816:9826   */\n      0x4e487b71\n        /* \"#utility.yul\":9811:9814   */\n      0xe0\n        /* \"#utility.yul\":9807:9827   */\n      shl\n        /* \"#utility.yul\":9804:9805   */\n      0x00\n        /* \"#utility.yul\":9797:9828   */\n      mstore\n        /* \"#utility.yul\":9851:9855   */\n      0x12\n        /* \"#utility.yul\":9848:9849   */\n      0x04\n        /* \"#utility.yul\":9841:9856   */\n      mstore\n        /* \"#utility.yul\":9879:9883   */\n      0x24\n        /* \"#utility.yul\":9876:9877   */\n      0x00\n        /* \"#utility.yul\":9869:9884   */\n      revert\n        /* \"#utility.yul\":9762:9894   */\n    tag_210:\n      pop\n        /* \"#utility.yul\":9908:9917   */\n      div\n      swap1\n        /* \"#utility.yul\":9706:9923   */\n      jump\t// out\n        /* \"#utility.yul\":9928:10096   */\n    tag_93:\n        /* \"#utility.yul\":10001:10010   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10032:10041   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10049:10064   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10043:10065   */\n      dup5\n      eq\n        /* \"#utility.yul\":10029:10066   */\n      or\n        /* \"#utility.yul\":10019:10090   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":10070:10088   */\n      tag_84\n      tag_152\n      jump\t// in\n        /* \"#utility.yul\":10101:10742   */\n    tag_124:\n        /* \"#utility.yul\":10381:10384   */\n      0x00\n        /* \"#utility.yul\":10419:10425   */\n      dup4\n        /* \"#utility.yul\":10413:10426   */\n      mload\n        /* \"#utility.yul\":10435:10501   */\n      tag_215\n        /* \"#utility.yul\":10494:10500   */\n      dup2\n        /* \"#utility.yul\":10489:10492   */\n      dup5\n        /* \"#utility.yul\":10482:10486   */\n      0x20\n        /* \"#utility.yul\":10474:10480   */\n      dup9\n        /* \"#utility.yul\":10470:10487   */\n      add\n        /* \"#utility.yul\":10435:10501   */\n      tag_148\n      jump\t// in\n    tag_215:\n      shl(0xf0, 0x2023)\n        /* \"#utility.yul\":10523:10539   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":10548:10567   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10592:10605   */\n      dup4\n      mload\n        /* \"#utility.yul\":10614:10692   */\n      tag_216\n        /* \"#utility.yul\":10592:10605   */\n      dup2\n        /* \"#utility.yul\":10679:10680   */\n      0x02\n        /* \"#utility.yul\":10668:10681   */\n      dup5\n      add\n        /* \"#utility.yul\":10661:10665   */\n      0x20\n        /* \"#utility.yul\":10649:10666   */\n      dup9\n      add\n        /* \"#utility.yul\":10614:10692   */\n      tag_148\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":10712:10732   */\n      add\n        /* \"#utility.yul\":10734:10735   */\n      0x02\n        /* \"#utility.yul\":10708:10736   */\n      add\n      swap5\n        /* \"#utility.yul\":10101:10742   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce 4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f\n\n    auxdata: 0xa26469706673582212205cdc7e2e734a4a48ba9a220034d430a43511a5a3b20d54f2962da169cac912cd64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50610c9d8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80636c037f8a14610043578063725fa09c1461006c578063894b4c2e14610074575b5f80fd5b610056610051366004610706565b610087565b604051610063919061073f565b60405180910390f35b61005661011d565b610056610082366004610706565b610247565b60606100f76100a060408051602081019091525f815290565b60408051602081019091525f81526100b785610369565b6040805180820190915260028152615b5d60f01b60208201526040516020016100e3949392919061078c565b6040516020818303038152906040526103d2565b6040516020016101079190610859565b6040516020818303038152906040529050919050565b60605f339050610222816001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa158015610161573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261018891908101906108b1565b60408051602081019091525f815260408051602081019091525f815261020f856001600160a01b0316633e7e86696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102079190610959565b60ff16610521565b6040516020016100e39493929190610980565b6040516020016102329190610859565b60405160208183030381529060405291505090565b606033610342610256846105b1565b60408051602081019091525f815260408051602081019091525f8152604051631398fee160e31b8152600481018890526102e3906001600160a01b03871690639cc7f708906024015b602060405180830381865afa1580156102ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102de9190610a52565b610521565b60405163131f9f3f60e11b815260048101899052610314906001600160a01b0388169063263f3e7e9060240161029f565b6040805180820190915260028152617b7d60f01b60208201526040516020016100e396959493929190610a69565b6040516020016103529190610859565b604051602081830303815290604052915050919050565b6040516309c3dd8760e01b81526004810182905260609033906309c3dd87906024015f60405180830381865afa1580156103a5573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526103cc91908101906108b1565b92915050565b606081515f036103ef57505060408051602081019091525f815290565b5f604051806060016040528060408152602001610c286040913990505f60038451600261041c9190610ba2565b6104269190610bb5565b610431906004610bd4565b67ffffffffffffffff8111156104495761044961089d565b6040519080825280601f01601f191660200182016040528015610473576020820181803683370190505b509050600182016020820185865187015b808210156104df576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610484565b50506003865106600181146104fb576002811461050e57610516565b603d6001830353603d6002830353610516565b603d60018303535b509195945050505050565b60605f61052d8361062f565b60010190505f8167ffffffffffffffff81111561054c5761054c61089d565b6040519080825280601f01601f191660200182016040528015610576576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461058057509392505050565b6060336001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa1580156105ee573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261061591908101906108b1565b61061e83610521565b604051602001610107929190610beb565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061066d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610699576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106106b757662386f26fc10000830492506010015b6305f5e10083106106cf576305f5e100830492506008015b61271083106106e357612710830492506004015b606483106106f5576064830492506002015b600a83106103cc5760010192915050565b5f60208284031215610716575f80fd5b5035919050565b5f5b8381101561073757818101518382015260200161071f565b50505f910152565b602081525f825180602084015261075d81604085016020870161071d565b601f01601f19169190910160400192915050565b5f815161078281856020860161071d565b9290920192915050565b683d913730b6b2911d1160b91b815284515f906107b0816009850160208a0161071d565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516107e181601a840160208a0161071d565b6a11161134b6b0b3b2911d1160a91b601a9290910191820152845161080d81602584016020890161071d565b6e111611383937b832b93a34b2b9911d60891b60259290910191820152835161083d81603484016020880161071d565b607d60f81b603492909101918201526035019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525f825161089081601d85016020870161071d565b91909101601d0192915050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156108c1575f80fd5b815167ffffffffffffffff808211156108d8575f80fd5b818401915084601f8301126108eb575f80fd5b8151818111156108fd576108fd61089d565b604051601f8201601f19908116603f011681019083821181831017156109255761092561089d565b8160405282815287602084870101111561093d575f80fd5b61094e83602083016020880161071d565b979650505050505050565b5f60208284031215610969575f80fd5b815160ff81168114610979575f80fd5b9392505050565b683d913730b6b2911d1160b91b815284515f906109a4816009850160208a0161071d565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516109d581601a840160208a0161071d565b6a11161134b6b0b3b2911d1160a91b601a92909101918201528451610a0181602584016020890161071d565b721116113b30b63ab2a232b1b4b6b0b639911d1160691b602592909101918201528351610a3581603884016020880161071d565b61227d60f01b60389290910191820152603a019695505050505050565b5f60208284031215610a62575f80fd5b5051919050565b683d913730b6b2911d1160b91b815286515f90610a8d816009850160208c0161071d565b701116113232b9b1b934b83a34b7b7111d1160791b6009918401918201528751610abe81601a840160208c0161071d565b6a11161134b6b0b3b2911d1160a91b601a92909101918201528651610aea816025840160208b0161071d565b6c1116113130b630b731b2911d1160991b602592909101918201528551610b18816032840160208a0161071d565b6911161139b637ba111d1160b11b603292909101918201528451610b4381603c84016020890161071d565b610b80610b73610b6d603c848601016e111611383937b832b93a34b2b9911d60891b8152600f0190565b87610771565b607d60f81b815260010190565b9a9950505050505050505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156103cc576103cc610b8e565b5f82610bcf57634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176103cc576103cc610b8e565b5f8351610bfc81846020880161071d565b61202360f01b9083019081528351610c1b81600284016020880161071d565b0160020194935050505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212205cdc7e2e734a4a48ba9a220034d430a43511a5a3b20d54f2962da169cac912cd64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9D DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C037F8A EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x725FA09C EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x894B4C2E EQ PUSH2 0x74 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0x11D JUMP JUMPDEST PUSH2 0x56 PUSH2 0x82 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF7 PUSH2 0xA0 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0xB7 DUP6 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x5B5D PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 CALLER SWAP1 POP PUSH2 0x222 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x161 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x188 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x20F DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3E7E8669 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLER PUSH2 0x342 PUSH2 0x256 DUP5 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x1398FEE1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH2 0x2E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x9CC7F708 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131F9F3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH2 0x314 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x263F3E7E SWAP1 PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x7B7D PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9C3DD87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 CALLER SWAP1 PUSH4 0x9C3DD87 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3CC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0x3EF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC28 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x426 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x431 SWAP1 PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x449 JUMPI PUSH2 0x449 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x4DF JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x484 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x4FB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x50E JUMPI PUSH2 0x516 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x52D DUP4 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54C PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x580 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x615 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x61E DUP4 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x66D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x699 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x6B7 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x6CF JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x6E3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x6F5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3CC JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x716 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x737 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x71F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x75D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH2 0x782 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x71D JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x7B0 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x7E1 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x80D DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x71D JUMP JUMPDEST PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x83D DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x34 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x35 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0x890 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x925 JUMPI PUSH2 0x925 PUSH2 0x89D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x93D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x94E DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x969 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x979 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x9A4 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x9D5 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xA01 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x71D JUMP JUMPDEST PUSH19 0x1116113B30B63AB2A232B1B4B6B0B639911D11 PUSH1 0x69 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xA35 DUP2 PUSH1 0x38 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x38 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x3A ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP7 MLOAD PUSH0 SWAP1 PUSH2 0xA8D DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x71D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP8 MLOAD PUSH2 0xABE DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x71D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0xAEA DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x71D JUMP JUMPDEST PUSH13 0x1116113130B630B731B2911D11 PUSH1 0x99 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0xB18 DUP2 PUSH1 0x32 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH10 0x11161139B637BA111D11 PUSH1 0xB1 SHL PUSH1 0x32 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xB43 DUP2 PUSH1 0x3C DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x71D JUMP JUMPDEST PUSH2 0xB80 PUSH2 0xB73 PUSH2 0xB6D PUSH1 0x3C DUP5 DUP7 ADD ADD PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL DUP2 MSTORE PUSH1 0xF ADD SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3CC JUMPI PUSH2 0x3CC PUSH2 0xB8E JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBCF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3CC JUMPI PUSH2 0x3CC PUSH2 0xB8E JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xBFC DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x2023 PUSH1 0xF0 SHL SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0xC1B DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST ADD PUSH1 0x2 ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE BLOBHASH BLOBBASEFEE 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 TLOAD 0xDC PUSH31 0x2E734A4A48BA9A220034D430A43511A5A3B20D54F2962DA169CAC912CD6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "260:4663:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_contractDescription_1910": {
									"entryPoint": null,
									"id": 1910,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_contractImage_1918": {
									"entryPoint": null,
									"id": 1918,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_slotDescription_1942": {
									"entryPoint": null,
									"id": 1942,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_slotImage_1963": {
									"entryPoint": 873,
									"id": 1963,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_slotName_1930": {
									"entryPoint": null,
									"id": 1930,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_slotProperties_1975": {
									"entryPoint": null,
									"id": 1975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenDescription_2012": {
									"entryPoint": null,
									"id": 2012,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenImage_2022": {
									"entryPoint": null,
									"id": 2022,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenName_2000": {
									"entryPoint": 1457,
									"id": 2000,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_tokenProperties_2034": {
									"entryPoint": null,
									"id": 2034,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@constructContractURI_1800": {
									"entryPoint": 285,
									"id": 1800,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@constructSlotURI_1840": {
									"entryPoint": 135,
									"id": 1840,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@constructTokenURI_1902": {
									"entryPoint": 583,
									"id": 1902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@encode_45": {
									"entryPoint": 978,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1187": {
									"entryPoint": 1583,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_114": {
									"entryPoint": 1313,
									"id": 114,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_8e2f": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_stringliteral_fd1e": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_string_memory_ptr_t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d_t_string_memory_ptr_t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140_t_string_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2665,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10744:11",
										"nodeType": "YulBlock",
										"src": "0:10744:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:11",
													"nodeType": "YulBlock",
													"src": "84:110:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:11",
																"nodeType": "YulBlock",
																"src": "130:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:11",
																					"nodeType": "YulLiteral",
																					"src": "139:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:11",
																					"nodeType": "YulLiteral",
																					"src": "142:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:11"
																			},
																			"nativeSrc": "132:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:11"
																		},
																		"nativeSrc": "132:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:11"
																		},
																		"nativeSrc": "101:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:11",
																		"nodeType": "YulLiteral",
																		"src": "126:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:11"
																},
																"nativeSrc": "97:32:11",
																"nodeType": "YulFunctionCall",
																"src": "97:32:11"
															},
															"nativeSrc": "94:52:11",
															"nodeType": "YulIf",
															"src": "94:52:11"
														},
														{
															"nativeSrc": "155:33:11",
															"nodeType": "YulAssignment",
															"src": "155:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:11"
																},
																"nativeSrc": "165:23:11",
																"nodeType": "YulFunctionCall",
																"src": "165:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:11",
														"nodeType": "YulTypedName",
														"src": "50:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:11",
														"nodeType": "YulTypedName",
														"src": "61:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:11",
														"nodeType": "YulTypedName",
														"src": "73:6:11",
														"type": ""
													}
												],
												"src": "14:180:11"
											},
											{
												"body": {
													"nativeSrc": "265:184:11",
													"nodeType": "YulBlock",
													"src": "265:184:11",
													"statements": [
														{
															"nativeSrc": "275:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:11",
																"nodeType": "YulLiteral",
																"src": "284:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:11",
																	"nodeType": "YulTypedName",
																	"src": "279:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:63:11",
																"nodeType": "YulBlock",
																"src": "344:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "369:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "369:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "374:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "374:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:11"
																					},
																					"nativeSrc": "365:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "365:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "388:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "388:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "393:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "393:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "384:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "384:3:11"
																							},
																							"nativeSrc": "384:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "384:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "378:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "378:5:11"
																					},
																					"nativeSrc": "378:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "378:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:11"
																			},
																			"nativeSrc": "358:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "358:39:11"
																		},
																		"nativeSrc": "358:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:11"
																},
																"nativeSrc": "302:13:11",
																"nodeType": "YulFunctionCall",
																"src": "302:13:11"
															},
															"nativeSrc": "294:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:11",
																"nodeType": "YulBlock",
																"src": "316:19:11",
																"statements": [
																	{
																		"nativeSrc": "318:15:11",
																		"nodeType": "YulAssignment",
																		"src": "318:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "330:2:11",
																					"nodeType": "YulLiteral",
																					"src": "330:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:11"
																			},
																			"nativeSrc": "323:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:11",
																"nodeType": "YulBlock",
																"src": "298:3:11",
																"statements": []
															},
															"src": "294:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "427:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "427:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "432:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "432:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "423:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:11"
																		},
																		"nativeSrc": "423:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "423:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "441:1:11",
																		"nodeType": "YulLiteral",
																		"src": "441:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "416:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:11"
																},
																"nativeSrc": "416:27:11",
																"nodeType": "YulFunctionCall",
																"src": "416:27:11"
															},
															"nativeSrc": "416:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "416:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "199:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "243:3:11",
														"nodeType": "YulTypedName",
														"src": "243:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "248:3:11",
														"nodeType": "YulTypedName",
														"src": "248:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "253:6:11",
														"nodeType": "YulTypedName",
														"src": "253:6:11",
														"type": ""
													}
												],
												"src": "199:250:11"
											},
											{
												"body": {
													"nativeSrc": "575:275:11",
													"nodeType": "YulBlock",
													"src": "575:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "592:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "592:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "603:2:11",
																		"nodeType": "YulLiteral",
																		"src": "603:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "585:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:11"
																},
																"nativeSrc": "585:21:11",
																"nodeType": "YulFunctionCall",
																"src": "585:21:11"
															},
															"nativeSrc": "585:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "585:21:11"
														},
														{
															"nativeSrc": "615:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "615:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "635:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "635:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "629:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "629:5:11"
																},
																"nativeSrc": "629:13:11",
																"nodeType": "YulFunctionCall",
																"src": "629:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "619:6:11",
																	"nodeType": "YulTypedName",
																	"src": "619:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "662:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "662:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "673:2:11",
																				"nodeType": "YulLiteral",
																				"src": "673:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "658:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:11"
																		},
																		"nativeSrc": "658:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "658:18:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "678:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "651:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:11"
																},
																"nativeSrc": "651:34:11",
																"nodeType": "YulFunctionCall",
																"src": "651:34:11"
															},
															"nativeSrc": "651:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "651:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "733:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:2:11",
																				"nodeType": "YulLiteral",
																				"src": "741:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "729:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:11"
																		},
																		"nativeSrc": "729:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "729:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "750:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "761:2:11",
																				"nodeType": "YulLiteral",
																				"src": "761:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "746:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "746:3:11"
																		},
																		"nativeSrc": "746:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "746:18:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "694:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "694:34:11"
																},
																"nativeSrc": "694:79:11",
																"nodeType": "YulFunctionCall",
																"src": "694:79:11"
															},
															"nativeSrc": "694:79:11",
															"nodeType": "YulExpressionStatement",
															"src": "694:79:11"
														},
														{
															"nativeSrc": "782:62:11",
															"nodeType": "YulAssignment",
															"src": "782:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "817:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "817:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "825:2:11",
																								"nodeType": "YulLiteral",
																								"src": "825:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "813:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "813:3:11"
																						},
																						"nativeSrc": "813:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "813:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "834:2:11",
																								"nodeType": "YulLiteral",
																								"src": "834:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "830:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "830:3:11"
																						},
																						"nativeSrc": "830:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "830:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "809:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:11"
																				},
																				"nativeSrc": "809:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "809:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:11"
																		},
																		"nativeSrc": "794:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "794:45:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "841:2:11",
																		"nodeType": "YulLiteral",
																		"src": "841:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "790:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "790:3:11"
																},
																"nativeSrc": "790:54:11",
																"nodeType": "YulFunctionCall",
																"src": "790:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "782:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "782:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "454:396:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "544:9:11",
														"nodeType": "YulTypedName",
														"src": "544:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "555:6:11",
														"nodeType": "YulTypedName",
														"src": "555:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "566:4:11",
														"nodeType": "YulTypedName",
														"src": "566:4:11",
														"type": ""
													}
												],
												"src": "454:396:11"
											},
											{
												"body": {
													"nativeSrc": "905:148:11",
													"nodeType": "YulBlock",
													"src": "905:148:11",
													"statements": [
														{
															"nativeSrc": "915:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "935:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "929:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:11"
																},
																"nativeSrc": "929:12:11",
																"nodeType": "YulFunctionCall",
																"src": "929:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "919:6:11",
																	"nodeType": "YulTypedName",
																	"src": "919:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "996:4:11",
																				"nodeType": "YulLiteral",
																				"src": "996:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:11"
																		},
																		"nativeSrc": "985:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "985:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1003:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1003:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1008:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1008:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "950:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "950:34:11"
																},
																"nativeSrc": "950:65:11",
																"nodeType": "YulFunctionCall",
																"src": "950:65:11"
															},
															"nativeSrc": "950:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "950:65:11"
														},
														{
															"nativeSrc": "1024:23:11",
															"nodeType": "YulAssignment",
															"src": "1024:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1035:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1035:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1040:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1040:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1031:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:11"
																},
																"nativeSrc": "1031:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1031:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1024:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1024:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "855:198:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "882:5:11",
														"nodeType": "YulTypedName",
														"src": "882:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "889:3:11",
														"nodeType": "YulTypedName",
														"src": "889:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "897:3:11",
														"nodeType": "YulTypedName",
														"src": "897:3:11",
														"type": ""
													}
												],
												"src": "855:198:11"
											},
											{
												"body": {
													"nativeSrc": "1113:99:11",
													"nodeType": "YulBlock",
													"src": "1113:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1130:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1139:3:11",
																				"nodeType": "YulLiteral",
																				"src": "1139:3:11",
																				"type": "",
																				"value": "137"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1144:32:11",
																				"nodeType": "YulLiteral",
																				"src": "1144:32:11",
																				"type": "",
																				"value": "0x111611383937b832b93a34b2b9911d"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1135:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1135:3:11"
																		},
																		"nativeSrc": "1135:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1135:42:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1123:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:11"
																},
																"nativeSrc": "1123:55:11",
																"nodeType": "YulFunctionCall",
																"src": "1123:55:11"
															},
															"nativeSrc": "1123:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "1123:55:11"
														},
														{
															"nativeSrc": "1187:19:11",
															"nodeType": "YulAssignment",
															"src": "1187:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1198:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1198:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1203:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1194:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1194:3:11"
																},
																"nativeSrc": "1194:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1194:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1187:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1187:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_stringliteral_fd1e",
												"nativeSrc": "1058:154:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1097:3:11",
														"nodeType": "YulTypedName",
														"src": "1097:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1105:3:11",
														"nodeType": "YulTypedName",
														"src": "1105:3:11",
														"type": ""
													}
												],
												"src": "1058:154:11"
											},
											{
												"body": {
													"nativeSrc": "1272:59:11",
													"nodeType": "YulBlock",
													"src": "1272:59:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1289:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1289:3:11"
																	},
																	{
																		"hexValue": "7d",
																		"kind": "string",
																		"nativeSrc": "1294:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1294:3:11",
																		"type": "",
																		"value": "}"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1282:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1282:6:11"
																},
																"nativeSrc": "1282:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1282:16:11"
															},
															"nativeSrc": "1282:16:11",
															"nodeType": "YulExpressionStatement",
															"src": "1282:16:11"
														},
														{
															"nativeSrc": "1307:18:11",
															"nodeType": "YulAssignment",
															"src": "1307:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1318:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1318:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1323:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1323:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1314:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1314:3:11"
																},
																"nativeSrc": "1314:11:11",
																"nodeType": "YulFunctionCall",
																"src": "1314:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1307:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_stringliteral_8e2f",
												"nativeSrc": "1217:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1256:3:11",
														"nodeType": "YulTypedName",
														"src": "1256:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1264:3:11",
														"nodeType": "YulTypedName",
														"src": "1264:3:11",
														"type": ""
													}
												],
												"src": "1217:114:11"
											},
											{
												"body": {
													"nativeSrc": "2122:961:11",
													"nodeType": "YulBlock",
													"src": "2122:961:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2139:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2139:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2148:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2148:3:11",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2153:20:11",
																				"nodeType": "YulLiteral",
																				"src": "2153:20:11",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2144:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:11"
																		},
																		"nativeSrc": "2144:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2144:30:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																},
																"nativeSrc": "2132:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2132:43:11"
															},
															"nativeSrc": "2132:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "2132:43:11"
														},
														{
															"nativeSrc": "2184:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2184:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2204:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2204:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2198:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2198:5:11"
																},
																"nativeSrc": "2198:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2198:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2188:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2188:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2267:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2267:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2255:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:11"
																		},
																		"nativeSrc": "2255:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2278:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2278:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2283:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2283:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2274:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2274:3:11"
																		},
																		"nativeSrc": "2274:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:11:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2287:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2287:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2220:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2220:34:11"
																},
																"nativeSrc": "2220:74:11",
																"nodeType": "YulFunctionCall",
																"src": "2220:74:11"
															},
															"nativeSrc": "2220:74:11",
															"nodeType": "YulExpressionStatement",
															"src": "2220:74:11"
														},
														{
															"nativeSrc": "2303:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2303:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2317:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2317:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2322:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2313:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:11"
																},
																"nativeSrc": "2313:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2313:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2307:2:11",
																	"nodeType": "YulTypedName",
																	"src": "2307:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2349:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2349:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2353:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2353:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2345:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:11"
																		},
																		"nativeSrc": "2345:10:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2345:10:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2361:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2361:3:11",
																				"type": "",
																				"value": "121"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2366:36:11",
																				"nodeType": "YulLiteral",
																				"src": "2366:36:11",
																				"type": "",
																				"value": "0x1116113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:11"
																		},
																		"nativeSrc": "2357:46:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2338:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2338:6:11"
																},
																"nativeSrc": "2338:66:11",
																"nodeType": "YulFunctionCall",
																"src": "2338:66:11"
															},
															"nativeSrc": "2338:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "2338:66:11"
														},
														{
															"nativeSrc": "2413:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2413:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2435:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2429:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2429:5:11"
																},
																"nativeSrc": "2429:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2429:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "2417:8:11",
																	"nodeType": "YulTypedName",
																	"src": "2417:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2490:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2498:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2498:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:11"
																		},
																		"nativeSrc": "2486:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2509:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2509:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2513:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2513:2:11",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2505:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2505:3:11"
																		},
																		"nativeSrc": "2505:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2505:11:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "2518:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2518:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2451:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2451:34:11"
																},
																"nativeSrc": "2451:76:11",
																"nodeType": "YulFunctionCall",
																"src": "2451:76:11"
															},
															"nativeSrc": "2451:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "2451:76:11"
														},
														{
															"nativeSrc": "2536:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2536:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2550:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2550:2:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "2554:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2554:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2546:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:11"
																},
																"nativeSrc": "2546:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2546:17:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2540:2:11",
																	"nodeType": "YulTypedName",
																	"src": "2540:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "2583:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2583:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2587:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2587:2:11",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2579:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:11"
																		},
																		"nativeSrc": "2579:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2579:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2596:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2596:3:11",
																				"type": "",
																				"value": "169"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2601:24:11",
																				"nodeType": "YulLiteral",
																				"src": "2601:24:11",
																				"type": "",
																				"value": "0x11161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2592:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:11"
																		},
																		"nativeSrc": "2592:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2592:34:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2572:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:11"
																},
																"nativeSrc": "2572:55:11",
																"nodeType": "YulFunctionCall",
																"src": "2572:55:11"
															},
															"nativeSrc": "2572:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "2572:55:11"
														},
														{
															"nativeSrc": "2636:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2636:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2658:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2652:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2652:5:11"
																},
																"nativeSrc": "2652:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2652:13:11"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nativeSrc": "2640:8:11",
																	"nodeType": "YulTypedName",
																	"src": "2640:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "2713:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2713:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2721:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2721:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2709:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:11"
																		},
																		"nativeSrc": "2709:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2709:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "2732:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2732:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2736:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:11",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2728:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:11"
																		},
																		"nativeSrc": "2728:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2728:11:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "2741:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2741:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2674:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2674:34:11"
																},
																"nativeSrc": "2674:76:11",
																"nodeType": "YulFunctionCall",
																"src": "2674:76:11"
															},
															"nativeSrc": "2674:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "2674:76:11"
														},
														{
															"nativeSrc": "2759:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2759:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "2773:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2773:2:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "2777:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2777:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2769:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2769:3:11"
																},
																"nativeSrc": "2769:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2769:17:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "2763:2:11",
																	"nodeType": "YulTypedName",
																	"src": "2763:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "2806:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2806:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2810:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2810:2:11",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2802:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:11"
																		},
																		"nativeSrc": "2802:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2819:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2819:3:11",
																				"type": "",
																				"value": "137"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2824:32:11",
																				"nodeType": "YulLiteral",
																				"src": "2824:32:11",
																				"type": "",
																				"value": "0x111611383937b832b93a34b2b9911d"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2815:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:11"
																		},
																		"nativeSrc": "2815:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:42:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:11"
																},
																"nativeSrc": "2795:63:11",
																"nodeType": "YulFunctionCall",
																"src": "2795:63:11"
															},
															"nativeSrc": "2795:63:11",
															"nodeType": "YulExpressionStatement",
															"src": "2795:63:11"
														},
														{
															"nativeSrc": "2867:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2867:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2889:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2889:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2883:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2883:5:11"
																},
																"nativeSrc": "2883:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2883:13:11"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nativeSrc": "2871:8:11",
																	"nodeType": "YulTypedName",
																	"src": "2871:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "2944:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2944:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2952:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2952:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2940:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:11"
																		},
																		"nativeSrc": "2940:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2940:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "2963:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2963:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2967:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:11",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2959:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:11"
																		},
																		"nativeSrc": "2959:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:11:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "2972:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2972:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2905:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2905:34:11"
																},
																"nativeSrc": "2905:76:11",
																"nodeType": "YulFunctionCall",
																"src": "2905:76:11"
															},
															"nativeSrc": "2905:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "2905:76:11"
														},
														{
															"nativeSrc": "2990:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2990:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3004:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3004:2:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "3008:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "3008:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3000:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:11"
																},
																"nativeSrc": "3000:17:11",
																"nodeType": "YulFunctionCall",
																"src": "3000:17:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "2994:2:11",
																	"nodeType": "YulTypedName",
																	"src": "2994:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "3037:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3037:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3041:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3041:2:11",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3033:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:11"
																		},
																		"nativeSrc": "3033:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3033:11:11"
																	},
																	{
																		"hexValue": "7d",
																		"kind": "string",
																		"nativeSrc": "3046:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3046:3:11",
																		"type": "",
																		"value": "}"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3026:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:11"
																},
																"nativeSrc": "3026:24:11",
																"nodeType": "YulFunctionCall",
																"src": "3026:24:11"
															},
															"nativeSrc": "3026:24:11",
															"nodeType": "YulExpressionStatement",
															"src": "3026:24:11"
														},
														{
															"nativeSrc": "3059:18:11",
															"nodeType": "YulAssignment",
															"src": "3059:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "3070:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3070:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:11",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3066:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:11"
																},
																"nativeSrc": "3066:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3066:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1336:1747:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2074:3:11",
														"nodeType": "YulTypedName",
														"src": "2074:3:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2079:6:11",
														"nodeType": "YulTypedName",
														"src": "2079:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2087:6:11",
														"nodeType": "YulTypedName",
														"src": "2087:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2095:6:11",
														"nodeType": "YulTypedName",
														"src": "2095:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2103:6:11",
														"nodeType": "YulTypedName",
														"src": "2103:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2114:3:11",
														"nodeType": "YulTypedName",
														"src": "2114:3:11",
														"type": ""
													}
												],
												"src": "1336:1747:11"
											},
											{
												"body": {
													"nativeSrc": "3328:221:11",
													"nodeType": "YulBlock",
													"src": "3328:221:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3345:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:11"
																	},
																	{
																		"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																		"kind": "string",
																		"nativeSrc": "3350:31:11",
																		"nodeType": "YulLiteral",
																		"src": "3350:31:11",
																		"type": "",
																		"value": "data:application/json;base64,"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3338:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3338:6:11"
																},
																"nativeSrc": "3338:44:11",
																"nodeType": "YulFunctionCall",
																"src": "3338:44:11"
															},
															"nativeSrc": "3338:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "3338:44:11"
														},
														{
															"nativeSrc": "3391:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3391:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3411:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3405:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3405:5:11"
																},
																"nativeSrc": "3405:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3405:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3395:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3395:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3466:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3466:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3474:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3474:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3462:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3462:3:11"
																		},
																		"nativeSrc": "3462:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3462:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3485:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3485:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3490:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3490:2:11",
																				"type": "",
																				"value": "29"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3481:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:11"
																		},
																		"nativeSrc": "3481:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:12:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3495:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3427:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "3427:34:11"
																},
																"nativeSrc": "3427:75:11",
																"nodeType": "YulFunctionCall",
																"src": "3427:75:11"
															},
															"nativeSrc": "3427:75:11",
															"nodeType": "YulExpressionStatement",
															"src": "3427:75:11"
														},
														{
															"nativeSrc": "3511:32:11",
															"nodeType": "YulAssignment",
															"src": "3511:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3526:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3526:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3531:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3531:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3522:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3522:3:11"
																		},
																		"nativeSrc": "3522:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3522:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3518:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3518:3:11"
																},
																"nativeSrc": "3518:25:11",
																"nodeType": "YulFunctionCall",
																"src": "3518:25:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3511:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3088:461:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3304:3:11",
														"nodeType": "YulTypedName",
														"src": "3304:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3309:6:11",
														"nodeType": "YulTypedName",
														"src": "3309:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3320:3:11",
														"nodeType": "YulTypedName",
														"src": "3320:3:11",
														"type": ""
													}
												],
												"src": "3088:461:11"
											},
											{
												"body": {
													"nativeSrc": "3586:95:11",
													"nodeType": "YulBlock",
													"src": "3586:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3603:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3603:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3610:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3610:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3615:10:11",
																				"nodeType": "YulLiteral",
																				"src": "3615:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3606:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:11"
																		},
																		"nativeSrc": "3606:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3596:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:11"
																},
																"nativeSrc": "3596:31:11",
																"nodeType": "YulFunctionCall",
																"src": "3596:31:11"
															},
															"nativeSrc": "3596:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "3596:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3643:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3643:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3646:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3646:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3636:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:11"
																},
																"nativeSrc": "3636:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3636:15:11"
															},
															"nativeSrc": "3636:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3636:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3667:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3667:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3670:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3660:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:11"
																},
																"nativeSrc": "3660:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3660:15:11"
															},
															"nativeSrc": "3660:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3660:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3554:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3554:127:11"
											},
											{
												"body": {
													"nativeSrc": "3777:806:11",
													"nodeType": "YulBlock",
													"src": "3777:806:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3823:16:11",
																"nodeType": "YulBlock",
																"src": "3823:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3832:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3832:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3835:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3835:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3825:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3825:6:11"
																			},
																			"nativeSrc": "3825:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3825:12:11"
																		},
																		"nativeSrc": "3825:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3825:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3798:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3798:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3807:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3807:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3794:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3794:3:11"
																		},
																		"nativeSrc": "3794:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3794:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3819:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3819:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3790:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3790:3:11"
																},
																"nativeSrc": "3790:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3790:32:11"
															},
															"nativeSrc": "3787:52:11",
															"nodeType": "YulIf",
															"src": "3787:52:11"
														},
														{
															"nativeSrc": "3848:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3848:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3868:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3868:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3862:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3862:5:11"
																},
																"nativeSrc": "3862:16:11",
																"nodeType": "YulFunctionCall",
																"src": "3862:16:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3852:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3852:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3887:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3887:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3897:18:11",
																"nodeType": "YulLiteral",
																"src": "3897:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3891:2:11",
																	"nodeType": "YulTypedName",
																	"src": "3891:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3942:16:11",
																"nodeType": "YulBlock",
																"src": "3942:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3951:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3951:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3954:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3954:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3944:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3944:6:11"
																			},
																			"nativeSrc": "3944:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3944:12:11"
																		},
																		"nativeSrc": "3944:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3944:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3930:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3930:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3938:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3938:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3927:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:11"
																},
																"nativeSrc": "3927:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3927:14:11"
															},
															"nativeSrc": "3924:34:11",
															"nodeType": "YulIf",
															"src": "3924:34:11"
														},
														{
															"nativeSrc": "3967:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3967:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3981:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3981:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3992:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3992:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3977:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:11"
																},
																"nativeSrc": "3977:22:11",
																"nodeType": "YulFunctionCall",
																"src": "3977:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3971:2:11",
																	"nodeType": "YulTypedName",
																	"src": "3971:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4047:16:11",
																"nodeType": "YulBlock",
																"src": "4047:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4056:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4056:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4059:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4059:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4049:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4049:6:11"
																			},
																			"nativeSrc": "4049:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4049:12:11"
																		},
																		"nativeSrc": "4049:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4049:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4026:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4026:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4030:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4030:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4022:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4022:3:11"
																				},
																				"nativeSrc": "4022:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4022:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4037:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4037:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4018:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:11"
																		},
																		"nativeSrc": "4018:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4018:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:11"
																},
																"nativeSrc": "4011:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4011:35:11"
															},
															"nativeSrc": "4008:55:11",
															"nodeType": "YulIf",
															"src": "4008:55:11"
														},
														{
															"nativeSrc": "4072:19:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4072:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4088:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4088:2:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4082:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4082:5:11"
																},
																"nativeSrc": "4082:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4082:9:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "4076:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4076:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4114:22:11",
																"nodeType": "YulBlock",
																"src": "4114:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4116:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4116:16:11"
																			},
																			"nativeSrc": "4116:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4116:18:11"
																		},
																		"nativeSrc": "4116:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4116:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4106:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4106:2:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4110:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4110:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4103:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4103:2:11"
																},
																"nativeSrc": "4103:10:11",
																"nodeType": "YulFunctionCall",
																"src": "4103:10:11"
															},
															"nativeSrc": "4100:36:11",
															"nodeType": "YulIf",
															"src": "4100:36:11"
														},
														{
															"nativeSrc": "4145:17:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4145:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4159:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4155:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4155:3:11"
																},
																"nativeSrc": "4155:7:11",
																"nodeType": "YulFunctionCall",
																"src": "4155:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4149:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4149:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4171:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4171:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4191:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4191:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4185:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4185:5:11"
																},
																"nativeSrc": "4185:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4185:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4175:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4175:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4203:71:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4203:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4225:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4225:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4249:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "4249:2:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4253:4:11",
																										"nodeType": "YulLiteral",
																										"src": "4253:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4245:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4245:3:11"
																								},
																								"nativeSrc": "4245:13:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4245:13:11"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4260:2:11",
																								"nodeType": "YulIdentifier",
																								"src": "4260:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4241:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4241:3:11"
																						},
																						"nativeSrc": "4241:22:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4241:22:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4265:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4265:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4237:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4237:3:11"
																				},
																				"nativeSrc": "4237:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4237:31:11"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4270:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4270:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4233:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:11"
																		},
																		"nativeSrc": "4233:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4233:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4221:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4221:3:11"
																},
																"nativeSrc": "4221:53:11",
																"nodeType": "YulFunctionCall",
																"src": "4221:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4207:10:11",
																	"nodeType": "YulTypedName",
																	"src": "4207:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4333:22:11",
																"nodeType": "YulBlock",
																"src": "4333:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4335:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4335:16:11"
																			},
																			"nativeSrc": "4335:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4335:18:11"
																		},
																		"nativeSrc": "4335:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4335:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4292:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4292:10:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4304:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4304:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4289:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4289:2:11"
																		},
																		"nativeSrc": "4289:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4289:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4312:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4312:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4324:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4324:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4309:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4309:2:11"
																		},
																		"nativeSrc": "4309:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4309:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4286:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4286:2:11"
																},
																"nativeSrc": "4286:46:11",
																"nodeType": "YulFunctionCall",
																"src": "4286:46:11"
															},
															"nativeSrc": "4283:72:11",
															"nodeType": "YulIf",
															"src": "4283:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4371:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4371:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4375:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "4375:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4364:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4364:6:11"
																},
																"nativeSrc": "4364:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4364:22:11"
															},
															"nativeSrc": "4364:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "4364:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4402:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4402:6:11"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4410:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4410:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4395:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:11"
																},
																"nativeSrc": "4395:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4395:18:11"
															},
															"nativeSrc": "4395:18:11",
															"nodeType": "YulExpressionStatement",
															"src": "4395:18:11"
														},
														{
															"body": {
																"nativeSrc": "4459:16:11",
																"nodeType": "YulBlock",
																"src": "4459:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4468:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4468:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4471:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4471:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4461:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4461:6:11"
																			},
																			"nativeSrc": "4461:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4461:12:11"
																		},
																		"nativeSrc": "4461:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4461:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4436:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4436:2:11"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4440:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4440:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4432:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4432:3:11"
																				},
																				"nativeSrc": "4432:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4432:11:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4445:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4445:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4428:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:11"
																		},
																		"nativeSrc": "4428:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4428:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4450:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4450:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4425:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4425:2:11"
																},
																"nativeSrc": "4425:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4425:33:11"
															},
															"nativeSrc": "4422:53:11",
															"nodeType": "YulIf",
															"src": "4422:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4523:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4523:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4527:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4527:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4519:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4519:3:11"
																		},
																		"nativeSrc": "4519:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4519:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4536:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4536:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4544:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4544:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:11"
																		},
																		"nativeSrc": "4532:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4532:15:11"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4549:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4549:2:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4484:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "4484:34:11"
																},
																"nativeSrc": "4484:68:11",
																"nodeType": "YulFunctionCall",
																"src": "4484:68:11"
															},
															"nativeSrc": "4484:68:11",
															"nodeType": "YulExpressionStatement",
															"src": "4484:68:11"
														},
														{
															"nativeSrc": "4561:16:11",
															"nodeType": "YulAssignment",
															"src": "4561:16:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4571:6:11",
																"nodeType": "YulIdentifier",
																"src": "4571:6:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4561:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "3686:897:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3743:9:11",
														"nodeType": "YulTypedName",
														"src": "3743:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3754:7:11",
														"nodeType": "YulTypedName",
														"src": "3754:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3766:6:11",
														"nodeType": "YulTypedName",
														"src": "3766:6:11",
														"type": ""
													}
												],
												"src": "3686:897:11"
											},
											{
												"body": {
													"nativeSrc": "4667:194:11",
													"nodeType": "YulBlock",
													"src": "4667:194:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4713:16:11",
																"nodeType": "YulBlock",
																"src": "4713:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4722:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4722:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4725:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4725:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4715:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4715:6:11"
																			},
																			"nativeSrc": "4715:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4715:12:11"
																		},
																		"nativeSrc": "4715:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4715:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4688:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4688:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4697:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4684:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:11"
																		},
																		"nativeSrc": "4684:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4684:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4709:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4680:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:11"
																},
																"nativeSrc": "4680:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4680:32:11"
															},
															"nativeSrc": "4677:52:11",
															"nodeType": "YulIf",
															"src": "4677:52:11"
														},
														{
															"nativeSrc": "4738:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4738:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4757:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4757:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4751:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4751:5:11"
																},
																"nativeSrc": "4751:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4751:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4742:5:11",
																	"nodeType": "YulTypedName",
																	"src": "4742:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4815:16:11",
																"nodeType": "YulBlock",
																"src": "4815:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4824:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4827:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4827:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4817:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4817:6:11"
																			},
																			"nativeSrc": "4817:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4817:12:11"
																		},
																		"nativeSrc": "4817:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4817:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4789:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4789:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4800:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4800:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4807:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4807:4:11",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4796:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4796:3:11"
																				},
																				"nativeSrc": "4796:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4796:16:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4786:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4786:2:11"
																		},
																		"nativeSrc": "4786:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4779:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4779:6:11"
																},
																"nativeSrc": "4779:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4779:35:11"
															},
															"nativeSrc": "4776:55:11",
															"nodeType": "YulIf",
															"src": "4776:55:11"
														},
														{
															"nativeSrc": "4840:15:11",
															"nodeType": "YulAssignment",
															"src": "4840:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "4850:5:11",
																"nodeType": "YulIdentifier",
																"src": "4850:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4840:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "4588:273:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4633:9:11",
														"nodeType": "YulTypedName",
														"src": "4633:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4644:7:11",
														"nodeType": "YulTypedName",
														"src": "4644:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4656:6:11",
														"nodeType": "YulTypedName",
														"src": "4656:6:11",
														"type": ""
													}
												],
												"src": "4588:273:11"
											},
											{
												"body": {
													"nativeSrc": "5652:980:11",
													"nodeType": "YulBlock",
													"src": "5652:980:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5669:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5669:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5678:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5678:3:11",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5683:20:11",
																				"nodeType": "YulLiteral",
																				"src": "5683:20:11",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5674:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5674:3:11"
																		},
																		"nativeSrc": "5674:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5674:30:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5662:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:11"
																},
																"nativeSrc": "5662:43:11",
																"nodeType": "YulFunctionCall",
																"src": "5662:43:11"
															},
															"nativeSrc": "5662:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "5662:43:11"
														},
														{
															"nativeSrc": "5714:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5714:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5734:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5734:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5728:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5728:5:11"
																},
																"nativeSrc": "5728:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5728:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5718:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5718:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5789:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5789:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5797:4:11",
																				"nodeType": "YulLiteral",
																				"src": "5797:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5785:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5785:3:11"
																		},
																		"nativeSrc": "5785:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5785:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5808:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5808:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5813:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5813:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5804:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5804:3:11"
																		},
																		"nativeSrc": "5804:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5804:11:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5817:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5817:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5750:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "5750:34:11"
																},
																"nativeSrc": "5750:74:11",
																"nodeType": "YulFunctionCall",
																"src": "5750:74:11"
															},
															"nativeSrc": "5750:74:11",
															"nodeType": "YulExpressionStatement",
															"src": "5750:74:11"
														},
														{
															"nativeSrc": "5833:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5833:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5847:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5847:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5852:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5843:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:11"
																},
																"nativeSrc": "5843:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5843:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5837:2:11",
																	"nodeType": "YulTypedName",
																	"src": "5837:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5879:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "5879:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5883:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5883:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5875:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5875:3:11"
																		},
																		"nativeSrc": "5875:10:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5875:10:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5891:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5891:3:11",
																				"type": "",
																				"value": "121"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5896:36:11",
																				"nodeType": "YulLiteral",
																				"src": "5896:36:11",
																				"type": "",
																				"value": "0x1116113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5887:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:11"
																		},
																		"nativeSrc": "5887:46:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5887:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5868:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5868:6:11"
																},
																"nativeSrc": "5868:66:11",
																"nodeType": "YulFunctionCall",
																"src": "5868:66:11"
															},
															"nativeSrc": "5868:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "5868:66:11"
														},
														{
															"nativeSrc": "5943:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5943:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5965:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5965:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5959:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5959:5:11"
																},
																"nativeSrc": "5959:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5959:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "5947:8:11",
																	"nodeType": "YulTypedName",
																	"src": "5947:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6020:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6020:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6028:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6028:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6016:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6016:3:11"
																		},
																		"nativeSrc": "6016:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6016:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6039:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6039:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6043:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:11",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6035:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:11"
																		},
																		"nativeSrc": "6035:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:11:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6048:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6048:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5981:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "5981:34:11"
																},
																"nativeSrc": "5981:76:11",
																"nodeType": "YulFunctionCall",
																"src": "5981:76:11"
															},
															"nativeSrc": "5981:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "5981:76:11"
														},
														{
															"nativeSrc": "6066:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6066:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6080:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "6080:2:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6084:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6084:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6076:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6076:3:11"
																},
																"nativeSrc": "6076:17:11",
																"nodeType": "YulFunctionCall",
																"src": "6076:17:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6070:2:11",
																	"nodeType": "YulTypedName",
																	"src": "6070:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6113:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6113:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6117:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6117:2:11",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6109:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:11"
																		},
																		"nativeSrc": "6109:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6109:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6126:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6126:3:11",
																				"type": "",
																				"value": "169"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6131:24:11",
																				"nodeType": "YulLiteral",
																				"src": "6131:24:11",
																				"type": "",
																				"value": "0x11161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6122:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6122:3:11"
																		},
																		"nativeSrc": "6122:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6122:34:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6102:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:11"
																},
																"nativeSrc": "6102:55:11",
																"nodeType": "YulFunctionCall",
																"src": "6102:55:11"
															},
															"nativeSrc": "6102:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "6102:55:11"
														},
														{
															"nativeSrc": "6166:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6166:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6188:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6188:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6182:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6182:5:11"
																},
																"nativeSrc": "6182:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6182:13:11"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nativeSrc": "6170:8:11",
																	"nodeType": "YulTypedName",
																	"src": "6170:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6243:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6243:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6251:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6251:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6239:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6239:3:11"
																		},
																		"nativeSrc": "6239:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6239:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6262:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6262:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6266:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6266:2:11",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6258:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6258:3:11"
																		},
																		"nativeSrc": "6258:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:11:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "6271:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6271:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6204:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "6204:34:11"
																},
																"nativeSrc": "6204:76:11",
																"nodeType": "YulFunctionCall",
																"src": "6204:76:11"
															},
															"nativeSrc": "6204:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "6204:76:11"
														},
														{
															"nativeSrc": "6289:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6289:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "6303:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "6303:2:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "6307:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6307:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6299:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:11"
																},
																"nativeSrc": "6299:17:11",
																"nodeType": "YulFunctionCall",
																"src": "6299:17:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "6293:2:11",
																	"nodeType": "YulTypedName",
																	"src": "6293:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "6336:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6336:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6340:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6340:2:11",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6332:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:11"
																		},
																		"nativeSrc": "6332:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6349:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6349:3:11",
																				"type": "",
																				"value": "105"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:40:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:40:11",
																				"type": "",
																				"value": "0x1116113b30b63ab2a232b1b4b6b0b639911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6345:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:11"
																		},
																		"nativeSrc": "6345:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:50:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6325:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:11"
																},
																"nativeSrc": "6325:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6325:71:11"
															},
															"nativeSrc": "6325:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6325:71:11"
														},
														{
															"nativeSrc": "6405:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6405:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6427:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6427:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6421:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6421:5:11"
																},
																"nativeSrc": "6421:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6421:13:11"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nativeSrc": "6409:8:11",
																	"nodeType": "YulTypedName",
																	"src": "6409:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "6482:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6482:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6490:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6490:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6478:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6478:3:11"
																		},
																		"nativeSrc": "6478:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6478:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "6501:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6501:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6505:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6505:2:11",
																				"type": "",
																				"value": "56"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6497:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6497:3:11"
																		},
																		"nativeSrc": "6497:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6497:11:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "6510:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6510:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6443:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "6443:34:11"
																},
																"nativeSrc": "6443:76:11",
																"nodeType": "YulFunctionCall",
																"src": "6443:76:11"
															},
															"nativeSrc": "6443:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "6443:76:11"
														},
														{
															"nativeSrc": "6528:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6528:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "6542:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "6542:2:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "6546:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6546:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6538:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:11"
																},
																"nativeSrc": "6538:17:11",
																"nodeType": "YulFunctionCall",
																"src": "6538:17:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "6532:2:11",
																	"nodeType": "YulTypedName",
																	"src": "6532:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "6575:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6575:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6579:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6579:2:11",
																				"type": "",
																				"value": "56"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6571:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6571:3:11"
																		},
																		"nativeSrc": "6571:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6571:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6588:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6588:3:11",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6593:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6593:4:11",
																				"type": "",
																				"value": "8829"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6584:3:11"
																		},
																		"nativeSrc": "6584:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6584:14:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6564:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:11"
																},
																"nativeSrc": "6564:35:11",
																"nodeType": "YulFunctionCall",
																"src": "6564:35:11"
															},
															"nativeSrc": "6564:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "6564:35:11"
														},
														{
															"nativeSrc": "6608:18:11",
															"nodeType": "YulAssignment",
															"src": "6608:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "6619:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "6619:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6623:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6623:2:11",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6615:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:11"
																},
																"nativeSrc": "6615:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6615:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6608:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6608:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4866:1766:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5604:3:11",
														"nodeType": "YulTypedName",
														"src": "5604:3:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5609:6:11",
														"nodeType": "YulTypedName",
														"src": "5609:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5617:6:11",
														"nodeType": "YulTypedName",
														"src": "5617:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5625:6:11",
														"nodeType": "YulTypedName",
														"src": "5625:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5633:6:11",
														"nodeType": "YulTypedName",
														"src": "5633:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5644:3:11",
														"nodeType": "YulTypedName",
														"src": "5644:3:11",
														"type": ""
													}
												],
												"src": "4866:1766:11"
											},
											{
												"body": {
													"nativeSrc": "6738:76:11",
													"nodeType": "YulBlock",
													"src": "6738:76:11",
													"statements": [
														{
															"nativeSrc": "6748:26:11",
															"nodeType": "YulAssignment",
															"src": "6748:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6760:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6760:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6771:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6756:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:11"
																},
																"nativeSrc": "6756:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6756:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6748:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6790:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6790:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6801:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6801:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6783:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6783:6:11"
																},
																"nativeSrc": "6783:25:11",
																"nodeType": "YulFunctionCall",
																"src": "6783:25:11"
															},
															"nativeSrc": "6783:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "6783:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6637:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6707:9:11",
														"nodeType": "YulTypedName",
														"src": "6707:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6718:6:11",
														"nodeType": "YulTypedName",
														"src": "6718:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6729:4:11",
														"nodeType": "YulTypedName",
														"src": "6729:4:11",
														"type": ""
													}
												],
												"src": "6637:177:11"
											},
											{
												"body": {
													"nativeSrc": "6900:103:11",
													"nodeType": "YulBlock",
													"src": "6900:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6946:16:11",
																"nodeType": "YulBlock",
																"src": "6946:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6955:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6955:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6958:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6958:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6948:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6948:6:11"
																			},
																			"nativeSrc": "6948:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6948:12:11"
																		},
																		"nativeSrc": "6948:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6948:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6921:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6921:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6930:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6930:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6917:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6917:3:11"
																		},
																		"nativeSrc": "6917:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6917:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6942:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6942:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6913:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6913:3:11"
																},
																"nativeSrc": "6913:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6913:32:11"
															},
															"nativeSrc": "6910:52:11",
															"nodeType": "YulIf",
															"src": "6910:52:11"
														},
														{
															"nativeSrc": "6971:26:11",
															"nodeType": "YulAssignment",
															"src": "6971:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6987:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6987:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6981:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6981:5:11"
																},
																"nativeSrc": "6981:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6981:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6971:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6971:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6819:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6866:9:11",
														"nodeType": "YulTypedName",
														"src": "6866:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6877:7:11",
														"nodeType": "YulTypedName",
														"src": "6877:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6889:6:11",
														"nodeType": "YulTypedName",
														"src": "6889:6:11",
														"type": ""
													}
												],
												"src": "6819:184:11"
											},
											{
												"body": {
													"nativeSrc": "8094:1213:11",
													"nodeType": "YulBlock",
													"src": "8094:1213:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8111:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8111:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8120:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8120:3:11",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8125:20:11",
																				"nodeType": "YulLiteral",
																				"src": "8125:20:11",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8116:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8116:3:11"
																		},
																		"nativeSrc": "8116:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8116:30:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8104:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8104:6:11"
																},
																"nativeSrc": "8104:43:11",
																"nodeType": "YulFunctionCall",
																"src": "8104:43:11"
															},
															"nativeSrc": "8104:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "8104:43:11"
														},
														{
															"nativeSrc": "8156:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8156:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8176:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8176:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8170:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8170:5:11"
																},
																"nativeSrc": "8170:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8170:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8160:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8160:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8231:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8231:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8239:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8239:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8227:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8227:3:11"
																		},
																		"nativeSrc": "8227:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8227:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8250:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8250:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8255:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8255:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8246:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8246:3:11"
																		},
																		"nativeSrc": "8246:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8246:11:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8259:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8259:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8192:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "8192:34:11"
																},
																"nativeSrc": "8192:74:11",
																"nodeType": "YulFunctionCall",
																"src": "8192:74:11"
															},
															"nativeSrc": "8192:74:11",
															"nodeType": "YulExpressionStatement",
															"src": "8192:74:11"
														},
														{
															"nativeSrc": "8275:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8275:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8289:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8289:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8294:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8294:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8285:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:11"
																},
																"nativeSrc": "8285:16:11",
																"nodeType": "YulFunctionCall",
																"src": "8285:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8279:2:11",
																	"nodeType": "YulTypedName",
																	"src": "8279:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8321:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8321:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8325:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8325:1:11",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8317:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:11"
																		},
																		"nativeSrc": "8317:10:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:10:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8333:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8333:3:11",
																				"type": "",
																				"value": "121"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8338:36:11",
																				"nodeType": "YulLiteral",
																				"src": "8338:36:11",
																				"type": "",
																				"value": "0x1116113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8329:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8329:3:11"
																		},
																		"nativeSrc": "8329:46:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8329:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8310:6:11"
																},
																"nativeSrc": "8310:66:11",
																"nodeType": "YulFunctionCall",
																"src": "8310:66:11"
															},
															"nativeSrc": "8310:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "8310:66:11"
														},
														{
															"nativeSrc": "8385:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8385:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8407:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8407:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8401:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8401:5:11"
																},
																"nativeSrc": "8401:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8401:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "8389:8:11",
																	"nodeType": "YulTypedName",
																	"src": "8389:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8462:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8462:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8470:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8470:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8458:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8458:3:11"
																		},
																		"nativeSrc": "8458:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8458:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8481:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8481:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8485:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8485:2:11",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8477:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8477:3:11"
																		},
																		"nativeSrc": "8477:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8477:11:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "8490:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8490:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8423:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "8423:34:11"
																},
																"nativeSrc": "8423:76:11",
																"nodeType": "YulFunctionCall",
																"src": "8423:76:11"
															},
															"nativeSrc": "8423:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "8423:76:11"
														},
														{
															"nativeSrc": "8508:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8508:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8522:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "8522:2:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "8526:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8526:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8518:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8518:3:11"
																},
																"nativeSrc": "8518:17:11",
																"nodeType": "YulFunctionCall",
																"src": "8518:17:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "8512:2:11",
																	"nodeType": "YulTypedName",
																	"src": "8512:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "8555:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8555:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8559:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8559:2:11",
																				"type": "",
																				"value": "26"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8551:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:11"
																		},
																		"nativeSrc": "8551:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8551:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8568:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8568:3:11",
																				"type": "",
																				"value": "169"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8573:24:11",
																				"nodeType": "YulLiteral",
																				"src": "8573:24:11",
																				"type": "",
																				"value": "0x11161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8564:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8564:3:11"
																		},
																		"nativeSrc": "8564:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8564:34:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:11"
																},
																"nativeSrc": "8544:55:11",
																"nodeType": "YulFunctionCall",
																"src": "8544:55:11"
															},
															"nativeSrc": "8544:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "8544:55:11"
														},
														{
															"nativeSrc": "8608:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8608:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8630:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8630:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8624:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8624:5:11"
																},
																"nativeSrc": "8624:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8624:13:11"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nativeSrc": "8612:8:11",
																	"nodeType": "YulTypedName",
																	"src": "8612:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8685:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8685:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8693:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8693:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8681:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8681:3:11"
																		},
																		"nativeSrc": "8681:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8681:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "8704:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8704:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8708:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8708:2:11",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8700:3:11"
																		},
																		"nativeSrc": "8700:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8700:11:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "8713:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8713:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8646:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "8646:34:11"
																},
																"nativeSrc": "8646:76:11",
																"nodeType": "YulFunctionCall",
																"src": "8646:76:11"
															},
															"nativeSrc": "8646:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "8646:76:11"
														},
														{
															"nativeSrc": "8731:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8731:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "8745:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "8745:2:11"
																	},
																	{
																		"name": "length_2",
																		"nativeSrc": "8749:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8749:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8741:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8741:3:11"
																},
																"nativeSrc": "8741:17:11",
																"nodeType": "YulFunctionCall",
																"src": "8741:17:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "8735:2:11",
																	"nodeType": "YulTypedName",
																	"src": "8735:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "8778:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8778:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8782:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8782:2:11",
																				"type": "",
																				"value": "37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8774:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8774:3:11"
																		},
																		"nativeSrc": "8774:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8774:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8791:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8791:3:11",
																				"type": "",
																				"value": "153"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8796:28:11",
																				"nodeType": "YulLiteral",
																				"src": "8796:28:11",
																				"type": "",
																				"value": "0x1116113130b630b731b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8787:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8787:3:11"
																		},
																		"nativeSrc": "8787:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8787:38:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8767:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8767:6:11"
																},
																"nativeSrc": "8767:59:11",
																"nodeType": "YulFunctionCall",
																"src": "8767:59:11"
															},
															"nativeSrc": "8767:59:11",
															"nodeType": "YulExpressionStatement",
															"src": "8767:59:11"
														},
														{
															"nativeSrc": "8835:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8835:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8857:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8857:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8851:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8851:5:11"
																},
																"nativeSrc": "8851:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8851:13:11"
															},
															"variables": [
																{
																	"name": "length_3",
																	"nativeSrc": "8839:8:11",
																	"nodeType": "YulTypedName",
																	"src": "8839:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "8912:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8912:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8920:4:11",
																				"nodeType": "YulLiteral",
																				"src": "8920:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8908:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8908:3:11"
																		},
																		"nativeSrc": "8908:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8908:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "8931:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8931:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8935:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8935:2:11",
																				"type": "",
																				"value": "50"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8927:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8927:3:11"
																		},
																		"nativeSrc": "8927:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8927:11:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "8940:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8940:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8873:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "8873:34:11"
																},
																"nativeSrc": "8873:76:11",
																"nodeType": "YulFunctionCall",
																"src": "8873:76:11"
															},
															"nativeSrc": "8873:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "8873:76:11"
														},
														{
															"nativeSrc": "8958:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8958:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "8972:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "8972:2:11"
																	},
																	{
																		"name": "length_3",
																		"nativeSrc": "8976:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8976:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8968:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8968:3:11"
																},
																"nativeSrc": "8968:17:11",
																"nodeType": "YulFunctionCall",
																"src": "8968:17:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "8962:2:11",
																	"nodeType": "YulTypedName",
																	"src": "8962:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "9005:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "9005:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9009:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9009:2:11",
																				"type": "",
																				"value": "50"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9001:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9001:3:11"
																		},
																		"nativeSrc": "9001:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9001:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9018:3:11",
																				"nodeType": "YulLiteral",
																				"src": "9018:3:11",
																				"type": "",
																				"value": "177"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9023:22:11",
																				"nodeType": "YulLiteral",
																				"src": "9023:22:11",
																				"type": "",
																				"value": "0x11161139b637ba111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9014:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9014:3:11"
																		},
																		"nativeSrc": "9014:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9014:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8994:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8994:6:11"
																},
																"nativeSrc": "8994:53:11",
																"nodeType": "YulFunctionCall",
																"src": "8994:53:11"
															},
															"nativeSrc": "8994:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "8994:53:11"
														},
														{
															"nativeSrc": "9056:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9056:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9078:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9078:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9072:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9072:5:11"
																},
																"nativeSrc": "9072:13:11",
																"nodeType": "YulFunctionCall",
																"src": "9072:13:11"
															},
															"variables": [
																{
																	"name": "length_4",
																	"nativeSrc": "9060:8:11",
																	"nodeType": "YulTypedName",
																	"src": "9060:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "9133:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9133:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9141:4:11",
																				"nodeType": "YulLiteral",
																				"src": "9141:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9129:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9129:3:11"
																		},
																		"nativeSrc": "9129:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9129:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "9152:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "9152:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9156:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9156:2:11",
																				"type": "",
																				"value": "60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9148:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9148:3:11"
																		},
																		"nativeSrc": "9148:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9148:11:11"
																	},
																	{
																		"name": "length_4",
																		"nativeSrc": "9161:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "9161:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9094:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "9094:34:11"
																},
																"nativeSrc": "9094:76:11",
																"nodeType": "YulFunctionCall",
																"src": "9094:76:11"
															},
															"nativeSrc": "9094:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "9094:76:11"
														},
														{
															"nativeSrc": "9179:122:11",
															"nodeType": "YulAssignment",
															"src": "9179:122:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nativeSrc": "9234:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9234:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nativeSrc": "9280:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "9280:2:11"
																									},
																									{
																										"name": "length_4",
																										"nativeSrc": "9284:8:11",
																										"nodeType": "YulIdentifier",
																										"src": "9284:8:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9276:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "9276:3:11"
																								},
																								"nativeSrc": "9276:17:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9276:17:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9295:2:11",
																								"nodeType": "YulLiteral",
																								"src": "9295:2:11",
																								"type": "",
																								"value": "60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9272:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9272:3:11"
																						},
																						"nativeSrc": "9272:26:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9272:26:11"
																					}
																				],
																				"functionName": {
																					"name": "abi_encode_stringliteral_fd1e",
																					"nativeSrc": "9242:29:11",
																					"nodeType": "YulIdentifier",
																					"src": "9242:29:11"
																				},
																				"nativeSrc": "9242:57:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9242:57:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "9216:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "9216:17:11"
																		},
																		"nativeSrc": "9216:84:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9216:84:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_stringliteral_8e2f",
																	"nativeSrc": "9186:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "9186:29:11"
																},
																"nativeSrc": "9186:115:11",
																"nodeType": "YulFunctionCall",
																"src": "9186:115:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9179:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9179:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_string_memory_ptr_t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d_t_string_memory_ptr_t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140_t_string_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7008:2299:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8030:3:11",
														"nodeType": "YulTypedName",
														"src": "8030:3:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8035:6:11",
														"nodeType": "YulTypedName",
														"src": "8035:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8043:6:11",
														"nodeType": "YulTypedName",
														"src": "8043:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8051:6:11",
														"nodeType": "YulTypedName",
														"src": "8051:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8059:6:11",
														"nodeType": "YulTypedName",
														"src": "8059:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8067:6:11",
														"nodeType": "YulTypedName",
														"src": "8067:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8075:6:11",
														"nodeType": "YulTypedName",
														"src": "8075:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8086:3:11",
														"nodeType": "YulTypedName",
														"src": "8086:3:11",
														"type": ""
													}
												],
												"src": "7008:2299:11"
											},
											{
												"body": {
													"nativeSrc": "9344:95:11",
													"nodeType": "YulBlock",
													"src": "9344:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9361:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9361:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9368:3:11",
																				"nodeType": "YulLiteral",
																				"src": "9368:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9373:10:11",
																				"nodeType": "YulLiteral",
																				"src": "9373:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9364:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9364:3:11"
																		},
																		"nativeSrc": "9364:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9364:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9354:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9354:6:11"
																},
																"nativeSrc": "9354:31:11",
																"nodeType": "YulFunctionCall",
																"src": "9354:31:11"
															},
															"nativeSrc": "9354:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "9354:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9401:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9401:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9404:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9404:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9394:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9394:6:11"
																},
																"nativeSrc": "9394:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9394:15:11"
															},
															"nativeSrc": "9394:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9394:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9425:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9425:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9428:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9428:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9418:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9418:6:11"
																},
																"nativeSrc": "9418:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9418:15:11"
															},
															"nativeSrc": "9418:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9418:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9312:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9312:127:11"
											},
											{
												"body": {
													"nativeSrc": "9492:77:11",
													"nodeType": "YulBlock",
													"src": "9492:77:11",
													"statements": [
														{
															"nativeSrc": "9502:16:11",
															"nodeType": "YulAssignment",
															"src": "9502:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9513:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9513:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9516:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9516:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9509:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9509:3:11"
																},
																"nativeSrc": "9509:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9509:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9502:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9541:22:11",
																"nodeType": "YulBlock",
																"src": "9541:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9543:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9543:16:11"
																			},
																			"nativeSrc": "9543:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9543:18:11"
																		},
																		"nativeSrc": "9543:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9543:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9533:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9533:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9536:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9536:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9530:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9530:2:11"
																},
																"nativeSrc": "9530:10:11",
																"nodeType": "YulFunctionCall",
																"src": "9530:10:11"
															},
															"nativeSrc": "9527:36:11",
															"nodeType": "YulIf",
															"src": "9527:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9444:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9475:1:11",
														"nodeType": "YulTypedName",
														"src": "9475:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9478:1:11",
														"nodeType": "YulTypedName",
														"src": "9478:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9484:3:11",
														"nodeType": "YulTypedName",
														"src": "9484:3:11",
														"type": ""
													}
												],
												"src": "9444:125:11"
											},
											{
												"body": {
													"nativeSrc": "9606:95:11",
													"nodeType": "YulBlock",
													"src": "9606:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9623:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9623:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9630:3:11",
																				"nodeType": "YulLiteral",
																				"src": "9630:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9635:10:11",
																				"nodeType": "YulLiteral",
																				"src": "9635:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9626:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:11"
																		},
																		"nativeSrc": "9626:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9626:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9616:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9616:6:11"
																},
																"nativeSrc": "9616:31:11",
																"nodeType": "YulFunctionCall",
																"src": "9616:31:11"
															},
															"nativeSrc": "9616:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "9616:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9663:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9663:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9666:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9666:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9656:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9656:6:11"
																},
																"nativeSrc": "9656:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9656:15:11"
															},
															"nativeSrc": "9656:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9656:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9687:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9687:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9690:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9690:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9680:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9680:6:11"
																},
																"nativeSrc": "9680:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9680:15:11"
															},
															"nativeSrc": "9680:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9680:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9574:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9574:127:11"
											},
											{
												"body": {
													"nativeSrc": "9752:171:11",
													"nodeType": "YulBlock",
													"src": "9752:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9783:111:11",
																"nodeType": "YulBlock",
																"src": "9783:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9804:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9804:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9811:3:11",
																							"nodeType": "YulLiteral",
																							"src": "9811:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9816:10:11",
																							"nodeType": "YulLiteral",
																							"src": "9816:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9807:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9807:3:11"
																					},
																					"nativeSrc": "9807:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9807:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9797:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9797:6:11"
																			},
																			"nativeSrc": "9797:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9797:31:11"
																		},
																		"nativeSrc": "9797:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9797:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9848:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9848:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9851:4:11",
																					"nodeType": "YulLiteral",
																					"src": "9851:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9841:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9841:6:11"
																			},
																			"nativeSrc": "9841:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9841:15:11"
																		},
																		"nativeSrc": "9841:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9841:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9876:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9876:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9879:4:11",
																					"nodeType": "YulLiteral",
																					"src": "9879:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9869:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9869:6:11"
																			},
																			"nativeSrc": "9869:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9869:15:11"
																		},
																		"nativeSrc": "9869:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9869:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9772:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9772:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9765:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9765:6:11"
																},
																"nativeSrc": "9765:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9765:9:11"
															},
															"nativeSrc": "9762:132:11",
															"nodeType": "YulIf",
															"src": "9762:132:11"
														},
														{
															"nativeSrc": "9903:14:11",
															"nodeType": "YulAssignment",
															"src": "9903:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9912:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9912:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9915:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9915:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9908:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9908:3:11"
																},
																"nativeSrc": "9908:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9908:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9903:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9903:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9706:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9737:1:11",
														"nodeType": "YulTypedName",
														"src": "9737:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9740:1:11",
														"nodeType": "YulTypedName",
														"src": "9740:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9746:1:11",
														"nodeType": "YulTypedName",
														"src": "9746:1:11",
														"type": ""
													}
												],
												"src": "9706:217:11"
											},
											{
												"body": {
													"nativeSrc": "9980:116:11",
													"nodeType": "YulBlock",
													"src": "9980:116:11",
													"statements": [
														{
															"nativeSrc": "9990:20:11",
															"nodeType": "YulAssignment",
															"src": "9990:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10005:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10005:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10008:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10008:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10001:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10001:3:11"
																},
																"nativeSrc": "10001:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10001:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9990:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "9990:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10068:22:11",
																"nodeType": "YulBlock",
																"src": "10068:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10070:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10070:16:11"
																			},
																			"nativeSrc": "10070:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10070:18:11"
																		},
																		"nativeSrc": "10070:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10070:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10039:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "10039:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10032:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10032:6:11"
																				},
																				"nativeSrc": "10032:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10032:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10046:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "10046:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10053:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "10053:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10062:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "10062:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10049:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10049:3:11"
																						},
																						"nativeSrc": "10049:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10049:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10043:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10043:2:11"
																				},
																				"nativeSrc": "10043:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10043:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10029:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10029:2:11"
																		},
																		"nativeSrc": "10029:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10029:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10022:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10022:6:11"
																},
																"nativeSrc": "10022:45:11",
																"nodeType": "YulFunctionCall",
																"src": "10022:45:11"
															},
															"nativeSrc": "10019:71:11",
															"nodeType": "YulIf",
															"src": "10019:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9928:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9959:1:11",
														"nodeType": "YulTypedName",
														"src": "9959:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9962:1:11",
														"nodeType": "YulTypedName",
														"src": "9962:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9968:7:11",
														"nodeType": "YulTypedName",
														"src": "9968:7:11",
														"type": ""
													}
												],
												"src": "9928:168:11"
											},
											{
												"body": {
													"nativeSrc": "10389:353:11",
													"nodeType": "YulBlock",
													"src": "10389:353:11",
													"statements": [
														{
															"nativeSrc": "10399:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10399:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10419:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10419:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10413:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10413:5:11"
																},
																"nativeSrc": "10413:13:11",
																"nodeType": "YulFunctionCall",
																"src": "10413:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10403:6:11",
																	"nodeType": "YulTypedName",
																	"src": "10403:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10474:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10474:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10482:4:11",
																				"nodeType": "YulLiteral",
																				"src": "10482:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10470:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10470:3:11"
																		},
																		"nativeSrc": "10470:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10470:17:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10489:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10489:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10494:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10494:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10435:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "10435:34:11"
																},
																"nativeSrc": "10435:66:11",
																"nodeType": "YulFunctionCall",
																"src": "10435:66:11"
															},
															"nativeSrc": "10435:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "10435:66:11"
														},
														{
															"nativeSrc": "10510:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10510:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10527:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10527:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10532:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10532:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10523:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:11"
																},
																"nativeSrc": "10523:16:11",
																"nodeType": "YulFunctionCall",
																"src": "10523:16:11"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "10514:5:11",
																	"nodeType": "YulTypedName",
																	"src": "10514:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "10555:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10555:5:11"
																	},
																	{
																		"hexValue": "2023",
																		"kind": "string",
																		"nativeSrc": "10562:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10562:4:11",
																		"type": "",
																		"value": " #"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10548:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10548:6:11"
																},
																"nativeSrc": "10548:19:11",
																"nodeType": "YulFunctionCall",
																"src": "10548:19:11"
															},
															"nativeSrc": "10548:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "10548:19:11"
														},
														{
															"nativeSrc": "10576:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10576:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10598:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10598:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10592:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10592:5:11"
																},
																"nativeSrc": "10592:13:11",
																"nodeType": "YulFunctionCall",
																"src": "10592:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "10580:8:11",
																	"nodeType": "YulTypedName",
																	"src": "10580:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10653:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10653:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10661:4:11",
																				"nodeType": "YulLiteral",
																				"src": "10661:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10649:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10649:3:11"
																		},
																		"nativeSrc": "10649:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10649:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nativeSrc": "10672:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10672:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10679:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10679:1:11",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10668:3:11"
																		},
																		"nativeSrc": "10668:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10668:13:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10683:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "10683:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10614:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "10614:34:11"
																},
																"nativeSrc": "10614:78:11",
																"nodeType": "YulFunctionCall",
																"src": "10614:78:11"
															},
															"nativeSrc": "10614:78:11",
															"nodeType": "YulExpressionStatement",
															"src": "10614:78:11"
														},
														{
															"nativeSrc": "10701:35:11",
															"nodeType": "YulAssignment",
															"src": "10701:35:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nativeSrc": "10716:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10716:5:11"
																			},
																			{
																				"name": "length_1",
																				"nativeSrc": "10723:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "10723:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10712:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10712:3:11"
																		},
																		"nativeSrc": "10712:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10712:20:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10734:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10734:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10708:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10708:3:11"
																},
																"nativeSrc": "10708:28:11",
																"nodeType": "YulFunctionCall",
																"src": "10708:28:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10701:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10701:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10101:641:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10357:3:11",
														"nodeType": "YulTypedName",
														"src": "10357:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10362:6:11",
														"nodeType": "YulTypedName",
														"src": "10362:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10370:6:11",
														"nodeType": "YulTypedName",
														"src": "10370:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10381:3:11",
														"nodeType": "YulTypedName",
														"src": "10381:3:11",
														"type": ""
													}
												],
												"src": "10101:641:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_stringliteral_fd1e(pos) -> end\n    {\n        mstore(pos, shl(137, 0x111611383937b832b93a34b2b9911d))\n        end := add(pos, 15)\n    }\n    function abi_encode_stringliteral_8e2f(pos) -> end\n    {\n        mstore(pos, \"}\")\n        end := add(pos, 1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), shl(121, 0x1116113232b9b1b934b83a34b7b7111d11))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 26), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 26), shl(169, 0x11161134b6b0b3b2911d11))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 37), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 37), shl(137, 0x111611383937b832b93a34b2b9911d))\n        let length_3 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_3, 52), length_3)\n        let _4 := add(_3, length_3)\n        mstore(add(_4, 52), \"}\")\n        end := add(_4, 53)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 29), length)\n        end := add(add(pos, length), 29)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), shl(121, 0x1116113232b9b1b934b83a34b7b7111d11))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 26), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 26), shl(169, 0x11161134b6b0b3b2911d11))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 37), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 37), shl(105, 0x1116113b30b63ab2a232b1b4b6b0b639911d11))\n        let length_3 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_3, 56), length_3)\n        let _4 := add(_3, length_3)\n        mstore(add(_4, 56), shl(240, 8829))\n        end := add(_4, 58)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_string_memory_ptr_t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d_t_string_memory_ptr_t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140_t_string_memory_ptr_t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 9), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 9), shl(121, 0x1116113232b9b1b934b83a34b7b7111d11))\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 26), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 26), shl(169, 0x11161134b6b0b3b2911d11))\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 37), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 37), shl(153, 0x1116113130b630b731b2911d11))\n        let length_3 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_3, 50), length_3)\n        let _4 := add(_3, length_3)\n        mstore(add(_4, 50), shl(177, 0x11161139b637ba111d11))\n        let length_4 := mload(value4)\n        copy_memory_to_memory_with_cleanup(add(value4, 0x20), add(_4, 60), length_4)\n        end := abi_encode_stringliteral_8e2f(abi_encode_string(value5, abi_encode_stringliteral_fd1e(add(add(_4, length_4), 60))))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \" #\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(end_1, 2), length_1)\n        end := add(add(end_1, length_1), 2)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80636c037f8a14610043578063725fa09c1461006c578063894b4c2e14610074575b5f80fd5b610056610051366004610706565b610087565b604051610063919061073f565b60405180910390f35b61005661011d565b610056610082366004610706565b610247565b60606100f76100a060408051602081019091525f815290565b60408051602081019091525f81526100b785610369565b6040805180820190915260028152615b5d60f01b60208201526040516020016100e3949392919061078c565b6040516020818303038152906040526103d2565b6040516020016101079190610859565b6040516020818303038152906040529050919050565b60605f339050610222816001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa158015610161573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261018891908101906108b1565b60408051602081019091525f815260408051602081019091525f815261020f856001600160a01b0316633e7e86696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102079190610959565b60ff16610521565b6040516020016100e39493929190610980565b6040516020016102329190610859565b60405160208183030381529060405291505090565b606033610342610256846105b1565b60408051602081019091525f815260408051602081019091525f8152604051631398fee160e31b8152600481018890526102e3906001600160a01b03871690639cc7f708906024015b602060405180830381865afa1580156102ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102de9190610a52565b610521565b60405163131f9f3f60e11b815260048101899052610314906001600160a01b0388169063263f3e7e9060240161029f565b6040805180820190915260028152617b7d60f01b60208201526040516020016100e396959493929190610a69565b6040516020016103529190610859565b604051602081830303815290604052915050919050565b6040516309c3dd8760e01b81526004810182905260609033906309c3dd87906024015f60405180830381865afa1580156103a5573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526103cc91908101906108b1565b92915050565b606081515f036103ef57505060408051602081019091525f815290565b5f604051806060016040528060408152602001610c286040913990505f60038451600261041c9190610ba2565b6104269190610bb5565b610431906004610bd4565b67ffffffffffffffff8111156104495761044961089d565b6040519080825280601f01601f191660200182016040528015610473576020820181803683370190505b509050600182016020820185865187015b808210156104df576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610484565b50506003865106600181146104fb576002811461050e57610516565b603d6001830353603d6002830353610516565b603d60018303535b509195945050505050565b60605f61052d8361062f565b60010190505f8167ffffffffffffffff81111561054c5761054c61089d565b6040519080825280601f01601f191660200182016040528015610576576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461058057509392505050565b6060336001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa1580156105ee573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261061591908101906108b1565b61061e83610521565b604051602001610107929190610beb565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061066d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610699576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106106b757662386f26fc10000830492506010015b6305f5e10083106106cf576305f5e100830492506008015b61271083106106e357612710830492506004015b606483106106f5576064830492506002015b600a83106103cc5760010192915050565b5f60208284031215610716575f80fd5b5035919050565b5f5b8381101561073757818101518382015260200161071f565b50505f910152565b602081525f825180602084015261075d81604085016020870161071d565b601f01601f19169190910160400192915050565b5f815161078281856020860161071d565b9290920192915050565b683d913730b6b2911d1160b91b815284515f906107b0816009850160208a0161071d565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516107e181601a840160208a0161071d565b6a11161134b6b0b3b2911d1160a91b601a9290910191820152845161080d81602584016020890161071d565b6e111611383937b832b93a34b2b9911d60891b60259290910191820152835161083d81603484016020880161071d565b607d60f81b603492909101918201526035019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525f825161089081601d85016020870161071d565b91909101601d0192915050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156108c1575f80fd5b815167ffffffffffffffff808211156108d8575f80fd5b818401915084601f8301126108eb575f80fd5b8151818111156108fd576108fd61089d565b604051601f8201601f19908116603f011681019083821181831017156109255761092561089d565b8160405282815287602084870101111561093d575f80fd5b61094e83602083016020880161071d565b979650505050505050565b5f60208284031215610969575f80fd5b815160ff81168114610979575f80fd5b9392505050565b683d913730b6b2911d1160b91b815284515f906109a4816009850160208a0161071d565b701116113232b9b1b934b83a34b7b7111d1160791b60099184019182015285516109d581601a840160208a0161071d565b6a11161134b6b0b3b2911d1160a91b601a92909101918201528451610a0181602584016020890161071d565b721116113b30b63ab2a232b1b4b6b0b639911d1160691b602592909101918201528351610a3581603884016020880161071d565b61227d60f01b60389290910191820152603a019695505050505050565b5f60208284031215610a62575f80fd5b5051919050565b683d913730b6b2911d1160b91b815286515f90610a8d816009850160208c0161071d565b701116113232b9b1b934b83a34b7b7111d1160791b6009918401918201528751610abe81601a840160208c0161071d565b6a11161134b6b0b3b2911d1160a91b601a92909101918201528651610aea816025840160208b0161071d565b6c1116113130b630b731b2911d1160991b602592909101918201528551610b18816032840160208a0161071d565b6911161139b637ba111d1160b11b603292909101918201528451610b4381603c84016020890161071d565b610b80610b73610b6d603c848601016e111611383937b832b93a34b2b9911d60891b8152600f0190565b87610771565b607d60f81b815260010190565b9a9950505050505050505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156103cc576103cc610b8e565b5f82610bcf57634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176103cc576103cc610b8e565b5f8351610bfc81846020880161071d565b61202360f01b9083019081528351610c1b81600284016020880161071d565b0160020194935050505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212205cdc7e2e734a4a48ba9a220034d430a43511a5a3b20d54f2962da169cac912cd64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C037F8A EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x725FA09C EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x894B4C2E EQ PUSH2 0x74 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56 PUSH2 0x11D JUMP JUMPDEST PUSH2 0x56 PUSH2 0x82 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF7 PUSH2 0xA0 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0xB7 DUP6 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x5B5D PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 CALLER SWAP1 POP PUSH2 0x222 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x161 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x188 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH2 0x20F DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3E7E8669 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLER PUSH2 0x342 PUSH2 0x256 DUP5 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x1398FEE1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH2 0x2E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x9CC7F708 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131F9F3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH2 0x314 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x263F3E7E SWAP1 PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x7B7D PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9C3DD87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 CALLER SWAP1 PUSH4 0x9C3DD87 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3CC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0x3EF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC28 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x426 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x431 SWAP1 PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x449 JUMPI PUSH2 0x449 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x4DF JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x484 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x4FB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x50E JUMPI PUSH2 0x516 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x52D DUP4 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54C PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x580 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x615 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x61E DUP4 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0xBEB JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x66D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x699 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x6B7 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x6CF JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x6E3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x6F5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3CC JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x716 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x737 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x71F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x75D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH2 0x782 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x71D JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x7B0 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x7E1 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x80D DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x71D JUMP JUMPDEST PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x83D DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x34 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x35 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0x890 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x925 JUMPI PUSH2 0x925 PUSH2 0x89D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x93D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x94E DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x969 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x979 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP5 MLOAD PUSH0 SWAP1 PUSH2 0x9A4 DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x9D5 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xA01 DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x71D JUMP JUMPDEST PUSH19 0x1116113B30B63AB2A232B1B4B6B0B639911D11 PUSH1 0x69 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xA35 DUP2 PUSH1 0x38 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x38 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x3A ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE DUP7 MLOAD PUSH0 SWAP1 PUSH2 0xA8D DUP2 PUSH1 0x9 DUP6 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x71D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL PUSH1 0x9 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP8 MLOAD PUSH2 0xABE DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x71D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL PUSH1 0x1A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0xAEA DUP2 PUSH1 0x25 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x71D JUMP JUMPDEST PUSH13 0x1116113130B630B731B2911D11 PUSH1 0x99 SHL PUSH1 0x25 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0xB18 DUP2 PUSH1 0x32 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x71D JUMP JUMPDEST PUSH10 0x11161139B637BA111D11 PUSH1 0xB1 SHL PUSH1 0x32 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0xB43 DUP2 PUSH1 0x3C DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x71D JUMP JUMPDEST PUSH2 0xB80 PUSH2 0xB73 PUSH2 0xB6D PUSH1 0x3C DUP5 DUP7 ADD ADD PUSH15 0x111611383937B832B93A34B2B9911D PUSH1 0x89 SHL DUP2 MSTORE PUSH1 0xF ADD SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3CC JUMPI PUSH2 0x3CC PUSH2 0xB8E JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBCF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3CC JUMPI PUSH2 0x3CC PUSH2 0xB8E JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xBFC DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x2023 PUSH1 0xF0 SHL SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0xC1B DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x71D JUMP JUMPDEST ADD PUSH1 0x2 ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID COINBASE TIMESTAMP NUMBER PREVRANDAO GASLIMIT CHAINID SELFBALANCE BASEFEE BLOBHASH BLOBBASEFEE 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 TLOAD 0xDC PUSH31 0x2E734A4A48BA9A220034D430A43511A5A3B20D54F2962DA169CAC912CD6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "260:4663:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:812;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:892;;;:::i;2080:1103::-;;;;;;:::i;:::-;;:::i;1262:812::-;1335:13;1503:515;1630:16;3507:9;;;;;;;;;-1:-1:-1;3507:9:9;;;3402:121;1630:16;3507:9;;;;;;;;;-1:-1:-1;3507:9:9;;1821:17;1832:5;1821:10;:17::i;:::-;3952:11;;;;;;;;;;;;-1:-1:-1;;;3952:11:9;;;;1542:454;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1503:13;:515::i;:::-;1403:650;;;;;;;;:::i;:::-;;;;;;;;;;;;;1360:707;;1262:812;;;:::o;364:892::-;428:13;453:24;497:10;453:55;;670:538;797:7;-1:-1:-1;;;;;797:12:9;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;797:14:9;;;;;;;;;;;;:::i;:::-;3277:9;;;;;;;;;-1:-1:-1;3277:9:9;;;;;;;;;;;-1:-1:-1;3277:9:9;;1083:43;1091:7;-1:-1:-1;;;;;1091:21:9;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1083:32;;:41;:43::i;:::-;709:477;;;;;;;;;;;:::i;670:538::-;562:673;;;;;;;;:::i;:::-;;;;;;;;;;;;;518:731;;;364:892;:::o;2080:1103::-;2155:13;2224:10;2380:764;2503:20;2514:8;2503:10;:20::i;:::-;3507:9;;;;;;;;;-1:-1:-1;3507:9:9;;;;;;;;;;;-1:-1:-1;3507:9:9;;2798:27;;-1:-1:-1;;;2798:27:9;;;;;6783:25:11;;;2798:38:9;;-1:-1:-1;;;;;2798:17:9;;;;;6756:18:11;;2798:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;:38::i;:::-;2908:24;;-1:-1:-1;;;2908:24:9;;;;;6783:25:11;;;2908:35:9;;-1:-1:-1;;;;;2908:14:9;;;;;6756:18:11;;2908:24:9;6637:177:11;2908:35:9;4903:11;;;;;;;;;;;;-1:-1:-1;;;4903:11:9;;;;2419:703;;;;;;;;;;;;;:::i;2380:764::-;2289:873;;;;;;;;:::i;:::-;;;;;;;;;;;;;2245:931;;;2080:1103;;;:::o;3663:172::-;3784:43;;-1:-1:-1;;;3784:43:9;;;;;6783:25:11;;;3731:12:9;;3801:10;;3784:36;;6756:18:11;;3784:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3784:43:9;;;;;;;;;;;;:::i;:::-;3771:57;3663:172;-1:-1:-1;;3663:172:9:o;476:3026:0:-;534:13;766:4;:11;781:1;766:16;762:31;;-1:-1:-1;;784:9:0;;;;;;;;;-1:-1:-1;784:9:0;;;476:3026::o;762:31::-;843:19;865:6;;;;;;;;;;;;;;;;;843:28;;1274:20;1333:1;1314:4;:11;1328:1;1314:15;;;;:::i;:::-;1313:21;;;;:::i;:::-;1308:27;;:1;:27;:::i;:::-;1297:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:39:0;;1274:62;;1511:1;1504:5;1500:13;1612:2;1604:6;1600:15;1719:4;1770;1764:11;1758:4;1754:22;1682:1403;1803:6;1794:7;1791:19;1682:1403;;;1905:1;1896:7;1892:15;1881:26;;1943:7;1937:14;2586:4;2578:5;2574:2;2570:14;2566:25;2556:8;2552:40;2546:47;2535:9;2527:67;2639:1;2628:9;2624:17;2611:30;;2729:4;2721:5;2717:2;2713:14;2709:25;2699:8;2695:40;2689:47;2678:9;2670:67;2782:1;2771:9;2767:17;2754:30;;2871:4;2863:5;2860:1;2856:13;2852:24;2842:8;2838:39;2832:46;2821:9;2813:66;2924:1;2913:9;2909:17;2896:30;;3005:4;2998:5;2994:16;2984:8;2980:31;2974:38;2963:9;2955:58;;3058:1;3047:9;3043:17;3030:30;;1682:1403;;;1686:104;;3243:1;3236:4;3230:11;3226:19;3263:1;3258:120;;;;3396:1;3391:71;;;;3219:243;;3258:120;3310:4;3306:1;3295:9;3291:17;3283:32;3359:4;3355:1;3344:9;3340:17;3332:32;3258:120;;3391:71;3443:4;3439:1;3428:9;3424:17;3416:32;3219:243;-1:-1:-1;3489:6:0;;476:3026;-1:-1:-1;;;;;476:3026:0:o;637:698:1:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:1;-1:-1:-1;794:41:1;-1:-1:-1;955:28:1;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:1;-1:-1:-1;;;1175:2:1;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:1;1010:282;1256:21;-1:-1:-1;1312:6:1;637:698;-1:-1:-1;;;637:698:1:o;3976:306:9:-;4045:13;4177:10;-1:-1:-1;;;;;4160:33:9;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4160:35:9;;;;;;;;;;;;:::i;:::-;4224:19;:8;:17;:19::i;:::-;4122:139;;;;;;;;;:::i;12214:916:3:-;12267:7;;-1:-1:-1;;;12342:17:3;;12338:103;;-1:-1:-1;;;12379:17:3;;;-1:-1:-1;12424:2:3;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:3;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:3;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:3;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:3;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:3;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:3:o;14:180:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:11;423:16;;416:27;199:250::o;454:396::-;603:2;592:9;585:21;566:4;635:6;629:13;678:6;673:2;662:9;658:18;651:34;694:79;766:6;761:2;750:9;746:18;741:2;733:6;729:15;694:79;:::i;:::-;834:2;813:15;-1:-1:-1;;809:29:11;794:45;;;;841:2;790:54;;454:396;-1:-1:-1;;454:396:11:o;855:198::-;897:3;935:5;929:12;950:65;1008:6;1003:3;996:4;989:5;985:16;950:65;:::i;:::-;1031:16;;;;;855:198;-1:-1:-1;;855:198:11:o;1336:1747::-;-1:-1:-1;;;2132:43:11;;2198:13;;2114:3;;2220:74;2198:13;2283:1;2274:11;;2267:4;2255:17;;2220:74;:::i;:::-;-1:-1:-1;;;2353:1:11;2313:16;;;2345:10;;;2338:66;2429:13;;2451:76;2429:13;2513:2;2505:11;;2498:4;2486:17;;2451:76;:::i;:::-;-1:-1:-1;;;2587:2:11;2546:17;;;;2579:11;;;2572:55;2652:13;;2674:76;2652:13;2736:2;2728:11;;2721:4;2709:17;;2674:76;:::i;:::-;-1:-1:-1;;;2810:2:11;2769:17;;;;2802:11;;;2795:63;2883:13;;2905:76;2883:13;2967:2;2959:11;;2952:4;2940:17;;2905:76;:::i;:::-;-1:-1:-1;;;3041:2:11;3000:17;;;;3033:11;;;3026:24;3074:2;3066:11;;1336:1747;-1:-1:-1;;;;;;1336:1747:11:o;3088:461::-;3350:31;3345:3;3338:44;3320:3;3411:6;3405:13;3427:75;3495:6;3490:2;3485:3;3481:12;3474:4;3466:6;3462:17;3427:75;:::i;:::-;3522:16;;;;3540:2;3518:25;;3088:461;-1:-1:-1;;3088:461:11:o;3554:127::-;3615:10;3610:3;3606:20;3603:1;3596:31;3646:4;3643:1;3636:15;3670:4;3667:1;3660:15;3686:897;3766:6;3819:2;3807:9;3798:7;3794:23;3790:32;3787:52;;;3835:1;3832;3825:12;3787:52;3868:9;3862:16;3897:18;3938:2;3930:6;3927:14;3924:34;;;3954:1;3951;3944:12;3924:34;3992:6;3981:9;3977:22;3967:32;;4037:7;4030:4;4026:2;4022:13;4018:27;4008:55;;4059:1;4056;4049:12;4008:55;4088:2;4082:9;4110:2;4106;4103:10;4100:36;;;4116:18;;:::i;:::-;4191:2;4185:9;4159:2;4245:13;;-1:-1:-1;;4241:22:11;;;4265:2;4237:31;4233:40;4221:53;;;4289:18;;;4309:22;;;4286:46;4283:72;;;4335:18;;:::i;:::-;4375:10;4371:2;4364:22;4410:2;4402:6;4395:18;4450:7;4445:2;4440;4436;4432:11;4428:20;4425:33;4422:53;;;4471:1;4468;4461:12;4422:53;4484:68;4549:2;4544;4536:6;4532:15;4527:2;4523;4519:11;4484:68;:::i;:::-;4571:6;3686:897;-1:-1:-1;;;;;;;3686:897:11:o;4588:273::-;4656:6;4709:2;4697:9;4688:7;4684:23;4680:32;4677:52;;;4725:1;4722;4715:12;4677:52;4757:9;4751:16;4807:4;4800:5;4796:16;4789:5;4786:27;4776:55;;4827:1;4824;4817:12;4776:55;4850:5;4588:273;-1:-1:-1;;;4588:273:11:o;4866:1766::-;-1:-1:-1;;;5662:43:11;;5728:13;;5644:3;;5750:74;5728:13;5813:1;5804:11;;5797:4;5785:17;;5750:74;:::i;:::-;-1:-1:-1;;;5883:1:11;5843:16;;;5875:10;;;5868:66;5959:13;;5981:76;5959:13;6043:2;6035:11;;6028:4;6016:17;;5981:76;:::i;:::-;-1:-1:-1;;;6117:2:11;6076:17;;;;6109:11;;;6102:55;6182:13;;6204:76;6182:13;6266:2;6258:11;;6251:4;6239:17;;6204:76;:::i;:::-;-1:-1:-1;;;6340:2:11;6299:17;;;;6332:11;;;6325:71;6421:13;;6443:76;6421:13;6505:2;6497:11;;6490:4;6478:17;;6443:76;:::i;:::-;-1:-1:-1;;;6579:2:11;6538:17;;;;6571:11;;;6564:35;6623:2;6615:11;;4866:1766;-1:-1:-1;;;;;;4866:1766:11:o;6819:184::-;6889:6;6942:2;6930:9;6921:7;6917:23;6913:32;6910:52;;;6958:1;6955;6948:12;6910:52;-1:-1:-1;6981:16:11;;6819:184;-1:-1:-1;6819:184:11:o;7008:2299::-;-1:-1:-1;;;8104:43:11;;8170:13;;8086:3;;8192:74;8170:13;8255:1;8246:11;;8239:4;8227:17;;8192:74;:::i;:::-;-1:-1:-1;;;8325:1:11;8285:16;;;8317:10;;;8310:66;8401:13;;8423:76;8401:13;8485:2;8477:11;;8470:4;8458:17;;8423:76;:::i;:::-;-1:-1:-1;;;8559:2:11;8518:17;;;;8551:11;;;8544:55;8624:13;;8646:76;8624:13;8708:2;8700:11;;8693:4;8681:17;;8646:76;:::i;:::-;-1:-1:-1;;;8782:2:11;8741:17;;;;8774:11;;;8767:59;8851:13;;8873:76;8851:13;8935:2;8927:11;;8920:4;8908:17;;8873:76;:::i;:::-;-1:-1:-1;;;9009:2:11;8968:17;;;;9001:11;;;8994:53;9072:13;;9094:76;9072:13;9156:2;9148:11;;9141:4;9129:17;;9094:76;:::i;:::-;9186:115;9216:84;9242:57;9295:2;9284:8;9280:2;9276:17;9272:26;-1:-1:-1;;;1123:55:11;;1203:2;1194:12;;1058:154;9242:57;9234:6;9216:84;:::i;:::-;-1:-1:-1;;;1282:16:11;;1323:1;1314:11;;1217:114;9186:115;9179:122;7008:2299;-1:-1:-1;;;;;;;;;;7008:2299:11:o;9312:127::-;9373:10;9368:3;9364:20;9361:1;9354:31;9404:4;9401:1;9394:15;9428:4;9425:1;9418:15;9444:125;9509:9;;;9530:10;;;9527:36;;;9543:18;;:::i;9706:217::-;9746:1;9772;9762:132;;9816:10;9811:3;9807:20;9804:1;9797:31;9851:4;9848:1;9841:15;9879:4;9876:1;9869:15;9762:132;-1:-1:-1;9908:9:11;;9706:217::o;9928:168::-;10001:9;;;10032;;10049:15;;;10043:22;;10029:37;10019:71;;10070:18;;:::i;10101:641::-;10381:3;10419:6;10413:13;10435:66;10494:6;10489:3;10482:4;10474:6;10470:17;10435:66;:::i;:::-;-1:-1:-1;;;10523:16:11;;;10548:19;;;10592:13;;10614:78;10592:13;10679:1;10668:13;;10661:4;10649:17;;10614:78;:::i;:::-;10712:20;10734:1;10708:28;;10101:641;-1:-1:-1;;;;10101:641:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "645800",
								"executionCost": "674",
								"totalCost": "646474"
							},
							"external": {
								"constructContractURI()": "infinite",
								"constructSlotURI(uint256)": "infinite",
								"constructTokenURI(uint256)": "infinite"
							},
							"internal": {
								"_contractDescription()": "infinite",
								"_contractImage()": "infinite",
								"_slotDescription(uint256)": "infinite",
								"_slotImage(uint256)": "infinite",
								"_slotName(uint256)": "infinite",
								"_slotProperties(uint256)": "infinite",
								"_tokenDescription(uint256)": "infinite",
								"_tokenImage(uint256)": "infinite",
								"_tokenName(uint256)": "infinite",
								"_tokenProperties(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 4923,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205cdc7e2e734a4a48ba9a220034d430a43511a5a3b20d54f2962da169cac912cd64736f6c63430008180033",
									".code": [
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "6C037F8A"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "725FA09C"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "894B4C2E"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 4923,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1262,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1262,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1262,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 364,
											"end": 1256,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 364,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 364,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 364,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2080,
											"end": 3183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2080,
											"end": 3183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1348,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1503,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3523,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1832,
											"end": 1837,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1821,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1542,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1503,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 2018,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1403,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 2053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 2067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 364,
											"end": 1256,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 364,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 441,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 453,
											"end": 477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 507,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 453,
											"end": 508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 453,
											"end": 508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 670,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 797,
											"end": 804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 797,
											"end": 809,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 797,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 797,
											"end": 811,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 797,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 797,
											"end": 811,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 797,
											"end": 811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1083,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "PUSH",
											"source": 9,
											"value": "3E7E8669"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1091,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1083,
											"end": 1115,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1083,
											"end": 1115,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1083,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1083,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1083,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 709,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 709,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 670,
											"end": 1208,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 670,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 562,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 1235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 518,
											"end": 1249,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 518,
											"end": 1249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 1249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 364,
											"end": 1256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 364,
											"end": 1256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2155,
											"end": 2168,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2224,
											"end": 2234,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2503,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2503,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2523,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2503,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1398FEE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2798,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2798,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "PUSH",
											"source": 9,
											"value": "9CC7F708"
										},
										{
											"begin": 2798,
											"end": 2815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2798,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2798,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2798,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2798,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131F9F3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2908,
											"end": 2943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "PUSH",
											"source": 9,
											"value": "263F3E7E"
										},
										{
											"begin": 2908,
											"end": 2922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6637,
											"end": 6814,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2943,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2908,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2419,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 3144,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2380,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2289,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 3162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 3176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 3176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 3176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 3183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3835,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3663,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9C3DD87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3811,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3820,
											"name": "PUSH",
											"source": 9,
											"value": "9C3DD87"
										},
										{
											"begin": 3784,
											"end": 3820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3784,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3828,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3663,
											"end": 3835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 534,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 766,
											"end": 777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 762,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH data",
											"source": 0,
											"value": "84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 865,
											"end": 871,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1314,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1313,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1308,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1297,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1896,
											"end": 1903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1937,
											"end": 1951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2574,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2570,
											"end": 2584,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2594,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2624,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2641,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2721,
											"end": 2726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2707,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2737,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2771,
											"end": 2780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2784,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2850,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2879,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 2992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 3013,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 3013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3030,
											"end": 3060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3030,
											"end": 3060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1682,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3236,
											"end": 3240,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3245,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3315,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3258,
											"end": 3378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3391,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3447,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3219,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 476,
											"end": 3502,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 476,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4282,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3976,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4058,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4177,
											"end": 4187,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4193,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4193,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4160,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4160,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4224,
											"end": 4232,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4224,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4122,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 3,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 3,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 3,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 3,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 3,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 3,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 199,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 199,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 294,
											"end": 407,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 294,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 384,
											"end": 395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 384,
											"end": 395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 384,
											"end": 395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 378,
											"end": 396,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 365,
											"end": 376,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 365,
											"end": 376,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 365,
											"end": 376,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 358,
											"end": 397,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 294,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 294,
											"end": 407,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 294,
											"end": 407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 441,
											"end": 442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 423,
											"end": 439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 416,
											"end": 443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 199,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 850,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 603,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 585,
											"end": 606,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 566,
											"end": 570,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 629,
											"end": 642,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 673,
											"end": 675,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 671,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 658,
											"end": 676,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 651,
											"end": 685,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 694,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 761,
											"end": 763,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 746,
											"end": 764,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 741,
											"end": 743,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 729,
											"end": 744,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 694,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 694,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 694,
											"end": 773,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 694,
											"end": 773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 834,
											"end": 836,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 813,
											"end": 828,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 809,
											"end": 838,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 794,
											"end": 839,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 794,
											"end": 839,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 794,
											"end": 839,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 794,
											"end": 839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 790,
											"end": 844,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 454,
											"end": 850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 454,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 855,
											"end": 1053,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 855,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1006,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1000,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 989,
											"end": 994,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 950,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1047,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 855,
											"end": 1053,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 3083,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1336,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2284,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2274,
											"end": 2285,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2220,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2220,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2354,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2338,
											"end": 2404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2515,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2505,
											"end": 2516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2503,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2486,
											"end": 2503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2451,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2451,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2572,
											"end": 2627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2674,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "111611383937B832B93A34B2B9911D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2858,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2969,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2959,
											"end": 2970,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2959,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 2956,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2957,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2905,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2905,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3043,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3044,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3044,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3066,
											"end": 3077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3077,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 3083,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1336,
											"end": 3083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3088,
											"end": 3549,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3088,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3350,
											"end": 3381,
											"name": "PUSH",
											"source": 11,
											"value": "646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000"
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3338,
											"end": 3382,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3320,
											"end": 3323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3418,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3490,
											"end": 3492,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 3485,
											"end": 3488,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3474,
											"end": 3478,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3427,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3427,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3088,
											"end": 3549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3681,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 3554,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3615,
											"end": 3625,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 3610,
											"end": 3613,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3606,
											"end": 3626,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3603,
											"end": 3604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3650,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3636,
											"end": 3651,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3667,
											"end": 3668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3675,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3686,
											"end": 4583,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3686,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3794,
											"end": 3817,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3790,
											"end": 3822,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3833,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3825,
											"end": 3837,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3787,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3868,
											"end": 3877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3936,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3941,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3952,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3944,
											"end": 3956,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3924,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3990,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3977,
											"end": 3999,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4037,
											"end": 4044,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4022,
											"end": 4035,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4045,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4057,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4008,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 4100,
											"end": 4136,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 4116,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4191,
											"end": 4193,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4194,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4237,
											"end": 4268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4273,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4283,
											"end": 4355,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4283,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4283,
											"end": 4355,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 4335,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4371,
											"end": 4373,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4386,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4442,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4428,
											"end": 4448,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4425,
											"end": 4458,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 4422,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4544,
											"end": 4546,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4542,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4532,
											"end": 4547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4529,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4525,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4519,
											"end": 4530,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 4484,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4484,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 3686,
											"end": 4583,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4861,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 4588,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4688,
											"end": 4695,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4707,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4680,
											"end": 4712,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4725,
											"end": 4726,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4727,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 4677,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4812,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4794,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4813,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4817,
											"end": 4829,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 4776,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4855,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4861,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4866,
											"end": 6632,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 4866,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5662,
											"end": 5705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 5728,
											"end": 5741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5813,
											"end": 5814,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5804,
											"end": 5815,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5804,
											"end": 5815,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5797,
											"end": 5801,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5785,
											"end": 5802,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5802,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 5750,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 5750,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5885,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5885,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5868,
											"end": 5934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5959,
											"end": 5972,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5959,
											"end": 5972,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 5959,
											"end": 5972,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6043,
											"end": 6045,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 6035,
											"end": 6046,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6035,
											"end": 6046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6016,
											"end": 6033,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 6016,
											"end": 6033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 5981,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 5981,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6119,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6102,
											"end": 6157,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6195,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6182,
											"end": 6195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6268,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 6258,
											"end": 6269,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6258,
											"end": 6269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6251,
											"end": 6255,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6239,
											"end": 6256,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 6239,
											"end": 6256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 6204,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6204,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113B30B63AB2A232B1B4B6B0B639911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6340,
											"end": 6342,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6396,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 6421,
											"end": 6434,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6505,
											"end": 6507,
											"name": "PUSH",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 6497,
											"end": 6508,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6497,
											"end": 6508,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6478,
											"end": 6495,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6478,
											"end": 6495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 6443,
											"end": 6519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 6443,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "227D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6581,
											"name": "PUSH",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6582,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6582,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6625,
											"name": "PUSH",
											"source": 11,
											"value": "3A"
										},
										{
											"begin": 6615,
											"end": 6626,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6615,
											"end": 6626,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 4866,
											"end": 6632,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4866,
											"end": 6632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6819,
											"end": 7003,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 6819,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6889,
											"end": 6895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6942,
											"end": 6944,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6921,
											"end": 6928,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6917,
											"end": 6940,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 6945,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6956,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 6960,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 6910,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6819,
											"end": 7003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 7003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7008,
											"end": 9307,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 7008,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8104,
											"end": 8147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8147,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8170,
											"end": 8183,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8170,
											"end": 8183,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8086,
											"end": 8089,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8192,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 8170,
											"end": 8183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8256,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 8246,
											"end": 8257,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8246,
											"end": 8257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8244,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 8227,
											"end": 8244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8192,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 8192,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8192,
											"end": 8266,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 8192,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 8285,
											"end": 8301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8285,
											"end": 8301,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8285,
											"end": 8301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8327,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8327,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8317,
											"end": 8327,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8376,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8414,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8414,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8423,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 8401,
											"end": 8414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8485,
											"end": 8487,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 8477,
											"end": 8488,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8488,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8458,
											"end": 8475,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 8458,
											"end": 8475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8423,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 8423,
											"end": 8499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8423,
											"end": 8499,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 8423,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8559,
											"end": 8561,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8551,
											"end": 8562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8551,
											"end": 8562,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8551,
											"end": 8562,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8544,
											"end": 8599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8624,
											"end": 8637,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8624,
											"end": 8637,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8646,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 8624,
											"end": 8637,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8708,
											"end": 8710,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 8700,
											"end": 8711,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8700,
											"end": 8711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8681,
											"end": 8698,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 8681,
											"end": 8698,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8646,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 8646,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8646,
											"end": 8722,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 8646,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113130B630B731B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8782,
											"end": 8784,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 8741,
											"end": 8758,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8758,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8758,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8758,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8785,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 8826,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 8864,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 8864,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8873,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 8851,
											"end": 8864,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8935,
											"end": 8937,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8927,
											"end": 8938,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8927,
											"end": 8938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8920,
											"end": 8924,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8925,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8873,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 8873,
											"end": 8949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8873,
											"end": 8949,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 8873,
											"end": 8949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161139B637BA111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8968,
											"end": 8985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8968,
											"end": 8985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8968,
											"end": 8985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8968,
											"end": 8985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9001,
											"end": 9012,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9001,
											"end": 9012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9001,
											"end": 9012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8994,
											"end": 9047,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9072,
											"end": 9085,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9072,
											"end": 9085,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 9072,
											"end": 9085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9156,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "3C"
										},
										{
											"begin": 9148,
											"end": 9159,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9159,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9141,
											"end": 9145,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 9094,
											"end": 9170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9170,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 9094,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9186,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 9216,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 9242,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 9295,
											"end": 9297,
											"name": "PUSH",
											"source": 11,
											"value": "3C"
										},
										{
											"begin": 9284,
											"end": 9292,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9280,
											"end": 9282,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9276,
											"end": 9293,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9272,
											"end": 9298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "111611383937B832B93A34B2B9911D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1178,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1178,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1212,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9242,
											"end": 9299,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 9242,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9240,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 9216,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9300,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 9216,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1217,
											"end": 1331,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9186,
											"end": 9301,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 9186,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9179,
											"end": 9301,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": 7008,
											"end": 9307,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7008,
											"end": 9307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9312,
											"end": 9439,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 9312,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9373,
											"end": 9383,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 9368,
											"end": 9371,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9364,
											"end": 9384,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9361,
											"end": 9362,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9404,
											"end": 9408,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 9401,
											"end": 9402,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9394,
											"end": 9409,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9418,
											"end": 9433,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9444,
											"end": 9569,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 9444,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9509,
											"end": 9518,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9509,
											"end": 9518,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9509,
											"end": 9518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9530,
											"end": 9540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9530,
											"end": 9540,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9530,
											"end": 9540,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9527,
											"end": 9563,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9527,
											"end": 9563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9527,
											"end": 9563,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9543,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9543,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 9543,
											"end": 9561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9706,
											"end": 9923,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 9706,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9746,
											"end": 9747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9762,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 9762,
											"end": 9894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9816,
											"end": 9826,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 9811,
											"end": 9814,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9807,
											"end": 9827,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9804,
											"end": 9805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9797,
											"end": 9828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9851,
											"end": 9855,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 9848,
											"end": 9849,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9841,
											"end": 9856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9879,
											"end": 9883,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9876,
											"end": 9877,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9884,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9762,
											"end": 9894,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 9762,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9706,
											"end": 9923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9928,
											"end": 10096,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 9928,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10001,
											"end": 10010,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10001,
											"end": 10010,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10001,
											"end": 10010,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10049,
											"end": 10064,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10049,
											"end": 10064,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10049,
											"end": 10064,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10043,
											"end": 10065,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10043,
											"end": 10065,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10029,
											"end": 10066,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10019,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10019,
											"end": 10090,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 10070,
											"end": 10088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10101,
											"end": 10742,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 10101,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10381,
											"end": 10384,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10419,
											"end": 10425,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10413,
											"end": 10426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 10494,
											"end": 10500,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10489,
											"end": 10492,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10482,
											"end": 10486,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10487,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 10435,
											"end": 10501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10501,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 10435,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2023"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10548,
											"end": 10567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10548,
											"end": 10567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10548,
											"end": 10567,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10592,
											"end": 10605,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10592,
											"end": 10605,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 10592,
											"end": 10605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10679,
											"end": 10680,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10668,
											"end": 10681,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10668,
											"end": 10681,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10661,
											"end": 10665,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 10614,
											"end": 10692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10692,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 10614,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10712,
											"end": 10732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10734,
											"end": 10735,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10708,
											"end": 10736,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10736,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10101,
											"end": 10742,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10101,
											"end": 10742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IERC3525.sol",
								"contracts/IERC721.sol",
								"contracts/extensions/IERC3525Metadata.sol",
								"contracts/extensions/IERC721Metadata.sol",
								"contracts/periphery/ERC3525MetadataDescriptor.sol",
								"contracts/periphery/interface/IERC3525MetadataDescriptor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"constructContractURI()": "725fa09c",
							"constructSlotURI(uint256)": "6c037f8a",
							"constructTokenURI(uint256)": "894b4c2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"constructContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slot_\",\"type\":\"uint256\"}],\"name\":\"constructSlotURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"constructTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/ERC3525MetadataDescriptor.sol\":\"ERC3525MetadataDescriptor\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x6f7014d688c4386c26e8c02371ecb7f7740d2542f1ecadffd5a3084511e2a344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d8f5aabdb088f19c80ce460a2e670ecc651ff4ca46878d239e29bfe705e52c\",\"dweb:/ipfs/QmUveDGa7vEtYBxbVUajNcDvyjP6oaD7Va1M5qwZbudmAn\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/IERC3525.sol\":{\"keccak256\":\"0x901207b3c61837eeae24c25271533a0dd684745dad978235053fe4d9d86a9ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a72b6cd12e5f8eb092a358a919eeb62fd685ecdc9a8ebc6e222845ec6bfbe6\",\"dweb:/ipfs/QmeFMHVXcMzZ7PBY13m9wPfeuYqah7wyscKfyR4C7MogDZ\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x3553276ca123c09e0ebc3232afb0452dff1d2841e767e221deffe0633867f5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bed27e2b7297a37d632fe2088796626181824c9148b2893a30b447d87dd7312\",\"dweb:/ipfs/QmUbLTwJDzopZam1TVqkcWEd4nXmVkwrH2Yb6VTFT4DcTe\"]},\"contracts/extensions/IERC3525Metadata.sol\":{\"keccak256\":\"0xf8eec6537ae391a19bcb87fb4d417568012741f1cb05f292c252ef5560250a7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d87aaa39c94ab2b447c615a5bec5ff8166985d6034df188792eb4e64613cde1\",\"dweb:/ipfs/QmVPhg7pPth4wum5Cp5ruY33i9BVuiVJMMAeNq4bJHY43r\"]},\"contracts/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd3238d11cd53a7f65af1156c7891580eba0c9ed588ba821a84b039ca75627d76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ac46574057fc1885d585ad9d05dff2618a2abd291645e0061d3c3a0a1343b42\",\"dweb:/ipfs/QmRUaPW9bk4puerk3QRqiWbe25rFDgquEKmxWN1PcrtU1L\"]},\"contracts/periphery/ERC3525MetadataDescriptor.sol\":{\"keccak256\":\"0x086a22522f05e054bc886af2c583f359b15054d4c66abe1bbaf47481b5c2332e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://676d5e694138d59bc6e1d05ca24838896923a065ca8c237b6c596433a1f1ae3f\",\"dweb:/ipfs/QmVe7wQqajmT8DFAuqjkkJEfZ6XwB6kpsoPu3so79izq3n\"]},\"contracts/periphery/interface/IERC3525MetadataDescriptor.sol\":{\"keccak256\":\"0xc297d848cece83ff6d6d67e6f884667425445776b3b5c8fd185c4a01a2f79de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a498945e761792cbf32be30eb8f512b214260a55b56e325c2611e8caa23978bf\",\"dweb:/ipfs/QmZBr8aqYyyErUqHdGDhyZXyj4RUk2G1fsLfRtwdEC1Wf3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/periphery/interface/IERC3525MetadataDescriptor.sol": {
				"IERC3525MetadataDescriptor": {
					"abi": [
						{
							"inputs": [],
							"name": "constructContractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "slot",
									"type": "uint256"
								}
							],
							"name": "constructSlotURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "constructTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"constructContractURI()": "725fa09c",
							"constructSlotURI(uint256)": "6c037f8a",
							"constructTokenURI(uint256)": "894b4c2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"constructContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"constructSlotURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"constructTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/interface/IERC3525MetadataDescriptor.sol\":\"IERC3525MetadataDescriptor\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/interface/IERC3525MetadataDescriptor.sol\":{\"keccak256\":\"0xc297d848cece83ff6d6d67e6f884667425445776b3b5c8fd185c4a01a2f79de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a498945e761792cbf32be30eb8f512b214260a55b56e325c2611e8caa23978bf\",\"dweb:/ipfs/QmZBr8aqYyyErUqHdGDhyZXyj4RUk2G1fsLfRtwdEC1Wf3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/periphery/ERC3525MetadataDescriptor.sol:137:22:\n    |\n137 | function _tokenImage(uint256 tokenId_) internal view virtual returns (string memory) {\n    |                      ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4507,
					"file": "contracts/periphery/ERC3525MetadataDescriptor.sol",
					"start": 4491
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/Base64.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
					"exportedSymbols": {
						"Base64": [
							46
						]
					},
					"id": 47,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base64",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:75:0",
								"text": " @dev Provides a set of functions to operate with Base64 strings."
							},
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "Base64",
							"nameLocation": "210:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "223:54:0",
										"text": " @dev Base64 Encoding/Decoding Table"
									},
									"id": 6,
									"mutability": "constant",
									"name": "_TABLE",
									"nameLocation": "307:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 46,
									"src": "282:100:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 4,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "282:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce",
											"typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""
										},
										"value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "549:2953:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 14,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "766:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "771:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "766:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "781:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "766:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol",
												"id": 20,
												"nodeType": "IfStatement",
												"src": "762:31:0",
												"trueBody": {
													"expression": {
														"hexValue": "",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "791:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"functionReturnParameters": 13,
													"id": 19,
													"nodeType": "Return",
													"src": "784:9:0"
												}
											},
											{
												"assignments": [
													22
												],
												"declarations": [
													{
														"constant": false,
														"id": 22,
														"mutability": "mutable",
														"name": "table",
														"nameLocation": "857:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "843:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 21,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 24,
												"initialValue": {
													"id": 23,
													"name": "_TABLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "865:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "843:28:0"
											},
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1288:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "1274:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 25,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1274:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 40,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1308:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 36,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 33,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 30,
																							"name": "data",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 9,
																							"src": "1314:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 31,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1319:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1314:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 32,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1328:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "1314:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 34,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1313:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1333:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1313:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 37,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1312:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1308:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1297:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 27,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1301:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1274:62:0"
											},
											{
												"AST": {
													"nativeSrc": "1399:2073:0",
													"nodeType": "YulBlock",
													"src": "1399:2073:0",
													"statements": [
														{
															"nativeSrc": "1484:29:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1484:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "table",
																		"nativeSrc": "1504:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "1504:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1511:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1500:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:0"
																},
																"nativeSrc": "1500:13:0",
																"nodeType": "YulFunctionCall",
																"src": "1500:13:0"
															},
															"variables": [
																{
																	"name": "tablePtr",
																	"nativeSrc": "1488:8:0",
																	"nodeType": "YulTypedName",
																	"src": "1488:8:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1583:32:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1583:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "1604:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1612:2:0",
																		"nodeType": "YulLiteral",
																		"src": "1612:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1600:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:0"
																},
																"nativeSrc": "1600:15:0",
																"nodeType": "YulFunctionCall",
																"src": "1600:15:0"
															},
															"variables": [
																{
																	"name": "resultPtr",
																	"nativeSrc": "1587:9:0",
																	"nodeType": "YulTypedName",
																	"src": "1587:9:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1828:1257:0",
																"nodeType": "YulBlock",
																"src": "1828:1257:0",
																"statements": [
																	{
																		"nativeSrc": "1881:26:0",
																		"nodeType": "YulAssignment",
																		"src": "1881:26:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "1896:7:0",
																					"nodeType": "YulIdentifier",
																					"src": "1896:7:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1905:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:0",
																					"type": "",
																					"value": "3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1892:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "1892:3:0"
																			},
																			"nativeSrc": "1892:15:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1892:15:0"
																		},
																		"variableNames": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "1881:7:0",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1924:27:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1924:27:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "1943:7:0",
																					"nodeType": "YulIdentifier",
																					"src": "1943:7:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1937:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "1937:5:0"
																			},
																			"nativeSrc": "1937:14:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1937:14:0"
																		},
																		"variables": [
																			{
																				"name": "input",
																				"nativeSrc": "1928:5:0",
																				"nodeType": "YulTypedName",
																				"src": "1928:5:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2535:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "2535:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2556:8:0",
																									"nodeType": "YulIdentifier",
																									"src": "2556:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2574:2:0",
																													"nodeType": "YulLiteral",
																													"src": "2574:2:0",
																													"type": "",
																													"value": "18"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2578:5:0",
																													"nodeType": "YulIdentifier",
																													"src": "2578:5:0"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2570:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "2570:3:0"
																											},
																											"nativeSrc": "2570:14:0",
																											"nodeType": "YulFunctionCall",
																											"src": "2570:14:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2586:4:0",
																											"nodeType": "YulLiteral",
																											"src": "2586:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2566:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "2566:3:0"
																									},
																									"nativeSrc": "2566:25:0",
																									"nodeType": "YulFunctionCall",
																									"src": "2566:25:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2552:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "2552:3:0"
																							},
																							"nativeSrc": "2552:40:0",
																							"nodeType": "YulFunctionCall",
																							"src": "2552:40:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2546:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "2546:5:0"
																					},
																					"nativeSrc": "2546:47:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2546:47:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2527:7:0",
																				"nodeType": "YulIdentifier",
																				"src": "2527:7:0"
																			},
																			"nativeSrc": "2527:67:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2527:67:0"
																		},
																		"nativeSrc": "2527:67:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "2527:67:0"
																	},
																	{
																		"nativeSrc": "2611:30:0",
																		"nodeType": "YulAssignment",
																		"src": "2611:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2628:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "2628:9:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2639:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2624:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "2624:3:0"
																			},
																			"nativeSrc": "2624:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2624:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2611:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2678:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "2678:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2699:8:0",
																									"nodeType": "YulIdentifier",
																									"src": "2699:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2717:2:0",
																													"nodeType": "YulLiteral",
																													"src": "2717:2:0",
																													"type": "",
																													"value": "12"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2721:5:0",
																													"nodeType": "YulIdentifier",
																													"src": "2721:5:0"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2713:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "2713:3:0"
																											},
																											"nativeSrc": "2713:14:0",
																											"nodeType": "YulFunctionCall",
																											"src": "2713:14:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2729:4:0",
																											"nodeType": "YulLiteral",
																											"src": "2729:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2709:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "2709:3:0"
																									},
																									"nativeSrc": "2709:25:0",
																									"nodeType": "YulFunctionCall",
																									"src": "2709:25:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:0"
																							},
																							"nativeSrc": "2695:40:0",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:40:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:0"
																					},
																					"nativeSrc": "2689:47:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:47:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2670:7:0",
																				"nodeType": "YulIdentifier",
																				"src": "2670:7:0"
																			},
																			"nativeSrc": "2670:67:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:67:0"
																		},
																		"nativeSrc": "2670:67:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:67:0"
																	},
																	{
																		"nativeSrc": "2754:30:0",
																		"nodeType": "YulAssignment",
																		"src": "2754:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2771:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "2771:9:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2782:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2782:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2767:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "2767:3:0"
																			},
																			"nativeSrc": "2767:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2767:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2754:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2821:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "2821:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2842:8:0",
																									"nodeType": "YulIdentifier",
																									"src": "2842:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2860:1:0",
																													"nodeType": "YulLiteral",
																													"src": "2860:1:0",
																													"type": "",
																													"value": "6"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2863:5:0",
																													"nodeType": "YulIdentifier",
																													"src": "2863:5:0"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2856:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "2856:3:0"
																											},
																											"nativeSrc": "2856:13:0",
																											"nodeType": "YulFunctionCall",
																											"src": "2856:13:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2871:4:0",
																											"nodeType": "YulLiteral",
																											"src": "2871:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2852:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "2852:3:0"
																									},
																									"nativeSrc": "2852:24:0",
																									"nodeType": "YulFunctionCall",
																									"src": "2852:24:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2838:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "2838:3:0"
																							},
																							"nativeSrc": "2838:39:0",
																							"nodeType": "YulFunctionCall",
																							"src": "2838:39:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2832:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "2832:5:0"
																					},
																					"nativeSrc": "2832:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:46:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2813:7:0",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:0"
																			},
																			"nativeSrc": "2813:66:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2813:66:0"
																		},
																		"nativeSrc": "2813:66:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "2813:66:0"
																	},
																	{
																		"nativeSrc": "2896:30:0",
																		"nodeType": "YulAssignment",
																		"src": "2896:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2913:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "2913:9:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2924:1:0",
																					"nodeType": "YulLiteral",
																					"src": "2924:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2909:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "2909:3:0"
																			},
																			"nativeSrc": "2909:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2909:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2896:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "2896:9:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2963:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "2963:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2984:8:0",
																									"nodeType": "YulIdentifier",
																									"src": "2984:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"name": "input",
																											"nativeSrc": "2998:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "2998:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3005:4:0",
																											"nodeType": "YulLiteral",
																											"src": "3005:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2994:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "2994:3:0"
																									},
																									"nativeSrc": "2994:16:0",
																									"nodeType": "YulFunctionCall",
																									"src": "2994:16:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2980:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "2980:3:0"
																							},
																							"nativeSrc": "2980:31:0",
																							"nodeType": "YulFunctionCall",
																							"src": "2980:31:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2974:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "2974:5:0"
																					},
																					"nativeSrc": "2974:38:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2974:38:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2955:7:0",
																				"nodeType": "YulIdentifier",
																				"src": "2955:7:0"
																			},
																			"nativeSrc": "2955:58:0",
																			"nodeType": "YulFunctionCall",
																			"src": "2955:58:0"
																		},
																		"nativeSrc": "2955:58:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "2955:58:0"
																	},
																	{
																		"nativeSrc": "3030:30:0",
																		"nodeType": "YulAssignment",
																		"src": "3030:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3047:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "3047:9:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3058:1:0",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3043:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3043:3:0"
																			},
																			"nativeSrc": "3043:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3043:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3030:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "3030:9:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "dataPtr",
																		"nativeSrc": "1794:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "1794:7:0"
																	},
																	{
																		"name": "endPtr",
																		"nativeSrc": "1803:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "1803:6:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1791:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "1791:2:0"
																},
																"nativeSrc": "1791:19:0",
																"nodeType": "YulFunctionCall",
																"src": "1791:19:0"
															},
															"nativeSrc": "1682:1403:0",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1811:16:0",
																"nodeType": "YulBlock",
																"src": "1811:16:0",
																"statements": []
															},
															"pre": {
																"nativeSrc": "1686:104:0",
																"nodeType": "YulBlock",
																"src": "1686:104:0",
																"statements": [
																	{
																		"nativeSrc": "1704:19:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1704:19:0",
																		"value": {
																			"name": "data",
																			"nativeSrc": "1719:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "1719:4:0"
																		},
																		"variables": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "1708:7:0",
																				"nodeType": "YulTypedName",
																				"src": "1708:7:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1740:36:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1740:36:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1758:4:0",
																					"nodeType": "YulIdentifier",
																					"src": "1758:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nativeSrc": "1770:4:0",
																							"nodeType": "YulIdentifier",
																							"src": "1770:4:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1764:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "1764:5:0"
																					},
																					"nativeSrc": "1764:11:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1764:11:0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1754:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "1754:3:0"
																			},
																			"nativeSrc": "1754:22:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1754:22:0"
																		},
																		"variables": [
																			{
																				"name": "endPtr",
																				"nativeSrc": "1744:6:0",
																				"nodeType": "YulTypedName",
																				"src": "1744:6:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1682:1403:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3265:113:0",
																		"nodeType": "YulBlock",
																		"src": "3265:113:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3295:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "3295:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3306:1:0",
																									"nodeType": "YulLiteral",
																									"src": "3306:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3291:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "3291:3:0"
																							},
																							"nativeSrc": "3291:17:0",
																							"nodeType": "YulFunctionCall",
																							"src": "3291:17:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3310:4:0",
																							"nodeType": "YulLiteral",
																							"src": "3310:4:0",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3283:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "3283:7:0"
																					},
																					"nativeSrc": "3283:32:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3283:32:0"
																				},
																				"nativeSrc": "3283:32:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "3283:32:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3344:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "3344:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3355:1:0",
																									"nodeType": "YulLiteral",
																									"src": "3355:1:0",
																									"type": "",
																									"value": "2"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3340:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "3340:3:0"
																							},
																							"nativeSrc": "3340:17:0",
																							"nodeType": "YulFunctionCall",
																							"src": "3340:17:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3359:4:0",
																							"nodeType": "YulLiteral",
																							"src": "3359:4:0",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3332:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "3332:7:0"
																					},
																					"nativeSrc": "3332:32:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3332:32:0"
																				},
																				"nativeSrc": "3332:32:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "3332:32:0"
																			}
																		]
																	},
																	"nativeSrc": "3258:120:0",
																	"nodeType": "YulCase",
																	"src": "3258:120:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3263:1:0",
																		"nodeType": "YulLiteral",
																		"src": "3263:1:0",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3398:64:0",
																		"nodeType": "YulBlock",
																		"src": "3398:64:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3428:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "3428:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3439:1:0",
																									"nodeType": "YulLiteral",
																									"src": "3439:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3424:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "3424:3:0"
																							},
																							"nativeSrc": "3424:17:0",
																							"nodeType": "YulFunctionCall",
																							"src": "3424:17:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3443:4:0",
																							"nodeType": "YulLiteral",
																							"src": "3443:4:0",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3416:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "3416:7:0"
																					},
																					"nativeSrc": "3416:32:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3416:32:0"
																				},
																				"nativeSrc": "3416:32:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "3416:32:0"
																			}
																		]
																	},
																	"nativeSrc": "3391:71:0",
																	"nodeType": "YulCase",
																	"src": "3391:71:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3396:1:0",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:0",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3236:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "3236:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3230:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "3230:5:0"
																		},
																		"nativeSrc": "3230:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3230:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3243:1:0",
																		"nodeType": "YulLiteral",
																		"src": "3243:1:0",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3226:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:0"
																},
																"nativeSrc": "3226:19:0",
																"nodeType": "YulFunctionCall",
																"src": "3226:19:0"
															},
															"nativeSrc": "3219:243:0",
															"nodeType": "YulSwitch",
															"src": "3219:243:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1719:4:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1758:4:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1770:4:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "3236:4:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "1604:6:0",
														"valueSize": 1
													},
													{
														"declaration": 22,
														"isOffset": false,
														"isSlot": false,
														"src": "1504:5:0",
														"valueSize": 1
													}
												],
												"id": 41,
												"nodeType": "InlineAssembly",
												"src": "1390:2082:0"
											},
											{
												"expression": {
													"id": 42,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3489:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 13,
												"id": 43,
												"nodeType": "Return",
												"src": "3482:13:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "389:82:0",
										"text": " @dev Converts a `bytes` to its Bytes64 `string` representation."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nameLocation": "485:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "505:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "492:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:19:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "534:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "534:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:15:0"
									},
									"scope": 46,
									"src": "476:3026:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 47,
							"src": "202:3302:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3405:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1367
						],
						"SignedMath": [
							1472
						],
						"Strings": [
							301
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 48,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 50,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 1368,
							"src": "127:37:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 49,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1367,
										"src": "135:4:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 1473,
							"src": "165:49:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 51,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1472,
										"src": "173:10:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 53,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:1",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301
							],
							"name": "Strings",
							"nameLocation": "259:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 56,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "273:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 54,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "335:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 57,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:1",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 66,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "505:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "520:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:1"
									},
									"src": "470:66:1"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "708:627:1",
										"statements": [
											{
												"id": 112,
												"nodeType": "UncheckedBlock",
												"src": "718:611:1",
												"statements": [
													{
														"assignments": [
															75
														],
														"declarations": [
															{
																"constant": false,
																"id": 75,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 112,
																"src": "742:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 74,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 82,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 78,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 69,
																		"src": "770:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 76,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "759:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1367_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:1",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1187,
																	"src": "759:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:1"
													},
													{
														"assignments": [
															84
														],
														"declarations": [
															{
																"constant": false,
																"id": 84,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 112,
																"src": "794:20:1",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 83,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 89,
														"initialValue": {
															"arguments": [
																{
																	"id": 87,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "828:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 85,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:1"
													},
													{
														"assignments": [
															91
														],
														"declarations": [
															{
																"constant": false,
																"id": 91,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 112,
																"src": "849:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 90,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 92,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:1"
													},
													{
														"AST": {
															"nativeSrc": "930:67:1",
															"nodeType": "YulBlock",
															"src": "930:67:1",
															"statements": [
																{
																	"nativeSrc": "948:35:1",
																	"nodeType": "YulAssignment",
																	"src": "948:35:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:1",
																						"nodeType": "YulLiteral",
																						"src": "971:2:1",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:1"
																				},
																				"nativeSrc": "967:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:1"
																		},
																		"nativeSrc": "955:28:1",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:1"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:1"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 84,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:1",
																"valueSize": 1
															},
															{
																"declaration": 75,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:1",
																"valueSize": 1
															},
															{
																"declaration": 91,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:1",
																"valueSize": 1
															}
														],
														"id": 93,
														"nodeType": "InlineAssembly",
														"src": "921:76:1"
													},
													{
														"body": {
															"id": 108,
															"nodeType": "Block",
															"src": "1023:269:1",
															"statements": [
																{
																	"expression": {
																		"id": 96,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:1",
																		"subExpression": {
																			"id": 95,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "1041:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 97,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:1"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:1",
																		"nodeType": "YulBlock",
																		"src": "1124:86:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:1",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:1",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:1"
																									},
																									"nativeSrc": "1164:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:1"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:1"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:1"
																							},
																							"nativeSrc": "1159:32:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:1"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:1"
																					},
																					"nativeSrc": "1146:46:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:1"
																				},
																				"nativeSrc": "1146:46:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:1"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 56,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 91,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 69,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:1",
																			"valueSize": 1
																		}
																	],
																	"id": 98,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:1"
																},
																{
																	"expression": {
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 99,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 69,
																			"src": "1227:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 102,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 103,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 69,
																			"src": "1260:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 107,
																	"nodeType": "IfStatement",
																	"src": "1256:21:1",
																	"trueBody": {
																		"id": 106,
																		"nodeType": "Break",
																		"src": "1272:5:1"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 109,
														"nodeType": "WhileStatement",
														"src": "1010:282:1"
													},
													{
														"expression": {
															"id": 110,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1312:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 73,
														"id": 111,
														"nodeType": "Return",
														"src": "1305:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "693:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 71,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:1"
									},
									"scope": 301,
									"src": "637:698:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1511:92:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 125,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "1542:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:1",
															"trueExpression": {
																"hexValue": "2d",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 117,
																			"src": "1588:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 132,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "1573:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1472_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:1",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1471,
																		"src": "1573:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 131,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "1564:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 122,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:1",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 138,
												"nodeType": "Return",
												"src": "1521:75:1"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:1",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1459:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 116,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1496:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:1"
									},
									"scope": 301,
									"src": "1435:168:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1782:100:1",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 149,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1835:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 152,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 143,
																				"src": "1854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 150,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1367,
																				"src": "1842:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1367_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:1",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1309,
																			"src": "1842:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 148,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	160,
																	243,
																	263
																],
																"referencedDeclaration": 243,
																"src": "1823:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 147,
														"id": 157,
														"nodeType": "Return",
														"src": "1816:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1729:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1767:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:1"
									},
									"scope": 301,
									"src": "1708:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2095:435:1",
										"statements": [
											{
												"assignments": [
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 171,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "2105:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"id": 172,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "2126:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:1"
											},
											{
												"assignments": [
													175
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "2141:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 174,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 179,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "2177:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 176,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 185,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2198:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 187,
														"indexExpression": {
															"hexValue": "30",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:1"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 191,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2223:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 193,
														"indexExpression": {
															"hexValue": "31",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:1"
											},
											{
												"body": {
													"id": 225,
													"nodeType": "Block",
													"src": "2293:95:1",
													"statements": [
														{
															"expression": {
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 211,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 175,
																		"src": "2307:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 213,
																	"indexExpression": {
																		"id": 212,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2314:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 214,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "2319:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 218,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 215,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "2330:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 220,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:1"
														},
														{
															"expression": {
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 221,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "2361:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 224,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 205,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2281:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"initializationExpression": {
													"assignments": [
														198
													],
													"declarations": [
														{
															"constant": false,
															"id": 198,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 226,
															"src": "2253:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 197,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 204,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 200,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "2269:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:1"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:1",
														"subExpression": {
															"id": 208,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2290:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 210,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 227,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2401:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "IfStatement",
												"src": "2397:96:1",
												"trueBody": {
													"id": 235,
													"nodeType": "Block",
													"src": "2418:75:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 231,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "2468:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 232,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "2475:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 230,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "2439:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 234,
															"nodeType": "RevertStatement",
															"src": "2432:50:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2516:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 237,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 241,
												"nodeType": "Return",
												"src": "2502:21:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2026:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2041:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2080:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:1"
									},
									"scope": 301,
									"src": "2005:525:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "2762:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 256,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "2807:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 254,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 259,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2815:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 251,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															160,
															243,
															263
														],
														"referencedDeclaration": 243,
														"src": "2779:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 250,
												"id": 261,
												"nodeType": "Return",
												"src": "2772:58:1"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:1",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2710:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2747:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 248,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:1"
									},
									"scope": 301,
									"src": "2689:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2992:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "3015:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 273,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3034:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 278,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 287,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "3063:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 285,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 284,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 293,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "3086:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 291,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 290,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 272,
												"id": 298,
												"nodeType": "Return",
												"src": "3002:87:1"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:1",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2929:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2946:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2986:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:1"
									},
									"scope": 301,
									"src": "2914:182:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 302,
							"src": "251:2847:1",
							"usedErrors": [
								66
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							313
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 304,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 313,
							"linearizedBaseContracts": [
								313
							],
							"name": "IERC165",
							"nameLocation": "431:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "817:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 306,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "860:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:2"
									},
									"scope": 313,
									"src": "790:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 314,
							"src": "421:447:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1367
						]
					},
					"id": 1368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:3",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1367,
							"linearizedBaseContracts": [
								1367
							],
							"name": "Math",
							"nameLocation": "211:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:3",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 319,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:3"
									},
									"src": "277:29:3"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 324,
									"members": [
										{
											"id": 320,
											"name": "Floor",
											"nameLocation": "336:5:3",
											"nodeType": "EnumValue",
											"src": "336:5:3"
										},
										{
											"id": 321,
											"name": "Ceil",
											"nameLocation": "379:4:3",
											"nodeType": "EnumValue",
											"src": "379:4:3"
										},
										{
											"id": 322,
											"name": "Trunc",
											"nameLocation": "421:5:3",
											"nodeType": "EnumValue",
											"src": "421:5:3"
										},
										{
											"id": 323,
											"name": "Expand",
											"nameLocation": "451:6:3",
											"nodeType": "EnumValue",
											"src": "451:6:3"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:3",
									"nodeType": "EnumDefinition",
									"src": "312:169:3"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "661:140:3",
										"statements": [
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "671:124:3",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 354,
																"src": "695:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 341,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 338,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "707:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "711:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "730:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 343,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 349,
														"nodeType": "IfStatement",
														"src": "726:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 347,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 335,
															"id": 348,
															"nodeType": "Return",
															"src": "737:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 351,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "782:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 352,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 335,
														"id": 353,
														"nodeType": "Return",
														"src": "768:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "601:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "612:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:3"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "646:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "652:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:3"
									},
									"scope": 1367,
									"src": "585:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "984:113:3",
										"statements": [
											{
												"id": 382,
												"nodeType": "UncheckedBlock",
												"src": "994:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "1022:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 369,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "1026:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 375,
														"nodeType": "IfStatement",
														"src": "1018:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 367,
															"id": 374,
															"nodeType": "Return",
															"src": "1029:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 377,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "1074:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 378,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "1078:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 367,
														"id": 381,
														"nodeType": "Return",
														"src": "1060:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "924:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "935:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "969:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "975:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:3"
									},
									"scope": 1367,
									"src": "908:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1283:417:3",
										"statements": [
											{
												"id": 424,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 396,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "1551:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 403,
														"nodeType": "IfStatement",
														"src": "1547:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 401,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 395,
															"id": 402,
															"nodeType": "Return",
															"src": "1559:16:3"
														}
													},
													{
														"assignments": [
															405
														],
														"declarations": [
															{
																"constant": false,
																"id": 405,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 424,
																"src": "1589:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 404,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 409,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "1601:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1605:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 410,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "1624:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 411,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "1628:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 413,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1633:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 419,
														"nodeType": "IfStatement",
														"src": "1620:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 417,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 395,
															"id": 418,
															"nodeType": "Return",
															"src": "1636:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 421,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "1681:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 422,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 395,
														"id": 423,
														"nodeType": "Return",
														"src": "1667:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1223:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1234:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:3"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1274:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:3"
									},
									"scope": 1367,
									"src": "1207:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1887:114:3",
										"statements": [
											{
												"id": 452,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 438,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "1925:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 445,
														"nodeType": "IfStatement",
														"src": "1921:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 437,
															"id": 444,
															"nodeType": "Return",
															"src": "1933:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 447,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1978:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 448,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "1982:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 437,
														"id": 451,
														"nodeType": "Return",
														"src": "1964:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1827:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1838:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:3"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1872:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:3"
									},
									"scope": 1367,
									"src": "1811:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2198:114:3",
										"statements": [
											{
												"id": 480,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 466,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2236:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 473,
														"nodeType": "IfStatement",
														"src": "2232:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 465,
															"id": 472,
															"nodeType": "Return",
															"src": "2244:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 475,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2289:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "2293:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 478,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 465,
														"id": 479,
														"nodeType": "Return",
														"src": "2275:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2138:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:3"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2183:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2189:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:3"
									},
									"scope": 1367,
									"src": "2122:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2449:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 492,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "2466:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 493,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "2470:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 496,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2478:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:3",
													"trueExpression": {
														"id": 495,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2474:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 498,
												"nodeType": "Return",
												"src": "2459:20:3"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:3",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2395:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2406:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:3"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2440:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:3"
									},
									"scope": 1367,
									"src": "2382:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "2624:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 510,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2641:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 511,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "2645:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 514,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2653:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:3",
													"trueExpression": {
														"id": 513,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "2649:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 509,
												"id": 516,
												"nodeType": "Return",
												"src": "2634:20:3"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:3",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2570:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2581:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2615:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:3"
									},
									"scope": 1367,
									"src": "2557:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "2845:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "2900:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 529,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "2904:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 531,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 532,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "2910:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 533,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "2914:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 527,
												"id": 539,
												"nodeType": "Return",
												"src": "2892:28:3"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:3",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2791:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2802:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2836:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:3"
									},
									"scope": 1367,
									"src": "2774:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3219:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "3233:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 559,
												"nodeType": "IfStatement",
												"src": "3229:127:3",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "3241:115:3",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 554,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3340:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 555,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "3344:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 550,
															"id": 557,
															"nodeType": "Return",
															"src": "3333:12:3"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 560,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3444:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 564,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "3458:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 567,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 568,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "3467:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:3",
													"trueExpression": {
														"hexValue": "30",
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 550,
												"id": 573,
												"nodeType": "Return",
												"src": "3437:35:3"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:3",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3165:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3176:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3210:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:3"
									},
									"scope": 1367,
									"src": "3148:331:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "3901:4018:3",
										"statements": [
											{
												"id": 699,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:3",
												"statements": [
													{
														"assignments": [
															588
														],
														"declarations": [
															{
																"constant": false,
																"id": 588,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:3",
																"nodeType": "VariableDeclaration",
																"scope": 699,
																"src": "4232:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 587,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 592,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "4248:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 590,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "4252:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:3"
													},
													{
														"assignments": [
															594
														],
														"declarations": [
															{
																"constant": false,
																"id": 594,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:3",
																"nodeType": "VariableDeclaration",
																"scope": 699,
																"src": "4312:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 593,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 595,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:3"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:3",
															"nodeType": "YulBlock",
															"src": "4392:122:3",
															"statements": [
																{
																	"nativeSrc": "4410:30:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:3"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:3",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:3"
																				},
																				"nativeSrc": "4433:6:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:3"
																		},
																		"nativeSrc": "4420:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:3"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:3",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:3",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:3"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:3"
																				},
																				"nativeSrc": "4470:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:3"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:3"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:3"
																				},
																				"nativeSrc": "4486:13:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:3"
																		},
																		"nativeSrc": "4466:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:3",
																"valueSize": 1
															},
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:3",
																"valueSize": 1
															},
															{
																"declaration": 578,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:3",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:3",
																"valueSize": 1
															}
														],
														"id": 596,
														"nodeType": "InlineAssembly",
														"src": "4383:131:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 597,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "4595:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 605,
														"nodeType": "IfStatement",
														"src": "4591:368:3",
														"trueBody": {
															"id": 604,
															"nodeType": "Block",
															"src": "4607:352:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "4925:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 601,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "4933:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 586,
																	"id": 603,
																	"nodeType": "Return",
																	"src": "4918:26:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5065:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 607,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "5080:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 613,
														"nodeType": "IfStatement",
														"src": "5061:88:3",
														"trueBody": {
															"id": 612,
															"nodeType": "Block",
															"src": "5087:62:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 609,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "5112:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 611,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:3"
																}
															]
														}
													},
													{
														"assignments": [
															615
														],
														"declarations": [
															{
																"constant": false,
																"id": 615,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:3",
																"nodeType": "VariableDeclaration",
																"scope": 699,
																"src": "5404:17:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 614,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 616,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:3"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:3",
															"nodeType": "YulBlock",
															"src": "5444:291:3",
															"statements": [
																{
																	"nativeSrc": "5513:38:3",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:3"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:3"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:3",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:3"
																		},
																		"nativeSrc": "5526:25:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:3"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:3"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:3",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:3"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:3"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:3"
																				},
																				"nativeSrc": "5653:20:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:3"
																		},
																		"nativeSrc": "5642:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:3"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:3",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:3"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:3"
																		},
																		"nativeSrc": "5700:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 582,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:3",
																"valueSize": 1
															},
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:3",
																"valueSize": 1
															},
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:3",
																"valueSize": 1
															},
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:3",
																"valueSize": 1
															},
															{
																"declaration": 615,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:3",
																"valueSize": 1
															},
															{
																"declaration": 615,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:3",
																"valueSize": 1
															},
															{
																"declaration": 615,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:3",
																"valueSize": 1
															},
															{
																"declaration": 578,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:3",
																"valueSize": 1
															},
															{
																"declaration": 580,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:3",
																"valueSize": 1
															}
														],
														"id": 617,
														"nodeType": "InlineAssembly",
														"src": "5435:300:3"
													},
													{
														"assignments": [
															619
														],
														"declarations": [
															{
																"constant": false,
																"id": 619,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:3",
																"nodeType": "VariableDeclaration",
																"scope": 699,
																"src": "5939:12:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 626,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 620,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5954:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 622,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5973:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:3"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:3",
															"nodeType": "YulBlock",
															"src": "6008:362:3",
															"statements": [
																{
																	"nativeSrc": "6073:37:3",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:3",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:3"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:3"
																		},
																		"nativeSrc": "6088:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:3"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:3",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:3"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:3",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:3"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:3"
																		},
																		"nativeSrc": "6186:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:3"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:3",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:3",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:3",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:3",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:3"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:3"
																						},
																						"nativeSrc": "6333:12:3",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:3"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:3"
																				},
																				"nativeSrc": "6329:23:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:3"
																		},
																		"nativeSrc": "6325:31:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:3"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:3",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 582,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:3",
																"valueSize": 1
															},
															{
																"declaration": 582,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:3",
																"valueSize": 1
															},
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:3",
																"valueSize": 1
															},
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:3",
																"valueSize": 1
															},
															{
																"declaration": 619,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:3",
																"valueSize": 1
															},
															{
																"declaration": 619,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:3",
																"valueSize": 1
															},
															{
																"declaration": 619,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:3",
																"valueSize": 1
															},
															{
																"declaration": 619,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:3",
																"valueSize": 1
															},
															{
																"declaration": 619,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:3",
																"valueSize": 1
															}
														],
														"id": 627,
														"nodeType": "InlineAssembly",
														"src": "5999:371:3"
													},
													{
														"expression": {
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 628,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "6436:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 629,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "6445:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 630,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6453:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 633,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:3"
													},
													{
														"assignments": [
															635
														],
														"declarations": [
															{
																"constant": false,
																"id": 635,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:3",
																"nodeType": "VariableDeclaration",
																"scope": 699,
																"src": "6775:15:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 634,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 642,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 637,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "6798:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 639,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:3"
													},
													{
														"expression": {
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 643,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7031:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 645,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7046:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 646,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "7060:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 650,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:3"
													},
													{
														"expression": {
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 651,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7100:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7115:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 654,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "7129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 658,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:3"
													},
													{
														"expression": {
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 659,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7170:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 661,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7185:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 662,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "7199:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 666,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:3"
													},
													{
														"expression": {
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 667,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7240:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 669,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7255:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 670,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "7269:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 674,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:3"
													},
													{
														"expression": {
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 675,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7310:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 677,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7325:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 678,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "7339:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 682,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:3"
													},
													{
														"expression": {
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 683,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7381:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 685,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7396:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 686,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "7410:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 690,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:3"
													},
													{
														"expression": {
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 691,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "7851:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 692,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "7860:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 693,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "7868:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 696,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:3"
													},
													{
														"expression": {
															"id": 697,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "7896:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 586,
														"id": 698,
														"nodeType": "Return",
														"src": "7889:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:3",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3819:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3830:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3841:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "3885:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:3"
									},
									"scope": 1367,
									"src": "3803:4116:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8161:192:3",
										"statements": [
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8171:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [
														{
															"id": 719,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "8195:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 720,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8198:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 721,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "8201:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 718,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															701,
															744
														],
														"referencedDeclaration": 701,
														"src": "8188:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 725,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "8244:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$324",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$324",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 724,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "8227:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$324_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 728,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "8264:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 729,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "8267:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 730,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "8270:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 727,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 740,
												"nodeType": "IfStatement",
												"src": "8223:101:3",
												"trueBody": {
													"id": 739,
													"nodeType": "Block",
													"src": "8288:36:3",
													"statements": [
														{
															"expression": {
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 735,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "8302:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 738,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 741,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "8340:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 715,
												"id": 742,
												"nodeType": "Return",
												"src": "8333:13:3"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:3",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8067:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8078:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8089:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8110:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$324",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 709,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 324,
														"src": "8110:8:3"
													},
													"referencedDeclaration": 324,
													"src": "8110:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$324",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8152:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:3"
									},
									"scope": 1367,
									"src": "8051:302:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "8644:1585:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 752,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "8658:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 758,
												"nodeType": "IfStatement",
												"src": "8654:45:3",
												"trueBody": {
													"id": 757,
													"nodeType": "Block",
													"src": "8666:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 751,
															"id": 756,
															"nodeType": "Return",
															"src": "8680:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "9378:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 763,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "9406:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 762,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1023,
																			1058
																		],
																		"referencedDeclaration": 1023,
																		"src": "9401:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 767,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:3"
											},
											{
												"id": 854,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:3",
												"statements": [
													{
														"expression": {
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 770,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "9839:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 771,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "9849:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 772,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "9858:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 773,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "9862:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 776,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 780,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:3"
													},
													{
														"expression": {
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 781,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "9888:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 782,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "9898:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 783,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "9907:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 784,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "9911:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 791,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:3"
													},
													{
														"expression": {
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "9937:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 793,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "9947:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 794,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "9956:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 795,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "9960:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 798,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:3"
													},
													{
														"expression": {
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 803,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "9986:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 804,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "9996:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 805,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "10005:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 806,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "10009:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 809,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 813,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:3"
													},
													{
														"expression": {
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "10035:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 815,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "10045:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 816,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "10054:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 817,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "10058:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 820,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 824,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:3"
													},
													{
														"expression": {
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 825,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "10084:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 826,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "10094:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 827,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "10103:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 828,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "10107:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 831,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 835,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:3"
													},
													{
														"expression": {
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 836,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "10133:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 837,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "10143:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 838,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "10152:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 839,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "10156:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 848,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "10193:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 849,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "10201:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 850,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10205:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 847,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "10189:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 751,
														"id": 853,
														"nodeType": "Return",
														"src": "10182:30:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:3",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "8601:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "8635:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:3"
									},
									"scope": 1367,
									"src": "8587:1642:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "10405:164:3",
										"statements": [
											{
												"id": 889,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:3",
												"statements": [
													{
														"assignments": [
															868
														],
														"declarations": [
															{
																"constant": false,
																"id": 868,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 889,
																"src": "10439:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 867,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 872,
														"initialValue": {
															"arguments": [
																{
																	"id": 870,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "10461:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 869,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	856,
																	891
																],
																"referencedDeclaration": 856,
																"src": "10456:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 873,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "10484:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 875,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 862,
																						"src": "10511:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 874,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "10494:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$324_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 879,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 877,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 868,
																						"src": "10524:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 878,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 868,
																						"src": "10533:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 880,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 859,
																					"src": "10542:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 886,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 866,
														"id": 888,
														"nodeType": "Return",
														"src": "10477:75:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:3",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "10343:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "10354:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$324",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 861,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 860,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 324,
														"src": "10354:8:3"
													},
													"referencedDeclaration": 324,
													"src": "10354:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$324",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:3"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "10396:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:3"
									},
									"scope": 1367,
									"src": "10329:240:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "10760:922:3",
										"statements": [
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "10770:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"hexValue": "30",
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:3"
											},
											{
												"id": 1019,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 903,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "10826:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 917,
														"nodeType": "IfStatement",
														"src": "10822:99:3",
														"trueBody": {
															"id": 916,
															"nodeType": "Block",
															"src": "10844:77:3",
															"statements": [
																{
																	"expression": {
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 908,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "10862:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 911,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:3"
																},
																{
																	"expression": {
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 912,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "10893:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 915,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 918,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "10938:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 932,
														"nodeType": "IfStatement",
														"src": "10934:96:3",
														"trueBody": {
															"id": 931,
															"nodeType": "Block",
															"src": "10955:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 923,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "10973:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:3"
																},
																{
																	"expression": {
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 927,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11003:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 930,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 933,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "11047:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 947,
														"nodeType": "IfStatement",
														"src": "11043:96:3",
														"trueBody": {
															"id": 946,
															"nodeType": "Block",
															"src": "11064:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 938,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "11082:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 941,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:3"
																},
																{
																	"expression": {
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 942,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11112:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 945,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "11156:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 962,
														"nodeType": "IfStatement",
														"src": "11152:96:3",
														"trueBody": {
															"id": 961,
															"nodeType": "Block",
															"src": "11173:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 953,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "11191:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 956,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:3"
																},
																{
																	"expression": {
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 957,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11221:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 960,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 963,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "11265:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 977,
														"nodeType": "IfStatement",
														"src": "11261:93:3",
														"trueBody": {
															"id": 976,
															"nodeType": "Block",
															"src": "11281:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 968,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "11299:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 971,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:3"
																},
																{
																	"expression": {
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 972,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11328:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 975,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "11371:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 992,
														"nodeType": "IfStatement",
														"src": "11367:93:3",
														"trueBody": {
															"id": 991,
															"nodeType": "Block",
															"src": "11387:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "11405:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 986,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:3"
																},
																{
																	"expression": {
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 987,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11434:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 990,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 993,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "11477:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1007,
														"nodeType": "IfStatement",
														"src": "11473:93:3",
														"trueBody": {
															"id": 1006,
															"nodeType": "Block",
															"src": "11493:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 998,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "11511:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1001,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:3"
																},
																{
																	"expression": {
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1002,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11540:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1005,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "11583:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1018,
														"nodeType": "IfStatement",
														"src": "11579:64:3",
														"trueBody": {
															"id": 1017,
															"nodeType": "Block",
															"src": "11599:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1013,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11617:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1016,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1020,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 900,
													"src": "11669:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 898,
												"id": 1021,
												"nodeType": "Return",
												"src": "11662:13:3"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:3",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "10713:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:3"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "10751:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:3"
									},
									"scope": 1367,
									"src": "10699:983:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "11915:168:3",
										"statements": [
											{
												"id": 1056,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:3",
												"statements": [
													{
														"assignments": [
															1035
														],
														"declarations": [
															{
																"constant": false,
																"id": 1035,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1056,
																"src": "11949:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1034,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1039,
														"initialValue": {
															"arguments": [
																{
																	"id": 1037,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "11971:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1036,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1023,
																	1058
																],
																"referencedDeclaration": 1023,
																"src": "11966:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1040,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "11998:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1042,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1029,
																						"src": "12025:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1041,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "12008:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$324_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1046,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1044,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1045,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1035,
																						"src": "12043:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1047,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "12052:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1053,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1055,
														"nodeType": "Return",
														"src": "11991:75:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:3",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "11849:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "11864:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$324",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1027,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 324,
														"src": "11864:8:3"
													},
													"referencedDeclaration": 324,
													"src": "11864:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$324",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:3"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "11906:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:3"
									},
									"scope": 1367,
									"src": "11835:248:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "12276:854:3",
										"statements": [
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "12286:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1069,
												"initialValue": {
													"hexValue": "30",
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:3"
											},
											{
												"id": 1183,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "12342:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1086,
														"nodeType": "IfStatement",
														"src": "12338:103:3",
														"trueBody": {
															"id": 1085,
															"nodeType": "Block",
															"src": "12361:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1075,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "12379:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1080,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:3"
																},
																{
																	"expression": {
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1081,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12414:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1084,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "12458:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1103,
														"nodeType": "IfStatement",
														"src": "12454:103:3",
														"trueBody": {
															"id": 1102,
															"nodeType": "Block",
															"src": "12477:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1092,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "12495:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1097,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:3"
																},
																{
																	"expression": {
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1098,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12530:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1101,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1104,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "12574:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1120,
														"nodeType": "IfStatement",
														"src": "12570:103:3",
														"trueBody": {
															"id": 1119,
															"nodeType": "Block",
															"src": "12593:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1109,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "12611:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1114,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:3"
																},
																{
																	"expression": {
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1115,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12646:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1118,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1121,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "12690:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1137,
														"nodeType": "IfStatement",
														"src": "12686:100:3",
														"trueBody": {
															"id": 1136,
															"nodeType": "Block",
															"src": "12708:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1126,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "12726:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1131,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:3"
																},
																{
																	"expression": {
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1132,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12760:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1135,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "12803:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1154,
														"nodeType": "IfStatement",
														"src": "12799:100:3",
														"trueBody": {
															"id": 1153,
															"nodeType": "Block",
															"src": "12821:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1143,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "12839:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1148,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:3"
																},
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12873:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "12916:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1171,
														"nodeType": "IfStatement",
														"src": "12912:100:3",
														"trueBody": {
															"id": 1170,
															"nodeType": "Block",
															"src": "12934:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "12952:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1165,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:3"
																},
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12986:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "13029:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1182,
														"nodeType": "IfStatement",
														"src": "13025:66:3",
														"trueBody": {
															"id": 1181,
															"nodeType": "Block",
															"src": "13047:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1177,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "13065:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1180,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1184,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1067,
													"src": "13117:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1185,
												"nodeType": "Return",
												"src": "13110:13:3"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:3",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "12229:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:3"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "12267:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:3"
									},
									"scope": 1367,
									"src": "12214:916:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "13365:170:3",
										"statements": [
											{
												"id": 1220,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:3",
												"statements": [
													{
														"assignments": [
															1199
														],
														"declarations": [
															{
																"constant": false,
																"id": 1199,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "13399:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1198,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1203,
														"initialValue": {
															"arguments": [
																{
																	"id": 1201,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "13422:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1200,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1187,
																	1222
																],
																"referencedDeclaration": 1187,
																"src": "13416:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1204,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "13449:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1206,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1193,
																						"src": "13476:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1205,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "13459:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$324_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1210,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1209,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "13495:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1211,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1190,
																					"src": "13504:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1217,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1197,
														"id": 1219,
														"nodeType": "Return",
														"src": "13442:76:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:3",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "13299:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "13314:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$324",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1191,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 324,
														"src": "13314:8:3"
													},
													"referencedDeclaration": 324,
													"src": "13314:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$324",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:3"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "13356:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:3"
									},
									"scope": 1367,
									"src": "13284:251:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "13855:600:3",
										"statements": [
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "13865:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"hexValue": "30",
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:3"
											},
											{
												"id": 1305,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "13921:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1248,
														"nodeType": "IfStatement",
														"src": "13917:98:3",
														"trueBody": {
															"id": 1247,
															"nodeType": "Block",
															"src": "13939:76:3",
															"statements": [
																{
																	"expression": {
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1239,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "13957:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1242,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:3"
																},
																{
																	"expression": {
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1243,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "13988:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1246,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "14032:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1263,
														"nodeType": "IfStatement",
														"src": "14028:95:3",
														"trueBody": {
															"id": 1262,
															"nodeType": "Block",
															"src": "14049:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "14067:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1257,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:3"
																},
																{
																	"expression": {
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1258,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "14097:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1261,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "14140:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1278,
														"nodeType": "IfStatement",
														"src": "14136:95:3",
														"trueBody": {
															"id": 1277,
															"nodeType": "Block",
															"src": "14157:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1269,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "14175:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1272,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:3"
																},
																{
																	"expression": {
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "14205:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1276,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "14248:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "14244:95:3",
														"trueBody": {
															"id": 1292,
															"nodeType": "Block",
															"src": "14265:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "14283:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:3"
																},
																{
																	"expression": {
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "14313:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "14356:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1304,
														"nodeType": "IfStatement",
														"src": "14352:64:3",
														"trueBody": {
															"id": 1303,
															"nodeType": "Block",
															"src": "14372:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1299,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "14390:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1306,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1231,
													"src": "14442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1307,
												"nodeType": "Return",
												"src": "14435:13:3"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:3",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13808:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:3"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13846:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:3"
									},
									"scope": 1367,
									"src": "13792:663:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "14692:177:3",
										"statements": [
											{
												"id": 1345,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:3",
												"statements": [
													{
														"assignments": [
															1321
														],
														"declarations": [
															{
																"constant": false,
																"id": 1321,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1345,
																"src": "14726:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1325,
														"initialValue": {
															"arguments": [
																{
																	"id": 1323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "14750:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1322,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1309,
																	1347
																],
																"referencedDeclaration": 1309,
																"src": "14743:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1326,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "14777:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1328,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1315,
																						"src": "14804:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$324",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1327,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "14787:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$324_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1335,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1333,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1331,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1321,
																									"src": "14823:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1332,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1334,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1336,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1312,
																					"src": "14838:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1319,
														"id": 1344,
														"nodeType": "Return",
														"src": "14770:82:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:3",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "14626:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "14641:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$324",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1313,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 324,
														"src": "14641:8:3"
													},
													"referencedDeclaration": 324,
													"src": "14641:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$324",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:3"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "14683:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:3"
									},
									"scope": 1367,
									"src": "14610:259:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "15067:48:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1358,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "15090:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$324",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$324",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1356,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1355,
												"id": 1364,
												"nodeType": "Return",
												"src": "15077:31:3"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:3",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "15019:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$324",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1350,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1349,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 324,
														"src": "15019:8:3"
													},
													"referencedDeclaration": 324,
													"src": "15019:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$324",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:3"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "15061:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:3"
									},
									"scope": 1367,
									"src": "14993:122:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1368,
							"src": "203:14914:3",
							"usedErrors": [
								319
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1472
						]
					},
					"id": 1473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1370,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:4",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1472,
							"linearizedBaseContracts": [
								1472
							],
							"name": "SignedMath",
							"nameLocation": "224:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "376:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1380,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "393:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1381,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "397:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1384,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "405:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:4",
													"trueExpression": {
														"id": 1383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "401:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1386,
												"nodeType": "Return",
												"src": "386:20:4"
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:4",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "325:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1372,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "335:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1374,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:4"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "368:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1377,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:4"
									},
									"scope": 1472,
									"src": "312:101:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "555:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1398,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1399,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "576:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1402,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "584:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:4",
													"trueExpression": {
														"id": 1401,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "580:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1404,
												"nodeType": "Return",
												"src": "565:20:4"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:4",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "504:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1390,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "514:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1392,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:4"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "547:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1395,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:4"
									},
									"scope": 1472,
									"src": "491:101:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "797:162:4",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1449,
														"src": "859:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1416,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1418,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "871:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1419,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "875:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1421,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1422,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "882:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1423,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "886:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1425,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1428,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1431,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "911:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1436,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1417,
																						"src": "931:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1434,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1432,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1441,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "945:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1442,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "949:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1444,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1446,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1448,
												"nodeType": "Return",
												"src": "904:48:4"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:4",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "746:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1408,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "756:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1410,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:4"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "789:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1413,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:4"
									},
									"scope": 1472,
									"src": "729:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "1103:158:4",
										"statements": [
											{
												"id": 1469,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1460,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1453,
																			"src": "1228:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:4",
																		"subExpression": {
																			"id": 1464,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1453,
																			"src": "1242:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:4",
																	"trueExpression": {
																		"id": 1463,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "1237:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1458,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1457,
														"id": 1468,
														"nodeType": "Return",
														"src": "1213:31:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:4",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1061:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1452,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:4"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1094:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:4"
									},
									"scope": 1472,
									"src": "1048:213:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1473,
							"src": "216:1047:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:4"
				},
				"id": 4
			},
			"contracts/IERC3525.sol": {
				"ast": {
					"absolutePath": "contracts/IERC3525.sol",
					"exportedSymbols": {
						"IERC165": [
							313
						],
						"IERC3525": [
							1573
						],
						"IERC721": [
							1689
						]
					},
					"id": 1574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1574,
							"sourceUnit": 314,
							"src": "58:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1476,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1574,
							"sourceUnit": 1690,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1478,
										"name": "IERC165",
										"nameLocations": [
											"345:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "345:7:5"
									},
									"id": 1479,
									"nodeType": "InheritanceSpecifier",
									"src": "345:7:5"
								},
								{
									"baseName": {
										"id": 1480,
										"name": "IERC721",
										"nameLocations": [
											"354:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1689,
										"src": "354:7:5"
									},
									"id": 1481,
									"nodeType": "InheritanceSpecifier",
									"src": "354:7:5"
								}
							],
							"canonicalName": "IERC3525",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1477,
								"nodeType": "StructuredDocumentation",
								"src": "149:173:5",
								"text": " @title ERC-3525 Semi-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0xd5358140."
							},
							"fullyImplemented": false,
							"id": 1573,
							"linearizedBaseContracts": [
								1573,
								1689,
								313
							],
							"name": "IERC3525",
							"nameLocation": "333:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "368:434:5",
										"text": " @dev MUST emit when value of a token is transferred to another token with the same slot,\n  including zero value transfers (_value == 0) as well as transfers when tokens are created\n  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\n @param _fromTokenId The token id to transfer value from\n @param _toTokenId The token id to transfer value to\n @param _value The transferred value"
									},
									"eventSelector": "0b2aac84f3ec956911fd78eae5311062972ff949f38412e8da39069d9f068cc6",
									"id": 1490,
									"name": "TransferValue",
									"nameLocation": "813:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"indexed": true,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "843:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "827:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": true,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "873:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "857:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "893:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "885:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:74:5"
									},
									"src": "807:94:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "907:261:5",
										"text": " @dev MUST emits when the approval value of a token is set or changed.\n @param _tokenId The token to approve\n @param _operator The operator to approve for\n @param _value The maximum value that `_operator` is allowed to manage"
									},
									"eventSelector": "621b050de0ad08b51d19b48b3e6df75348c4de6bdd93e81b252ca62e28265b1b",
									"id": 1499,
									"name": "ApprovalValue",
									"nameLocation": "1179:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1209:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1193:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1235:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1219:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1254:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1246:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:69:5"
									},
									"src": "1173:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "1268:249:5",
										"text": " @dev MUST emit when the slot of a token is set or changed.\n @param _tokenId The token of which slot is set or changed\n @param _oldSlot The previous slot of the token\n @param _newSlot The updated slot of the token"
									},
									"eventSelector": "e4f48c240d3b994948aa54f3e2f5fca59263dfe1d52b6e4cf39a5d249b5ccb65",
									"id": 1508,
									"name": "SlotChanged",
									"nameLocation": "1529:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1557:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1541:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"indexed": true,
												"mutability": "mutable",
												"name": "_oldSlot",
												"nameLocation": "1583:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1567:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newSlot",
												"nameLocation": "1609:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1593:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:78:5"
									},
									"src": "1523:96:5"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1625:424:5",
										"text": " @notice Get the number of decimals the token uses for value - e.g. 6, means the user\n  representation of the value of a token can be calculated by dividing it by 1,000,000.\n  Considering the compatibility with third-party wallets, this function is defined as\n  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\n @return The number of decimals for value"
									},
									"functionSelector": "3e7e8669",
									"id": 1514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "valueDecimals",
									"nameLocation": "2063:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:2:5"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "2102:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1511,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2101:7:5"
									},
									"scope": 1573,
									"src": "2054:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "2115:155:5",
										"text": " @notice Get the value of a token.\n @param _tokenId The token for which to query the balance\n @return The value of `_tokenId`"
									},
									"functionSelector": "9cc7f708",
									"id": 1522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2284:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2302:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2294:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2293:18:5"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2335:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:9:5"
									},
									"scope": 1573,
									"src": "2275:69:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "2350:138:5",
										"text": " @notice Get the slot of a token.\n @param _tokenId The identifier for a token\n @return The slot of the token"
									},
									"functionSelector": "263f3e7e",
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slotOf",
									"nameLocation": "2502:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2517:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "2509:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:18:5"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "2550:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:9:5"
									},
									"scope": 1573,
									"src": "2493:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "2565:463:5",
										"text": " @notice Allow an operator to manage the value of a token, up to the `_value` amount.\n @dev MUST revert unless caller is the current owner, an authorized operator, or the approved\n  address for `_tokenId`.\n  MUST emit ApprovalValue event.\n @param _tokenId The token to approve\n @param _operator The operator to be approved\n @param _value The maximum value of `_toTokenId` that `_operator` is allowed to manage"
									},
									"functionSelector": "8cb0a511",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3042:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3067:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3059:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3093:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3085:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3085:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:83:5"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3149:0:5"
									},
									"scope": 1573,
									"src": "3033:117:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "3156:309:5",
										"text": " @notice Get the maximum value of a token that an operator is allowed to manage.\n @param _tokenId The token for which to query the allowance\n @param _operator The address of an operator\n @return The current approval value of `_tokenId` that `_operator` is allowed to manage"
									},
									"functionSelector": "e345e0bc",
									"id": 1550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3479:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3497:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "3489:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3515:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "3507:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3507:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:37:5"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "3549:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:9:5"
									},
									"scope": 1573,
									"src": "3470:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "3564:745:5",
										"text": " @notice Transfer value from a specified token to another specified token with the same slot.\n @dev Caller MUST be the current owner, an authorized operator or an operator who has been\n  approved the whole `_fromTokenId` or part of it.\n  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.\n  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `TransferValue` event.\n @param _fromTokenId The token to transfer value from\n @param _toTokenId The token to transfer value to\n @param _value The transferred value"
									},
									"functionSelector": "310ed7f0",
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4323:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "4353:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "4345:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "4383:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "4375:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "4411:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "4403:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4335:88:5"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:5"
									},
									"scope": 1573,
									"src": "4314:127:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "4447:826:5",
										"text": " @notice Transfer value from a specified token to an address. The caller should confirm that\n  `_to` is capable of receiving ERC3525 tokens.\n @dev This function MUST create a new ERC3525 token with the same slot for `_to` to receive\n  the transferred value.\n  MUST revert if `_fromTokenId` is zero token id or does not exist.\n  MUST revert if `_to` is zero address.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `Transfer` and `TransferValue` events.\n @param _fromTokenId The token to transfer value from\n @param _to The address to transfer value to\n @param _value The transferred value\n @return ID of the new token created for `_to` which receives the transferred value"
									},
									"functionSelector": "0f485c02",
									"id": 1572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5287:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "5317:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5309:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5347:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5339:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5368:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5360:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5360:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:81:5"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "5407:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5406:9:5"
									},
									"scope": 1573,
									"src": "5278:138:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1574,
							"src": "323:5095:5",
							"usedErrors": [],
							"usedEvents": [
								1490,
								1499,
								1508,
								1588,
								1597,
								1606
							]
						}
					],
					"src": "33:5386:5"
				},
				"id": 5
			},
			"contracts/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							313
						],
						"IERC721": [
							1689
						]
					},
					"id": 1690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 314,
							"src": "58:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1578,
										"name": "IERC165",
										"nameLocations": [
											"319:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "319:7:6"
									},
									"id": 1579,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1577,
								"nodeType": "StructuredDocumentation",
								"src": "125:172:6",
								"text": " @title ERC-721 Non-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x80ac58cd."
							},
							"fullyImplemented": false,
							"id": 1689,
							"linearizedBaseContracts": [
								1689,
								313
							],
							"name": "IERC721",
							"nameLocation": "308:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "333:400:6",
										"text": " @dev This emits when ownership of any NFT changes by any mechanism.\n  This event emits when NFTs are created (`from` == 0) and destroyed\n  (`to` == 0). Exception: during contract creation, any number of NFTs\n  may be created and assigned without emitting Transfer. At the time of\n  any transfer, the approved address for that NFT (if any) is reset to none."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1588,
									"name": "Transfer",
									"nameLocation": "744:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "769:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "753:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "792:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "776:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "813:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "797:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:70:6"
									},
									"src": "738:85:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "829:293:6",
										"text": " @dev This emits when the approved address for an NFT is changed or\n  reaffirmed. The zero address indicates there is no approved address.\n  When a Transfer event emits, this also indicates that the approved\n  address for that NFT (if any) is reset to none."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1597,
									"name": "Approval",
									"nameLocation": "1133:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1158:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1142:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"indexed": true,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1182:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1166:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1209:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1193:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:77:6"
									},
									"src": "1127:92:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "1225:143:6",
										"text": " @dev This emits when an operator is enabled or disabled for an owner.\n  The operator can manage all NFTs of the owner."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1606,
									"name": "ApprovalForAll",
									"nameLocation": "1379:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1410:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1394:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1434:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1418:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1450:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1445:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1445:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:67:6"
									},
									"src": "1373:88:6"
								},
								{
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "1467:330:6",
										"text": " @notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
									},
									"functionSelector": "70a08231",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1811:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1829:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1821:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:16:6"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1860:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:9:6"
									},
									"scope": 1689,
									"src": "1802:67:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "1875:258:6",
										"text": " @notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
									},
									"functionSelector": "6352211e",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2147:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2163:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2155:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:18:6"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2196:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:9:6"
									},
									"scope": 1689,
									"src": "2138:67:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "2211:844:6",
										"text": " @notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
									},
									"functionSelector": "b88d4fde",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3069:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3094:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "3086:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3109:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "3101:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3101:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3122:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "3114:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3147:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "3132:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3132:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:67:6"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3169:0:6"
									},
									"scope": 1689,
									"src": "3060:110:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "3176:358:6",
										"text": " @notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n  except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "42842e0e",
									"id": 1644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3548:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3573:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3565:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3588:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3580:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3601:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3593:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3564:46:6"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3627:0:6"
									},
									"scope": 1689,
									"src": "3539:89:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "3634:581:6",
										"text": " @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "23b872dd",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4229:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4250:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "4242:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4265:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "4257:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4257:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4278:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "4270:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4241:46:6"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4304:0:6"
									},
									"scope": 1689,
									"src": "4220:85:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "4311:361:6",
										"text": " @notice Change or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n  Throws unless `msg.sender` is the current NFT owner, or an authorized\n  operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
									},
									"functionSelector": "095ea7b3",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4686:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4702:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "4694:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4721:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "4713:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:37:6"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4747:0:6"
									},
									"scope": 1689,
									"src": "4677:71:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "4754:394:6",
										"text": " @notice Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @dev Emits the ApprovalForAll event. The contract MUST allow\n  multiple operators per owner.\n @param _operator Address to add to the set of authorized operators\n @param _approved True if the operator is approved, false to revoke approval"
									},
									"functionSelector": "a22cb465",
									"id": 1670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5162:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5188:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "5180:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5204:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "5199:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5199:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:35:6"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5223:0:6"
									},
									"scope": 1689,
									"src": "5153:71:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "5230:272:6",
										"text": " @notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
									},
									"functionSelector": "081812fc",
									"id": 1678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5516:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5536:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "5528:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5528:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5527:18:6"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "5569:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5569:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5568:9:6"
									},
									"scope": 1689,
									"src": "5507:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "5584:302:6",
										"text": " @notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
									},
									"functionSelector": "e985e9c5",
									"id": 1688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5900:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5925:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5917:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5941:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5933:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5933:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:35:6"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5975:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5975:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5974:6:6"
									},
									"scope": 1689,
									"src": "5891:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1690,
							"src": "298:5685:6",
							"usedErrors": [],
							"usedEvents": [
								1588,
								1597,
								1606
							]
						}
					],
					"src": "33:5951:6"
				},
				"id": 6
			},
			"contracts/extensions/IERC3525Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/extensions/IERC3525Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							313
						],
						"IERC3525": [
							1573
						],
						"IERC3525Metadata": [
							1713
						],
						"IERC721": [
							1689
						],
						"IERC721Metadata": [
							1740
						]
					},
					"id": 1714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "contracts/IERC3525.sol",
							"file": "../IERC3525.sol",
							"id": 1692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1714,
							"sourceUnit": 1574,
							"src": "58:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/extensions/IERC721Metadata.sol",
							"file": "./IERC721Metadata.sol",
							"id": 1693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1714,
							"sourceUnit": 1741,
							"src": "84:31:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1695,
										"name": "IERC3525",
										"nameLocations": [
											"860:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1573,
										"src": "860:8:7"
									},
									"id": 1696,
									"nodeType": "InheritanceSpecifier",
									"src": "860:8:7"
								},
								{
									"baseName": {
										"id": 1697,
										"name": "IERC721Metadata",
										"nameLocations": [
											"870:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1740,
										"src": "870:15:7"
									},
									"id": 1698,
									"nodeType": "InheritanceSpecifier",
									"src": "870:15:7"
								}
							],
							"canonicalName": "IERC3525Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1694,
								"nodeType": "StructuredDocumentation",
								"src": "117:712:7",
								"text": " @title ERC-3525 Semi-Fungible Token Standard, optional extension for metadata\n @dev Interfaces for any contract that wants to support query of the Uniform Resource Identifier\n  (URI) for the ERC3525 contract as well as a specified slot.\n  Because of the higher reliability of data stored in smart contracts compared to data stored in\n  centralized systems, it is recommended that metadata, including `contractURI`, `slotURI` and\n  `tokenURI`, be directly returned in JSON format, instead of being returned with a url pointing\n  to any resource stored in a centralized system.\n  See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0xe1600902."
							},
							"fullyImplemented": false,
							"id": 1713,
							"linearizedBaseContracts": [
								1713,
								1740,
								1573,
								1689,
								313
							],
							"name": "IERC3525Metadata",
							"nameLocation": "840:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "892:403:7",
										"text": " @notice Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract.\n @dev This function SHOULD return the URI for this contract in JSON format, starting with\n  header `data:application/json;`.\n  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for contract URI.\n @return The JSON formatted URI of the current ERC3525 contract"
									},
									"functionSelector": "e8a3d485",
									"id": 1704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contractURI",
									"nameLocation": "1309:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:2:7"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1346:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1346:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:15:7"
									},
									"scope": 1713,
									"src": "1300:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "1367:362:7",
										"text": " @notice Returns the Uniform Resource Identifier (URI) for the specified slot.\n @dev This function SHOULD return the URI for `_slot` in JSON format, starting with header\n  `data:application/json;`.\n  See https://eips.ethereum.org/EIPS/eip-3525 for the JSON schema for slot URI.\n @return The JSON formatted URI of `_slot`"
									},
									"functionSelector": "09c3dd87",
									"id": 1712,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slotURI",
									"nameLocation": "1743:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "_slot",
												"nameLocation": "1759:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1751:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:15:7"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1789:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1709,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:15:7"
									},
									"scope": 1713,
									"src": "1734:70:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1714,
							"src": "830:979:7",
							"usedErrors": [],
							"usedEvents": [
								1490,
								1499,
								1508,
								1588,
								1597,
								1606
							]
						}
					],
					"src": "33:1777:7"
				},
				"id": 7
			},
			"contracts/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							313
						],
						"IERC721": [
							1689
						],
						"IERC721Metadata": [
							1740
						]
					},
					"id": 1741,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "contracts/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 1690,
							"src": "58:24:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1718,
										"name": "IERC721",
										"nameLocations": [
											"314:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1689,
										"src": "314:7:8"
									},
									"id": 1719,
									"nodeType": "InheritanceSpecifier",
									"src": "314:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1717,
								"nodeType": "StructuredDocumentation",
								"src": "84:200:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x5b5e139f."
							},
							"fullyImplemented": false,
							"id": 1740,
							"linearizedBaseContracts": [
								1740,
								1689,
								313
							],
							"name": "IERC721Metadata",
							"nameLocation": "295:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "328:87:8",
										"text": " @notice A descriptive name for a collection of NFTs in this contract"
									},
									"functionSelector": "06fdde03",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "429:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:8"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "459:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1722,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:15:8"
									},
									"scope": 1740,
									"src": "420:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "480:72:8",
										"text": " @notice An abbreviated name for NFTs in this contract"
									},
									"functionSelector": "95d89b41",
									"id": 1731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "566:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:2:8"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "598:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1728,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "598:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:15:8"
									},
									"scope": 1740,
									"src": "557:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "619:274:8",
										"text": " @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n  3986. The URI may point to a JSON file that conforms to the \"ERC721\n  Metadata JSON Schema\"."
									},
									"functionSelector": "c87b56dd",
									"id": 1739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "907:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "924:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "916:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:18:8"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "953:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1736,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "953:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:15:8"
									},
									"scope": 1740,
									"src": "898:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1741,
							"src": "285:685:8",
							"usedErrors": [],
							"usedEvents": [
								1588,
								1597,
								1606
							]
						}
					],
					"src": "33:938:8"
				},
				"id": 8
			},
			"contracts/periphery/ERC3525MetadataDescriptor.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/ERC3525MetadataDescriptor.sol",
					"exportedSymbols": {
						"Base64": [
							46
						],
						"ERC3525MetadataDescriptor": [
							2035
						],
						"IERC165": [
							313
						],
						"IERC3525": [
							1573
						],
						"IERC3525Metadata": [
							1713
						],
						"IERC3525MetadataDescriptor": [
							2057
						],
						"IERC721": [
							1689
						],
						"IERC721Metadata": [
							1740
						],
						"Math": [
							1367
						],
						"SignedMath": [
							1472
						],
						"Strings": [
							301
						]
					},
					"id": 2036,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1742,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1743,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 302,
							"src": "58:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
							"file": "@openzeppelin/contracts/utils/Base64.sol",
							"id": 1744,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 47,
							"src": "110:50:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/periphery/interface/IERC3525MetadataDescriptor.sol",
							"file": "./interface/IERC3525MetadataDescriptor.sol",
							"id": 1745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 2058,
							"src": "161:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/extensions/IERC3525Metadata.sol",
							"file": "../extensions/IERC3525Metadata.sol",
							"id": 1746,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 1714,
							"src": "214:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1747,
										"name": "IERC3525MetadataDescriptor",
										"nameLocations": [
											"298:26:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2057,
										"src": "298:26:9"
									},
									"id": 1748,
									"nodeType": "InheritanceSpecifier",
									"src": "298:26:9"
								}
							],
							"canonicalName": "ERC3525MetadataDescriptor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035,
								2057
							],
							"name": "ERC3525MetadataDescriptor",
							"nameLocation": "269:25:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1751,
									"libraryName": {
										"id": 1749,
										"name": "Strings",
										"nameLocations": [
											"338:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 301,
										"src": "338:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "332:26:9",
									"typeName": {
										"id": 1750,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "350:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"baseFunctions": [
										2042
									],
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "443:813:9",
										"statements": [
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "erc3525",
														"nameLocation": "470:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1799,
														"src": "453:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
															"typeString": "contract IERC3525Metadata"
														},
														"typeName": {
															"id": 1758,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1757,
																"name": "IERC3525Metadata",
																"nameLocations": [
																	"453:16:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1713,
																"src": "453:16:9"
															},
															"referencedDeclaration": 1713,
															"src": "453:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																"typeString": "contract IERC3525Metadata"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1761,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "497:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "501:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "497:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1760,
														"name": "IERC3525Metadata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "480:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC3525Metadata_$1713_$",
															"typeString": "type(contract IERC3525Metadata)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "480:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
														"typeString": "contract IERC3525Metadata"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "453:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "617:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "7b226e616d65223a22",
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "755:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					"value": "{\"name\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1775,
																							"name": "erc3525",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1759,
																							"src": "797:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																								"typeString": "contract IERC3525Metadata"
																							}
																						},
																						"id": 1776,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "805:4:9",
																						"memberName": "name",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1725,
																						"src": "797:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view external returns (string memory)"
																						}
																					},
																					"id": 1777,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "797:14:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c226465736372697074696f6e223a22",
																					"id": 1778,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "841:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					"value": "\",\"description\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1779,
																						"name": "_contractDescription",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1910,
																						"src": "890:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 1780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "890:22:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22696d616765223a22",
																					"id": 1781,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "942:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					"value": "\",\"image\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1782,
																						"name": "_contractImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1918,
																						"src": "985:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () view returns (bytes memory)"
																						}
																					},
																					"id": 1783,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "985:16:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"hexValue": "222c2276616c7565446563696d616c73223a22",
																					"id": 1784,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1031:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64",
																						"typeString": "literal_string \"\",\"valueDecimals\":\"\""
																					},
																					"value": "\",\"valueDecimals\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"expression": {
																											"id": 1787,
																											"name": "erc3525",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1759,
																											"src": "1091:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																												"typeString": "contract IERC3525Metadata"
																											}
																										},
																										"id": 1788,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "1099:13:9",
																										"memberName": "valueDecimals",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1514,
																										"src": "1091:21:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																											"typeString": "function () view external returns (uint8)"
																										}
																									},
																									"id": 1789,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "1091:23:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								],
																								"id": 1786,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "1083:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1785,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "1083:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1790,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1083:32:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1116:8:9",
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 114,
																						"src": "1083:41:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 1792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1083:43:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "227d",
																					"id": 1793,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1156:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																						"typeString": "literal_string \"\"}\""
																					},
																					"value": "\"}"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3522bb14fe7a0e8d0d60bf92667e474c615f8047309c01c4e05b29748bd6ae64",
																						"typeString": "literal_string \"\",\"valueDecimals\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																						"typeString": "literal_string \"\"}\""
																					}
																				],
																				"expression": {
																					"id": 1772,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "709:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "713:12:9",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "709:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "709:477:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 1770,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "670:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$46_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "677:6:9",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "670:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "670:538:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1767,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "562:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "566:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "562:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "562:673:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "538:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1765,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "538:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "538:711:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1756,
												"id": 1798,
												"nodeType": "Return",
												"src": "518:731:9"
											}
										]
									},
									"functionSelector": "725fa09c",
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "constructContractURI",
									"nameLocation": "373:20:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1753,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "410:8:9"
									},
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:2:9"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "428:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1754,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "428:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:15:9"
									},
									"scope": 2035,
									"src": "364:892:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2049
									],
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "1350:724:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1450:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "7b226e616d65223a22",
																					"id": 1817,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1588:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					"value": "{\"name\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 1819,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1802,
																							"src": "1640:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1818,
																						"name": "_slotName",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1930,
																						"src": "1630:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 1820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1630:16:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c226465736372697074696f6e223a22",
																					"id": 1821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1676:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					"value": "\",\"description\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 1823,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1802,
																							"src": "1742:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1822,
																						"name": "_slotDescription",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1942,
																						"src": "1725:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 1824,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1725:23:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22696d616765223a22",
																					"id": 1825,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1778:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					"value": "\",\"image\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 1827,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1802,
																							"src": "1832:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1826,
																						"name": "_slotImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1963,
																						"src": "1821:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function (uint256) view returns (bytes memory)"
																						}
																					},
																					"id": 1828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1821:17:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"hexValue": "222c2270726f70657274696573223a",
																					"id": 1829,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1868:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					"value": "\",\"properties\":"
																				},
																				{
																					"arguments": [
																						{
																							"id": 1831,
																							"name": "slot_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1802,
																							"src": "1931:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1830,
																						"name": "_slotProperties",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1975,
																						"src": "1915:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 1832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1915:22:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "7d",
																					"id": 1833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1967:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					},
																					"value": "}"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					}
																				],
																				"expression": {
																					"id": 1815,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1542:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1546:12:9",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "1542:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1542:454:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 1813,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "1503:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$46_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1510:6:9",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "1503:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1503:515:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1810,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1403:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1407:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1403:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1403:650:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1379:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1808,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1379:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:688:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1838,
												"nodeType": "Return",
												"src": "1360:707:9"
											}
										]
									},
									"functionSelector": "6c037f8a",
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "constructSlotURI",
									"nameLocation": "1271:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1804,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1317:8:9"
									},
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "1296:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1288:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:15:9"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1335:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:15:9"
									},
									"scope": 2035,
									"src": "1262:812:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2056
									],
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "2170:1013:9",
										"statements": [
											{
												"assignments": [
													1850
												],
												"declarations": [
													{
														"constant": false,
														"id": 1850,
														"mutability": "mutable",
														"name": "erc3525",
														"nameLocation": "2197:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "2180:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
															"typeString": "contract IERC3525Metadata"
														},
														"typeName": {
															"id": 1849,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1848,
																"name": "IERC3525Metadata",
																"nameLocations": [
																	"2180:16:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1713,
																"src": "2180:16:9"
															},
															"referencedDeclaration": 1713,
															"src": "2180:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																"typeString": "contract IERC3525Metadata"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1855,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1852,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2224:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2228:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2224:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1851,
														"name": "IERC3525Metadata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "2207:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC3525Metadata_$1713_$",
															"typeString": "type(contract IERC3525Metadata)"
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2207:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
														"typeString": "contract IERC3525Metadata"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2180:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2327:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "7b226e616d65223a22",
																					"id": 1865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2462:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					"value": "{\"name\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 1867,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1842,
																							"src": "2514:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1866,
																						"name": "_tokenName",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "2503:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 1868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2503:20:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c226465736372697074696f6e223a22",
																					"id": 1869,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2553:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					"value": "\",\"description\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 1871,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1842,
																							"src": "2620:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1870,
																						"name": "_tokenDescription",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2012,
																						"src": "2602:17:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 1872,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2602:27:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22696d616765223a22",
																					"id": 1873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2659:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					"value": "\",\"image\":\""
																				},
																				{
																					"arguments": [
																						{
																							"id": 1875,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1842,
																							"src": "2714:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1874,
																						"name": "_tokenImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2022,
																						"src": "2702:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 1876,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2702:21:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c2262616c616e6365223a22",
																					"id": 1877,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2753:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d",
																						"typeString": "literal_string \"\",\"balance\":\"\""
																					},
																					"value": "\",\"balance\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1880,
																									"name": "tokenId_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1842,
																									"src": "2816:8:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 1878,
																									"name": "erc3525",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1850,
																									"src": "2798:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																										"typeString": "contract IERC3525Metadata"
																									}
																								},
																								"id": 1879,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2806:9:9",
																								"memberName": "balanceOf",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1522,
																								"src": "2798:17:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) view external returns (uint256)"
																								}
																							},
																							"id": 1881,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2798:27:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1882,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2826:8:9",
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 114,
																						"src": "2798:36:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 1883,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2798:38:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22736c6f74223a22",
																					"id": 1884,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2866:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140",
																						"typeString": "literal_string \"\",\"slot\":\"\""
																					},
																					"value": "\",\"slot\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1887,
																									"name": "tokenId_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1842,
																									"src": "2923:8:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 1885,
																									"name": "erc3525",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1850,
																									"src": "2908:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																										"typeString": "contract IERC3525Metadata"
																									}
																								},
																								"id": 1886,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2916:6:9",
																								"memberName": "slotOf",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1530,
																								"src": "2908:14:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) view external returns (uint256)"
																								}
																							},
																							"id": 1888,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2908:24:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1889,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2933:8:9",
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 114,
																						"src": "2908:33:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 1890,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2908:35:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c2270726f70657274696573223a",
																					"id": 1891,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2973:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					"value": "\",\"properties\":"
																				},
																				{
																					"arguments": [
																						{
																							"id": 1893,
																							"name": "tokenId_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1842,
																							"src": "3037:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1892,
																						"name": "_tokenProperties",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2034,
																						"src": "3020:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (uint256) view returns (string memory)"
																						}
																					},
																					"id": 1894,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3020:26:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "7d",
																					"id": 1895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3076:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					},
																					"value": "}"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_62a4513e06c8ce6afe41fc1c1dd7009d78d7551daaf32cd83808fefbfa49db6d",
																						"typeString": "literal_string \"\",\"balance\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3b8a544d46045c1eef7e9cdbdd86ea37998668fb63eaccd782ed66f63b95f140",
																						"typeString": "literal_string \"\",\"slot\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_fd1e33c217b7c66cc8521e8b3c9fb7280e4f4bc5087316e2ede4f8cfbfbf3266",
																						"typeString": "literal_string \"\",\"properties\":\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
																						"typeString": "literal_string \"}\""
																					}
																				],
																				"expression": {
																					"id": 1863,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2419:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2423:12:9",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2419:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2419:703:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 1861,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "2380:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$46_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2387:6:9",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "2380:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2380:764:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1858,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2289:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2293:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2289:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2289:873:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2265:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1856,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2265:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:911:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1847,
												"id": 1900,
												"nodeType": "Return",
												"src": "2245:931:9"
											}
										]
									},
									"functionSelector": "894b4c2e",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "constructTokenURI",
									"nameLocation": "2089:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1844,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2137:8:9"
									},
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "2115:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2107:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:18:9"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2155:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2155:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:15:9"
									},
									"scope": 2035,
									"src": "2080:1103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "3267:26:9",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3284:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1906,
												"id": 1908,
												"nodeType": "Return",
												"src": "3277:9:9"
											}
										]
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractDescription",
									"nameLocation": "3198:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3218:2:9"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "3252:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1904,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3252:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3251:15:9"
									},
									"scope": 2035,
									"src": "3189:104:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "3370:26:9",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3387:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1914,
												"id": 1916,
												"nodeType": "Return",
												"src": "3380:9:9"
											}
										]
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractImage",
									"nameLocation": "3308:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3322:2:9"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "3356:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3356:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3355:14:9"
									},
									"scope": 2035,
									"src": "3299:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "3482:41:9",
										"statements": [
											{
												"expression": {
													"id": 1925,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1920,
													"src": "3492:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "3492:5:9"
											},
											{
												"expression": {
													"hexValue": "",
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3514:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1924,
												"id": 1928,
												"nodeType": "Return",
												"src": "3507:9:9"
											}
										]
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotName",
									"nameLocation": "3411:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "3429:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "3421:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3420:15:9"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "3467:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3467:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:15:9"
									},
									"scope": 2035,
									"src": "3402:121:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "3616:41:9",
										"statements": [
											{
												"expression": {
													"id": 1937,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1932,
													"src": "3626:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "3626:5:9"
											},
											{
												"expression": {
													"hexValue": "",
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3648:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1936,
												"id": 1940,
												"nodeType": "Return",
												"src": "3641:9:9"
											}
										]
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotDescription",
									"nameLocation": "3538:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "3563:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "3555:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:15:9"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "3601:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3601:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3600:15:9"
									},
									"scope": 2035,
									"src": "3529:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "3745:90:9",
										"statements": [
											{
												"expression": {
													"id": 1949,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1944,
													"src": "3755:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "3755:5:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1958,
																	"name": "slot_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "3821:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1954,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3801:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3805:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3801:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1953,
																		"name": "IERC3525Metadata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "3784:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC3525Metadata_$1713_$",
																			"typeString": "type(contract IERC3525Metadata)"
																		}
																	},
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3784:28:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																		"typeString": "contract IERC3525Metadata"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3813:7:9",
																"memberName": "slotURI",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1712,
																"src": "3784:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) view external returns (string memory)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3784:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3778:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1951,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3778:5:9",
															"typeDescriptions": {}
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1948,
												"id": 1961,
												"nodeType": "Return",
												"src": "3771:57:9"
											}
										]
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotImage",
									"nameLocation": "3672:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "3691:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3682:15:9"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3731:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1946,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3731:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:14:9"
									},
									"scope": 2035,
									"src": "3663:172:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "3927:43:9",
										"statements": [
											{
												"expression": {
													"id": 1970,
													"name": "slot_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1965,
													"src": "3937:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "3937:5:9"
											},
											{
												"expression": {
													"hexValue": "5b5d",
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3959:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_518674ab2b227e5f11e9084f615d57663cde47bce1ba168b4c19c7ee22a73d70",
														"typeString": "literal_string \"[]\""
													},
													"value": "[]"
												},
												"functionReturnParameters": 1969,
												"id": 1973,
												"nodeType": "Return",
												"src": "3952:11:9"
											}
										]
									},
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_slotProperties",
									"nameLocation": "3850:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "slot_",
												"nameLocation": "3874:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "3866:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3865:15:9"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "3912:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3912:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3911:15:9"
									},
									"scope": 2035,
									"src": "3841:129:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "4060:222:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1987,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4177:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1988,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4181:6:9",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4177:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1986,
																				"name": "IERC3525Metadata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1713,
																				"src": "4160:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC3525Metadata_$1713_$",
																					"typeString": "type(contract IERC3525Metadata)"
																				}
																			},
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4160:28:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC3525Metadata_$1713",
																				"typeString": "contract IERC3525Metadata"
																			}
																		},
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4189:4:9",
																		"memberName": "name",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1725,
																		"src": "4160:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
																			"typeString": "function () view external returns (string memory)"
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4160:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "2023",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4218:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12",
																		"typeString": "literal_string \" #\""
																	},
																	"value": " #"
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1993,
																			"name": "tokenId_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1977,
																			"src": "4224:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4233:8:9",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 114,
																		"src": "4224:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4224:19:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12",
																		"typeString": "literal_string \" #\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1984,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4122:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4126:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4122:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4122:139:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4098:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1982,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4098:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4098:177:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1981,
												"id": 1998,
												"nodeType": "Return",
												"src": "4078:197:9"
											}
										]
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenName",
									"nameLocation": "3985:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "4004:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "3996:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:18:9"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "4045:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4045:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:15:9"
									},
									"scope": 2035,
									"src": "3976:306:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "4379:44:9",
										"statements": [
											{
												"expression": {
													"id": 2007,
													"name": "tokenId_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2002,
													"src": "4389:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "4389:8:9"
											},
											{
												"expression": {
													"hexValue": "",
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4414:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2006,
												"id": 2010,
												"nodeType": "Return",
												"src": "4407:9:9"
											}
										]
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenDescription",
									"nameLocation": "4297:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "4323:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "4315:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4314:18:9"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "4364:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4364:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4363:15:9"
									},
									"scope": 2035,
									"src": "4288:135:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "4555:224:9",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4774:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2018,
												"id": 2020,
												"nodeType": "Return",
												"src": "4767:9:9"
											}
										]
									},
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenImage",
									"nameLocation": "4479:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "4499:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "4491:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4491:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:18:9"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "4540:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2016,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4540:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4539:15:9"
									},
									"scope": 2035,
									"src": "4470:309:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "4875:46:9",
										"statements": [
											{
												"expression": {
													"id": 2029,
													"name": "tokenId_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2024,
													"src": "4885:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "4885:8:9"
											},
											{
												"expression": {
													"hexValue": "7b7d",
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4910:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b48d38f93eaa084033fc5970bf96e559c33c4cdc07d889ab00b4d63f9590739d",
														"typeString": "literal_string \"{}\""
													},
													"value": "{}"
												},
												"functionReturnParameters": 2028,
												"id": 2032,
												"nodeType": "Return",
												"src": "4903:11:9"
											}
										]
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenProperties",
									"nameLocation": "4794:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "4819:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4811:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4811:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4810:18:9"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4860:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2026,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4860:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:15:9"
									},
									"scope": 2035,
									"src": "4785:136:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2036,
							"src": "260:4663:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:4890:9"
				},
				"id": 9
			},
			"contracts/periphery/interface/IERC3525MetadataDescriptor.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/interface/IERC3525MetadataDescriptor.sol",
					"exportedSymbols": {
						"IERC3525MetadataDescriptor": [
							2057
						]
					},
					"id": 2058,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2037,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3525MetadataDescriptor",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2057,
							"linearizedBaseContracts": [
								2057
							],
							"name": "IERC3525MetadataDescriptor",
							"nameLocation": "68:26:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "725fa09c",
									"id": 2042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "constructContractURI",
									"nameLocation": "111:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:2:10"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "157:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2039,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "157:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "156:15:10"
									},
									"scope": 2057,
									"src": "102:70:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c037f8a",
									"id": 2049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "constructSlotURI",
									"nameLocation": "187:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "212:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "204:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:14:10"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "241:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2046,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "241:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:15:10"
									},
									"scope": 2057,
									"src": "178:78:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "894b4c2e",
									"id": 2056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "constructTokenURI",
									"nameLocation": "275:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "301:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "293:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:17:10"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "333:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "333:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:15:10"
									},
									"scope": 2057,
									"src": "266:82:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2058,
							"src": "58:293:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:318:10"
				},
				"id": 10
			}
		}
	}
}