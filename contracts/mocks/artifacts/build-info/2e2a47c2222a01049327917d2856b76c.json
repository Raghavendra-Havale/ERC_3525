{
	"id": "2e2a47c2222a01049327917d2856b76c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mocks/ERC3525ReceiverMock.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"../IERC3525Receiver.sol\";\n\ncontract ERC3525ReceiverMock is IERC165, IERC3525Receiver {\n    enum Error {\n        None,\n        RevertWithMessage,\n        RevertWithoutMessage,\n        Panic\n    }\n\n    bytes4 private immutable _retval;\n    Error private immutable _error;\n\n    event Received(address operator, uint256 fromTokenId, uint256 toTokenId, uint256 value, bytes data, uint256 gas);\n\n    constructor(bytes4 retval, Error error) {\n        _retval = retval;\n        _error = error;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return\n            interfaceId == type(IERC165).interfaceId || \n            interfaceId == type(IERC3525Receiver).interfaceId;\n    } \n\n    function onERC3525Received(\n        address operator, \n        uint256 fromTokenId, \n        uint256 toTokenId, \n        uint256 value, \n        bytes calldata data\n    ) public override returns (bytes4) {\n        if (_error == Error.RevertWithMessage) {\n            revert(\"ERC3525ReceiverMock: reverting\");\n        } else if (_error == Error.RevertWithoutMessage) {\n            revert();\n        } else if (_error == Error.Panic) {\n            uint256 a = uint256(0) / uint256(0);\n            a;\n        }\n        emit Received(operator, fromTokenId, toTokenId, value, data, gasleft());\n        return _retval;\n    }\n\n}"
			},
			"contracts/IERC3525Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\n/**\n * @title EIP-3525 token receiver interface\n * @dev Interface for a smart contract that wants to be informed by EIP-3525 contracts when \n *  receiving values from ANY addresses or EIP-3525 tokens.\n * Note: the EIP-165 identifier for this interface is 0x009ce20b.\n */\ninterface IERC3525Receiver {\n    /**\n     * @notice Handle the receipt of an EIP-3525 token value.\n     * @dev An EIP-3525 smart contract MUST check whether this function is implemented by the \n     *  recipient contract, if the recipient contract implements this function, the EIP-3525 \n     *  contract MUST call this function after a value transfer (i.e. `transferFrom(uint256,\n     *  uint256,uint256,bytes)`).\n     *  MUST return 0x009ce20b (i.e. `bytes4(keccak256('onERC3525Received(address,uint256,uint256,\n     *  uint256,bytes)'))`) if the transfer is accepted.\n     *  MUST revert or return any value other than 0x009ce20b if the transfer is rejected.\n     * @param _operator The address which triggered the transfer\n     * @param _fromTokenId The token id to transfer value from\n     * @param _toTokenId The token id to transfer value to\n     * @param _value The transferred value\n     * @param _data Additional data with no specified format\n     * @return `bytes4(keccak256('onERC3525Received(address,uint256,uint256,uint256,bytes)'))` \n     *  unless the transfer is rejected.\n     */\n    function onERC3525Received(address _operator, uint256 _fromTokenId, uint256 _toTokenId, uint256 _value, bytes calldata _data) external returns (bytes4);\n\n}"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC3525Receiver.sol": {
				"IERC3525Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onERC3525Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for a smart contract that wants to be informed by EIP-3525 contracts when   receiving values from ANY addresses or EIP-3525 tokens. Note: the EIP-165 identifier for this interface is 0x009ce20b.",
						"kind": "dev",
						"methods": {
							"onERC3525Received(address,uint256,uint256,uint256,bytes)": {
								"details": "An EIP-3525 smart contract MUST check whether this function is implemented by the   recipient contract, if the recipient contract implements this function, the EIP-3525   contract MUST call this function after a value transfer (i.e. `transferFrom(uint256,  uint256,uint256,bytes)`).  MUST return 0x009ce20b (i.e. `bytes4(keccak256('onERC3525Received(address,uint256,uint256,  uint256,bytes)'))`) if the transfer is accepted.  MUST revert or return any value other than 0x009ce20b if the transfer is rejected.",
								"params": {
									"_data": "Additional data with no specified format",
									"_fromTokenId": "The token id to transfer value from",
									"_operator": "The address which triggered the transfer",
									"_toTokenId": "The token id to transfer value to",
									"_value": "The transferred value"
								},
								"returns": {
									"_0": "`bytes4(keccak256('onERC3525Received(address,uint256,uint256,uint256,bytes)'))`   unless the transfer is rejected."
								}
							}
						},
						"title": "EIP-3525 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC3525Received(address,uint256,uint256,uint256,bytes)": "009ce20b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC3525Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for a smart contract that wants to be informed by EIP-3525 contracts when   receiving values from ANY addresses or EIP-3525 tokens. Note: the EIP-165 identifier for this interface is 0x009ce20b.\",\"kind\":\"dev\",\"methods\":{\"onERC3525Received(address,uint256,uint256,uint256,bytes)\":{\"details\":\"An EIP-3525 smart contract MUST check whether this function is implemented by the   recipient contract, if the recipient contract implements this function, the EIP-3525   contract MUST call this function after a value transfer (i.e. `transferFrom(uint256,  uint256,uint256,bytes)`).  MUST return 0x009ce20b (i.e. `bytes4(keccak256('onERC3525Received(address,uint256,uint256,  uint256,bytes)'))`) if the transfer is accepted.  MUST revert or return any value other than 0x009ce20b if the transfer is rejected.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_fromTokenId\":\"The token id to transfer value from\",\"_operator\":\"The address which triggered the transfer\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"`bytes4(keccak256('onERC3525Received(address,uint256,uint256,uint256,bytes)'))`   unless the transfer is rejected.\"}}},\"title\":\"EIP-3525 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC3525Received(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of an EIP-3525 token value.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC3525Receiver.sol\":\"IERC3525Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/IERC3525Receiver.sol\":{\"keccak256\":\"0x786383869053c8390f7d8425750c9d1d2f96ab524374f56b986414271e8b1c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b2fb8260880b4bfd92733e5ae68393f9ca283683e6ae1cb67d5df750ec8e626\",\"dweb:/ipfs/QmeSokK66DCLeonJbz9qKGRrfS9pAje8VqDJRkoCfGN28M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"onERC3525Received(address,uint256,uint256,uint256,bytes)": {
								"notice": "Handle the receipt of an EIP-3525 token value."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/mocks/ERC3525ReceiverMock.sol": {
				"ERC3525ReceiverMock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "retval",
									"type": "bytes4"
								},
								{
									"internalType": "enum ERC3525ReceiverMock.Error",
									"name": "error",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gas",
									"type": "uint256"
								}
							],
							"name": "Received",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC3525Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":159:1490  contract ERC3525ReceiverMock is IERC165, IERC3525Receiver {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":526:623  constructor(bytes4 retval, Error error) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":576:592  _retval = retval */\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":611:616  error */\n  dup1\n    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":602:616  _error = error */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  tag_7\n  tag_8\n  jump\t// in\ntag_7:\n  0xa0\n  dup2\n  0x03\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  tag_10\n  tag_8\n  jump\t// in\ntag_10:\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":526:623  constructor(bytes4 retval, Error error) {... */\n  pop\n  pop\n    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":159:1490  contract ERC3525ReceiverMock is IERC165, IERC3525Receiver {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:455   */\ntag_3:\n    /* \"#utility.yul\":100:106   */\n  0x00\n    /* \"#utility.yul\":108:114   */\n  dup1\n    /* \"#utility.yul\":161:163   */\n  0x40\n    /* \"#utility.yul\":149:158   */\n  dup4\n    /* \"#utility.yul\":140:147   */\n  dup6\n    /* \"#utility.yul\":136:159   */\n  sub\n    /* \"#utility.yul\":132:164   */\n  slt\n    /* \"#utility.yul\":129:181   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":177:178   */\n  0x00\n    /* \"#utility.yul\":174:175   */\n  dup1\n    /* \"#utility.yul\":167:179   */\n  revert\n    /* \"#utility.yul\":129:181   */\ntag_14:\n    /* \"#utility.yul\":203:219   */\n  dup3\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":248:280   */\n  dup2\n  and\n    /* \"#utility.yul\":238:281   */\n  dup2\n  eq\n    /* \"#utility.yul\":228:299   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":295:296   */\n  0x00\n    /* \"#utility.yul\":292:293   */\n  dup1\n    /* \"#utility.yul\":285:297   */\n  revert\n    /* \"#utility.yul\":228:299   */\ntag_15:\n    /* \"#utility.yul\":368:370   */\n  0x20\n    /* \"#utility.yul\":353:371   */\n  dup5\n  add\n    /* \"#utility.yul\":347:372   */\n  mload\n    /* \"#utility.yul\":318:323   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":403:404   */\n  0x04\n    /* \"#utility.yul\":391:405   */\n  dup2\n  lt\n    /* \"#utility.yul\":381:423   */\n  tag_16\n  jumpi\n    /* \"#utility.yul\":419:420   */\n  0x00\n    /* \"#utility.yul\":416:417   */\n  dup1\n    /* \"#utility.yul\":409:421   */\n  revert\n    /* \"#utility.yul\":381:423   */\ntag_16:\n    /* \"#utility.yul\":442:449   */\n  dup1\n    /* \"#utility.yul\":432:449   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:455   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":460:587   */\ntag_8:\n    /* \"#utility.yul\":521:531   */\n  0x4e487b71\n    /* \"#utility.yul\":516:519   */\n  0xe0\n    /* \"#utility.yul\":512:532   */\n  shl\n    /* \"#utility.yul\":509:510   */\n  0x00\n    /* \"#utility.yul\":502:533   */\n  mstore\n    /* \"#utility.yul\":552:556   */\n  0x21\n    /* \"#utility.yul\":549:550   */\n  0x04\n    /* \"#utility.yul\":542:557   */\n  mstore\n    /* \"#utility.yul\":576:580   */\n  0x24\n    /* \"#utility.yul\":573:574   */\n  0x00\n    /* \"#utility.yul\":566:581   */\n  revert\n    /* \"#utility.yul\":460:587   */\ntag_12:\n    /* \"contracts/mocks/ERC3525ReceiverMock.sol\":159:1490  contract ERC3525ReceiverMock is IERC165, IERC3525Receiver {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n  0x00\n  assignImmutable(\"0xc47ece0ffae697632ce145a7086cbcf260f7fa60876ff2606761ea2b7581ee76\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":159:1490  contract ERC3525ReceiverMock is IERC165, IERC3525Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9ce20b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":869:1487  function onERC3525Received(... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1152:1185   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1134:1186   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1122:1124   */\n      0x20\n        /* \"#utility.yul\":1107:1125   */\n      add\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":869:1487  function onERC3525Received(... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":629:862  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":1653:1667   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1646:1668   */\n      iszero\n        /* \"#utility.yul\":1628:1669   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":629:862  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      tag_9\n        /* \"#utility.yul\":1488:1675   */\n      jump\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":869:1487  function onERC3525Received(... */\n    tag_8:\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1065:1071  bytes4 */\n      0x00\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1097:1120  Error.RevertWithMessage */\n      0x01\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1087:1093  _error */\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1087:1120  _error == Error.RevertWithMessage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      tag_22\n      tag_20\n      jump\t// in\n    tag_22:\n      sub\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1083:1376  if (_error == Error.RevertWithMessage) {... */\n      tag_23\n      jumpi\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1136:1176  revert(\"ERC3525ReceiverMock: reverting\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2014:2016   */\n      0x20\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1136:1176  revert(\"ERC3525ReceiverMock: reverting\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1996:2017   */\n      mstore\n        /* \"#utility.yul\":2053:2055   */\n      0x1e\n        /* \"#utility.yul\":2033:2051   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2026:2056   */\n      mstore\n        /* \"#utility.yul\":2092:2124   */\n      0x4552433335323552656365697665724d6f636b3a20726576657274696e670000\n        /* \"#utility.yul\":2072:2090   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2065:2125   */\n      mstore\n        /* \"#utility.yul\":2142:2160   */\n      0x64\n      add\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1136:1176  revert(\"ERC3525ReceiverMock: reverting\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1083:1376  if (_error == Error.RevertWithMessage) {... */\n    tag_23:\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1207:1233  Error.RevertWithoutMessage */\n      0x02\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1197:1203  _error */\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1197:1233  _error == Error.RevertWithoutMessage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_30\n      tag_20\n      jump\t// in\n    tag_30:\n      sub\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1193:1376  if (_error == Error.RevertWithoutMessage) {... */\n      tag_31\n      jumpi\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1249:1257  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1193:1376  if (_error == Error.RevertWithoutMessage) {... */\n    tag_31:\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1288:1299  Error.Panic */\n      0x03\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1278:1284  _error */\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1278:1299  _error == Error.Panic */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_36\n      tag_20\n      jump\t// in\n    tag_36:\n      sub\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1274:1376  if (_error == Error.Panic) {... */\n      tag_37\n      jumpi\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1315:1324  uint256 a */\n      0x00\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1327:1350  uint256(0) / uint256(0) */\n      tag_38\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1315:1324  uint256 a */\n      dup2\n      dup1\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1327:1350  uint256(0) / uint256(0) */\n      tag_39\n      jump\t// in\n    tag_38:\n      pop\n      pop\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1274:1376  if (_error == Error.Panic) {... */\n    tag_37:\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1390:1456  Received(operator, fromTokenId, toTokenId, value, data, gasleft()) */\n      0x7693f14379c435d2f83242a3efbdcca5efc90c59cbcf91f258ed512e511b1951\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1399:1407  operator */\n      dup8\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1409:1420  fromTokenId */\n      dup8\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1422:1431  toTokenId */\n      dup8\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1433:1438  value */\n      dup8\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1440:1444  data */\n      dup8\n      dup8\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1446:1455  gasleft() */\n      gas\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1390:1456  Received(operator, fromTokenId, toTokenId, value, data, gasleft()) */\n      mload(0x40)\n      tag_40\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":1473:1480  _retval */\n      immutable(\"0xc47ece0ffae697632ce145a7086cbcf260f7fa60876ff2606761ea2b7581ee76\")\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":869:1487  function onERC3525Received(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":629:862  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_14:\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":714:718  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":749:789  interfaceId == type(IERC165).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x01ffc9a7)\n      eq\n      dup1\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":749:855  interfaceId == type(IERC165).interfaceId || ... */\n      tag_43\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":806:855  interfaceId == type(IERC3525Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x9ce20b)\n      eq\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":749:855  interfaceId == type(IERC165).interfaceId || ... */\n    tag_43:\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":730:855  return... */\n      swap3\n        /* \"contracts/mocks/ERC3525ReceiverMock.sol\":629:862  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:985   */\n    tag_7:\n        /* \"#utility.yul\":120:126   */\n      0x00\n        /* \"#utility.yul\":128:134   */\n      dup1\n        /* \"#utility.yul\":136:142   */\n      0x00\n        /* \"#utility.yul\":144:150   */\n      dup1\n        /* \"#utility.yul\":152:158   */\n      0x00\n        /* \"#utility.yul\":160:166   */\n      dup1\n        /* \"#utility.yul\":213:216   */\n      0xa0\n        /* \"#utility.yul\":201:210   */\n      dup8\n        /* \"#utility.yul\":192:199   */\n      dup10\n        /* \"#utility.yul\":188:211   */\n      sub\n        /* \"#utility.yul\":184:217   */\n      slt\n        /* \"#utility.yul\":181:234   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":230:231   */\n      0x00\n        /* \"#utility.yul\":227:228   */\n      dup1\n        /* \"#utility.yul\":220:232   */\n      revert\n        /* \"#utility.yul\":181:234   */\n    tag_46:\n        /* \"#utility.yul\":256:279   */\n      dup7\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":308:339   */\n      dup2\n      and\n        /* \"#utility.yul\":298:340   */\n      dup2\n      eq\n        /* \"#utility.yul\":288:358   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":354:355   */\n      0x00\n        /* \"#utility.yul\":351:352   */\n      dup1\n        /* \"#utility.yul\":344:356   */\n      revert\n        /* \"#utility.yul\":288:358   */\n    tag_47:\n        /* \"#utility.yul\":377:382   */\n      swap6\n      pop\n        /* \"#utility.yul\":429:431   */\n      0x20\n        /* \"#utility.yul\":414:432   */\n      dup8\n      add\n        /* \"#utility.yul\":401:433   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":480:482   */\n      0x40\n        /* \"#utility.yul\":465:483   */\n      dup8\n      add\n        /* \"#utility.yul\":452:484   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":531:533   */\n      0x60\n        /* \"#utility.yul\":516:534   */\n      dup8\n      add\n        /* \"#utility.yul\":503:535   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":586:589   */\n      0x80\n        /* \"#utility.yul\":571:590   */\n      dup8\n      add\n        /* \"#utility.yul\":558:591   */\n      calldataload\n        /* \"#utility.yul\":610:628   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":640:654   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":637:671   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":667:668   */\n      0x00\n        /* \"#utility.yul\":664:665   */\n      dup1\n        /* \"#utility.yul\":657:669   */\n      revert\n        /* \"#utility.yul\":637:671   */\n    tag_48:\n        /* \"#utility.yul\":705:711   */\n      dup2\n        /* \"#utility.yul\":694:703   */\n      dup10\n        /* \"#utility.yul\":690:712   */\n      add\n        /* \"#utility.yul\":680:712   */\n      swap2\n      pop\n        /* \"#utility.yul\":750:757   */\n      dup10\n        /* \"#utility.yul\":743:747   */\n      0x1f\n        /* \"#utility.yul\":739:741   */\n      dup4\n        /* \"#utility.yul\":735:748   */\n      add\n        /* \"#utility.yul\":731:758   */\n      slt\n        /* \"#utility.yul\":721:776   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":772:773   */\n      0x00\n        /* \"#utility.yul\":769:770   */\n      dup1\n        /* \"#utility.yul\":762:774   */\n      revert\n        /* \"#utility.yul\":721:776   */\n    tag_49:\n        /* \"#utility.yul\":812:814   */\n      dup2\n        /* \"#utility.yul\":799:815   */\n      calldataload\n        /* \"#utility.yul\":838:840   */\n      dup2\n        /* \"#utility.yul\":830:836   */\n      dup2\n        /* \"#utility.yul\":827:841   */\n      gt\n        /* \"#utility.yul\":824:858   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":851:852   */\n      dup1\n        /* \"#utility.yul\":844:856   */\n      revert\n        /* \"#utility.yul\":824:858   */\n    tag_50:\n        /* \"#utility.yul\":899:906   */\n      dup11\n        /* \"#utility.yul\":894:896   */\n      0x20\n        /* \"#utility.yul\":885:891   */\n      dup3\n        /* \"#utility.yul\":881:883   */\n      dup6\n        /* \"#utility.yul\":877:892   */\n      add\n        /* \"#utility.yul\":873:897   */\n      add\n        /* \"#utility.yul\":870:907   */\n      gt\n        /* \"#utility.yul\":867:924   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":920:921   */\n      0x00\n        /* \"#utility.yul\":917:918   */\n      dup1\n        /* \"#utility.yul\":910:922   */\n      revert\n        /* \"#utility.yul\":867:924   */\n    tag_51:\n        /* \"#utility.yul\":951:953   */\n      0x20\n        /* \"#utility.yul\":947:949   */\n      dup4\n        /* \"#utility.yul\":943:954   */\n      add\n        /* \"#utility.yul\":933:954   */\n      swap5\n      pop\n        /* \"#utility.yul\":973:979   */\n      dup1\n        /* \"#utility.yul\":963:979   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:985   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":1197:1483   */\n    tag_13:\n        /* \"#utility.yul\":1255:1261   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x20\n        /* \"#utility.yul\":1296:1305   */\n      dup3\n        /* \"#utility.yul\":1287:1294   */\n      dup5\n        /* \"#utility.yul\":1283:1306   */\n      sub\n        /* \"#utility.yul\":1279:1311   */\n      slt\n        /* \"#utility.yul\":1276:1328   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1324:1325   */\n      0x00\n        /* \"#utility.yul\":1321:1322   */\n      dup1\n        /* \"#utility.yul\":1314:1326   */\n      revert\n        /* \"#utility.yul\":1276:1328   */\n    tag_54:\n        /* \"#utility.yul\":1350:1373   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1402:1434   */\n      dup2\n      and\n        /* \"#utility.yul\":1392:1435   */\n      dup2\n      eq\n        /* \"#utility.yul\":1382:1453   */\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1449:1450   */\n      0x00\n        /* \"#utility.yul\":1446:1447   */\n      dup1\n        /* \"#utility.yul\":1439:1451   */\n      revert\n        /* \"#utility.yul\":1382:1453   */\n    tag_55:\n        /* \"#utility.yul\":1472:1477   */\n      swap4\n        /* \"#utility.yul\":1197:1483   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1680:1807   */\n    tag_20:\n        /* \"#utility.yul\":1741:1751   */\n      0x4e487b71\n        /* \"#utility.yul\":1736:1739   */\n      0xe0\n        /* \"#utility.yul\":1732:1752   */\n      shl\n        /* \"#utility.yul\":1729:1730   */\n      0x00\n        /* \"#utility.yul\":1722:1753   */\n      mstore\n        /* \"#utility.yul\":1772:1776   */\n      0x21\n        /* \"#utility.yul\":1769:1770   */\n      0x04\n        /* \"#utility.yul\":1762:1777   */\n      mstore\n        /* \"#utility.yul\":1796:1800   */\n      0x24\n        /* \"#utility.yul\":1793:1794   */\n      0x00\n        /* \"#utility.yul\":1786:1801   */\n      revert\n        /* \"#utility.yul\":2171:2388   */\n    tag_39:\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2237:2238   */\n      dup3\n        /* \"#utility.yul\":2227:2359   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":2281:2291   */\n      0x4e487b71\n        /* \"#utility.yul\":2276:2279   */\n      0xe0\n        /* \"#utility.yul\":2272:2292   */\n      shl\n        /* \"#utility.yul\":2269:2270   */\n      0x00\n        /* \"#utility.yul\":2262:2293   */\n      mstore\n        /* \"#utility.yul\":2316:2320   */\n      0x12\n        /* \"#utility.yul\":2313:2314   */\n      0x04\n        /* \"#utility.yul\":2306:2321   */\n      mstore\n        /* \"#utility.yul\":2344:2348   */\n      0x24\n        /* \"#utility.yul\":2341:2342   */\n      0x00\n        /* \"#utility.yul\":2334:2349   */\n      revert\n        /* \"#utility.yul\":2227:2359   */\n    tag_60:\n      pop\n        /* \"#utility.yul\":2373:2382   */\n      div\n      swap1\n        /* \"#utility.yul\":2171:2388   */\n      jump\t// out\n        /* \"#utility.yul\":2393:3169   */\n    tag_41:\n        /* \"#utility.yul\":2719:2720   */\n      0x01\n        /* \"#utility.yul\":2715:2716   */\n      dup1\n        /* \"#utility.yul\":2710:2713   */\n      0xa0\n        /* \"#utility.yul\":2706:2717   */\n      shl\n        /* \"#utility.yul\":2702:2721   */\n      sub\n        /* \"#utility.yul\":2694:2700   */\n      dup9\n        /* \"#utility.yul\":2690:2722   */\n      and\n        /* \"#utility.yul\":2679:2688   */\n      dup2\n        /* \"#utility.yul\":2672:2723   */\n      mstore\n        /* \"#utility.yul\":2759:2765   */\n      dup7\n        /* \"#utility.yul\":2754:2756   */\n      0x20\n        /* \"#utility.yul\":2743:2752   */\n      dup3\n        /* \"#utility.yul\":2739:2757   */\n      add\n        /* \"#utility.yul\":2732:2766   */\n      mstore\n        /* \"#utility.yul\":2802:2808   */\n      dup6\n        /* \"#utility.yul\":2797:2799   */\n      0x40\n        /* \"#utility.yul\":2786:2795   */\n      dup3\n        /* \"#utility.yul\":2782:2800   */\n      add\n        /* \"#utility.yul\":2775:2809   */\n      mstore\n        /* \"#utility.yul\":2845:2851   */\n      dup5\n        /* \"#utility.yul\":2840:2842   */\n      0x60\n        /* \"#utility.yul\":2829:2838   */\n      dup3\n        /* \"#utility.yul\":2825:2843   */\n      add\n        /* \"#utility.yul\":2818:2852   */\n      mstore\n        /* \"#utility.yul\":2889:2892   */\n      0xc0\n        /* \"#utility.yul\":2883:2886   */\n      0x80\n        /* \"#utility.yul\":2872:2881   */\n      dup3\n        /* \"#utility.yul\":2868:2887   */\n      add\n        /* \"#utility.yul\":2861:2893   */\n      mstore\n        /* \"#utility.yul\":2930:2936   */\n      dup3\n        /* \"#utility.yul\":2924:2927   */\n      0xc0\n        /* \"#utility.yul\":2913:2922   */\n      dup3\n        /* \"#utility.yul\":2909:2928   */\n      add\n        /* \"#utility.yul\":2902:2937   */\n      mstore\n        /* \"#utility.yul\":2988:2994   */\n      dup3\n        /* \"#utility.yul\":2980:2986   */\n      dup5\n        /* \"#utility.yul\":2974:2977   */\n      0xe0\n        /* \"#utility.yul\":2963:2972   */\n      dup4\n        /* \"#utility.yul\":2959:2978   */\n      add\n        /* \"#utility.yul\":2946:2995   */\n      calldatacopy\n        /* \"#utility.yul\":3045:3046   */\n      0x00\n        /* \"#utility.yul\":3039:3042   */\n      0xe0\n        /* \"#utility.yul\":3030:3036   */\n      dup5\n        /* \"#utility.yul\":3019:3028   */\n      dup4\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":3011:3043   */\n      add\n        /* \"#utility.yul\":3004:3047   */\n      mstore\n        /* \"#utility.yul\":2653:2657   */\n      0x00\n        /* \"#utility.yul\":3115:3118   */\n      0xe0\n        /* \"#utility.yul\":3108:3110   */\n      0x1f\n        /* \"#utility.yul\":3104:3111   */\n      not\n        /* \"#utility.yul\":3099:3101   */\n      0x1f\n        /* \"#utility.yul\":3091:3097   */\n      dup7\n        /* \"#utility.yul\":3087:3102   */\n      add\n        /* \"#utility.yul\":3083:3112   */\n      and\n        /* \"#utility.yul\":3072:3081   */\n      dup4\n        /* \"#utility.yul\":3068:3113   */\n      add\n        /* \"#utility.yul\":3064:3119   */\n      add\n        /* \"#utility.yul\":3056:3119   */\n      swap1\n      pop\n        /* \"#utility.yul\":3156:3162   */\n      dup3\n        /* \"#utility.yul\":3150:3153   */\n      0xa0\n        /* \"#utility.yul\":3139:3148   */\n      dup4\n        /* \"#utility.yul\":3135:3154   */\n      add\n        /* \"#utility.yul\":3128:3163   */\n      mstore\n        /* \"#utility.yul\":2393:3169   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208483f6792abc02ef28fc13c87e30148c5d79c03352fc5c0b5e4f794459ac698964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes4t_enum$_Error_$44_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"panic_error_0x21": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:589:3",
										"nodeType": "YulBlock",
										"src": "0:589:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "119:336:3",
													"nodeType": "YulBlock",
													"src": "119:336:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "165:16:3",
																"nodeType": "YulBlock",
																"src": "165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:3",
																					"nodeType": "YulLiteral",
																					"src": "174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:3",
																					"nodeType": "YulLiteral",
																					"src": "177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:3"
																			},
																			"nativeSrc": "167:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:3"
																		},
																		"nativeSrc": "167:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "140:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "140:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "149:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "149:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "136:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "136:3:3"
																		},
																		"nativeSrc": "136:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "136:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "161:2:3",
																		"nodeType": "YulLiteral",
																		"src": "161:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "132:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "132:3:3"
																},
																"nativeSrc": "132:32:3",
																"nodeType": "YulFunctionCall",
																"src": "132:32:3"
															},
															"nativeSrc": "129:52:3",
															"nodeType": "YulIf",
															"src": "129:52:3"
														},
														{
															"nativeSrc": "190:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "190:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "209:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "209:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "203:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "203:5:3"
																},
																"nativeSrc": "203:16:3",
																"nodeType": "YulFunctionCall",
																"src": "203:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "194:5:3",
																	"nodeType": "YulTypedName",
																	"src": "194:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "283:16:3",
																"nodeType": "YulBlock",
																"src": "283:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "292:1:3",
																					"nodeType": "YulLiteral",
																					"src": "292:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "295:1:3",
																					"nodeType": "YulLiteral",
																					"src": "295:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "285:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:3"
																			},
																			"nativeSrc": "285:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:3"
																		},
																		"nativeSrc": "285:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "241:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "241:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "252:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "252:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "263:3:3",
																								"nodeType": "YulLiteral",
																								"src": "263:3:3",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "268:10:3",
																								"nodeType": "YulLiteral",
																								"src": "268:10:3",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "259:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "259:3:3"
																						},
																						"nativeSrc": "259:20:3",
																						"nodeType": "YulFunctionCall",
																						"src": "259:20:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "248:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "248:3:3"
																				},
																				"nativeSrc": "248:32:3",
																				"nodeType": "YulFunctionCall",
																				"src": "248:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "238:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "238:2:3"
																		},
																		"nativeSrc": "238:43:3",
																		"nodeType": "YulFunctionCall",
																		"src": "238:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "231:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:3"
																},
																"nativeSrc": "231:51:3",
																"nodeType": "YulFunctionCall",
																"src": "231:51:3"
															},
															"nativeSrc": "228:71:3",
															"nodeType": "YulIf",
															"src": "228:71:3"
														},
														{
															"nativeSrc": "308:15:3",
															"nodeType": "YulAssignment",
															"src": "308:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "318:5:3",
																"nodeType": "YulIdentifier",
																"src": "318:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "308:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "308:6:3"
																}
															]
														},
														{
															"nativeSrc": "332:40:3",
															"nodeType": "YulVariableDeclaration",
															"src": "332:40:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "357:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "357:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "368:2:3",
																				"nodeType": "YulLiteral",
																				"src": "368:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "353:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:3"
																		},
																		"nativeSrc": "353:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "353:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "347:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "347:5:3"
																},
																"nativeSrc": "347:25:3",
																"nodeType": "YulFunctionCall",
																"src": "347:25:3"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "336:7:3",
																	"nodeType": "YulTypedName",
																	"src": "336:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "407:16:3",
																"nodeType": "YulBlock",
																"src": "407:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "416:1:3",
																					"nodeType": "YulLiteral",
																					"src": "416:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "419:1:3",
																					"nodeType": "YulLiteral",
																					"src": "419:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "409:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "409:6:3"
																			},
																			"nativeSrc": "409:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "409:12:3"
																		},
																		"nativeSrc": "409:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "409:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "394:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "394:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "403:1:3",
																				"nodeType": "YulLiteral",
																				"src": "403:1:3",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "391:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "391:2:3"
																		},
																		"nativeSrc": "391:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "391:14:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "384:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "384:6:3"
																},
																"nativeSrc": "384:22:3",
																"nodeType": "YulFunctionCall",
																"src": "384:22:3"
															},
															"nativeSrc": "381:42:3",
															"nodeType": "YulIf",
															"src": "381:42:3"
														},
														{
															"nativeSrc": "432:17:3",
															"nodeType": "YulAssignment",
															"src": "432:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "442:7:3",
																"nodeType": "YulIdentifier",
																"src": "442:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "432:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "432:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_enum$_Error_$44_fromMemory",
												"nativeSrc": "14:441:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "77:9:3",
														"nodeType": "YulTypedName",
														"src": "77:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "88:7:3",
														"nodeType": "YulTypedName",
														"src": "88:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "100:6:3",
														"nodeType": "YulTypedName",
														"src": "100:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "108:6:3",
														"nodeType": "YulTypedName",
														"src": "108:6:3",
														"type": ""
													}
												],
												"src": "14:441:3"
											},
											{
												"body": {
													"nativeSrc": "492:95:3",
													"nodeType": "YulBlock",
													"src": "492:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "509:1:3",
																		"nodeType": "YulLiteral",
																		"src": "509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "516:3:3",
																				"nodeType": "YulLiteral",
																				"src": "516:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "521:10:3",
																				"nodeType": "YulLiteral",
																				"src": "521:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "512:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:3"
																		},
																		"nativeSrc": "512:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "512:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "502:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "502:6:3"
																},
																"nativeSrc": "502:31:3",
																"nodeType": "YulFunctionCall",
																"src": "502:31:3"
															},
															"nativeSrc": "502:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "502:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "549:1:3",
																		"nodeType": "YulLiteral",
																		"src": "549:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "552:4:3",
																		"nodeType": "YulLiteral",
																		"src": "552:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "542:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:3"
																},
																"nativeSrc": "542:15:3",
																"nodeType": "YulFunctionCall",
																"src": "542:15:3"
															},
															"nativeSrc": "542:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "542:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:3",
																		"nodeType": "YulLiteral",
																		"src": "573:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "576:4:3",
																		"nodeType": "YulLiteral",
																		"src": "576:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "566:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "566:6:3"
																},
																"nativeSrc": "566:15:3",
																"nodeType": "YulFunctionCall",
																"src": "566:15:3"
															},
															"nativeSrc": "566:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "566:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "460:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "460:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4t_enum$_Error_$44_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(lt(value_1, 4)) { revert(0, 0) }\n        value1 := value_1\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b506040516104c53803806104c583398101604081905261002e9161006d565b6001600160e01b0319821660805280600381111561004e5761004e6100b4565b60a0816003811115610062576100626100b4565b8152505050506100c8565b5f806040838503121561007e575f80fd5b82516001600160e01b031981168114610095575f80fd5b6020840151909250600481106100a9575f80fd5b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b60805160a0516103cf6100f65f395f8181609001528181610115015261015201525f6101db01526103cf5ff3fe608060405234801561000f575f80fd5b5060043610610033575f3560e01c80629ce20b1461003757806301ffc9a714610068575b5f80fd5b61004a610045366004610239565b61008b565b6040516001600160e01b031990911681526020015b60405180910390f35b61007b6100763660046102dd565b610204565b604051901515815260200161005f565b5f60017f000000000000000000000000000000000000000000000000000000000000000060038111156100c0576100c061030b565b036101115760405162461bcd60e51b815260206004820152601e60248201527f4552433335323552656365697665724d6f636b3a20726576657274696e670000604482015260640160405180910390fd5b60027f000000000000000000000000000000000000000000000000000000000000000060038111156101455761014561030b565b0361014e575f80fd5b60037f000000000000000000000000000000000000000000000000000000000000000060038111156101825761018261030b565b03610195575f610192818061031f565b50505b7f7693f14379c435d2f83242a3efbdcca5efc90c59cbcf91f258ed512e511b19518787878787875a6040516101d0979695949392919061033e565b60405180910390a1507f00000000000000000000000000000000000000000000000000000000000000009695505050505050565b5f6001600160e01b031982166301ffc9a760e01b148061023357506001600160e01b03198216629ce20b60e01b145b92915050565b5f805f805f8060a0878903121561024e575f80fd5b86356001600160a01b0381168114610264575f80fd5b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115610295575f80fd5b818901915089601f8301126102a8575f80fd5b8135818111156102b6575f80fd5b8a60208285010111156102c7575f80fd5b6020830194508093505050509295509295509295565b5f602082840312156102ed575f80fd5b81356001600160e01b031981168114610304575f80fd5b9392505050565b634e487b7160e01b5f52602160045260245ffd5b5f8261033957634e487b7160e01b5f52601260045260245ffd5b500490565b60018060a01b038816815286602082015285604082015284606082015260c060808201528260c0820152828460e08301375f60e084830101525f60e0601f19601f86011683010190508260a08301529897505050505050505056fea26469706673582212208483f6792abc02ef28fc13c87e30148c5d79c03352fc5c0b5e4f794459ac698964736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4C5 CODESIZE SUB DUP1 PUSH2 0x4C5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x80 MSTORE DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4E JUMPI PUSH2 0x4E PUSH2 0xB4 JUMP JUMPDEST PUSH1 0xA0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x62 JUMPI PUSH2 0x62 PUSH2 0xB4 JUMP JUMPDEST DUP2 MSTORE POP POP POP POP PUSH2 0xC8 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x4 DUP2 LT PUSH2 0xA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x3CF PUSH2 0xF6 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0x90 ADD MSTORE DUP2 DUP2 PUSH2 0x115 ADD MSTORE PUSH2 0x152 ADD MSTORE PUSH0 PUSH2 0x1DB ADD MSTORE PUSH2 0x3CF PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x9CE20B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x45 CALLDATASIZE PUSH1 0x4 PUSH2 0x239 JUMP JUMPDEST PUSH2 0x8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC0 JUMPI PUSH2 0xC0 PUSH2 0x30B JUMP JUMPDEST SUB PUSH2 0x111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433335323552656365697665724D6F636B3A20726576657274696E670000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x145 JUMPI PUSH2 0x145 PUSH2 0x30B JUMP JUMPDEST SUB PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH2 0x182 PUSH2 0x30B JUMP JUMPDEST SUB PUSH2 0x195 JUMPI PUSH0 PUSH2 0x192 DUP2 DUP1 PUSH2 0x31F JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x7693F14379C435D2F83242A3EFBDCCA5EFC90C59CBCF91F258ED512E511B1951 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 GAS PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH32 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x233 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x9CE20B PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x264 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x295 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x339 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0xE0 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0xE0 DUP5 DUP4 ADD ADD MSTORE PUSH0 PUSH1 0xE0 PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND DUP4 ADD ADD SWAP1 POP DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP4 0xF6 PUSH26 0x2ABC02EF28FC13C87E30148C5D79C03352FC5C0B5E4F794459AC PUSH10 0x8964736F6C6343000818 STOP CALLER ",
							"sourceMap": "159:1331:2:-:0;;;526:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;576:16:2;;;;611:5;602:14;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;526:97;;159:1331;;14:441:3;100:6;108;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;203:16;;-1:-1:-1;;;;;;248:32:3;;238:43;;228:71;;295:1;292;285:12;228:71;368:2;353:18;;347:25;318:5;;-1:-1:-1;403:1:3;391:14;;381:42;;419:1;416;409:12;381:42;442:7;432:17;;;14:441;;;;;:::o;460:127::-;521:10;516:3;512:20;509:1;502:31;552:4;549:1;542:15;576:4;573:1;566:15;460:127;159:1331:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC3525Received_171": {
									"entryPoint": 139,
									"id": 171,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@supportsInterface_103": {
									"entryPoint": 516,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc0b94c660e153545ddd96677a291958c4537b143d81b06a9581e813a8f1937e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3171:3",
										"nodeType": "YulBlock",
										"src": "0:3171:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "171:814:3",
													"nodeType": "YulBlock",
													"src": "171:814:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "218:16:3",
																"nodeType": "YulBlock",
																"src": "218:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "227:1:3",
																					"nodeType": "YulLiteral",
																					"src": "227:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "230:1:3",
																					"nodeType": "YulLiteral",
																					"src": "230:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "220:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "220:6:3"
																			},
																			"nativeSrc": "220:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "220:12:3"
																		},
																		"nativeSrc": "220:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "220:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "192:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "192:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "201:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "201:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "188:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "188:3:3"
																		},
																		"nativeSrc": "188:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "188:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "213:3:3",
																		"nodeType": "YulLiteral",
																		"src": "213:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "184:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "184:3:3"
																},
																"nativeSrc": "184:33:3",
																"nodeType": "YulFunctionCall",
																"src": "184:33:3"
															},
															"nativeSrc": "181:53:3",
															"nodeType": "YulIf",
															"src": "181:53:3"
														},
														{
															"nativeSrc": "243:36:3",
															"nodeType": "YulVariableDeclaration",
															"src": "243:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "269:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "269:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "256:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "256:12:3"
																},
																"nativeSrc": "256:23:3",
																"nodeType": "YulFunctionCall",
																"src": "256:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "247:5:3",
																	"nodeType": "YulTypedName",
																	"src": "247:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "342:16:3",
																"nodeType": "YulBlock",
																"src": "342:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "351:1:3",
																					"nodeType": "YulLiteral",
																					"src": "351:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "354:1:3",
																					"nodeType": "YulLiteral",
																					"src": "354:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "344:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:3"
																			},
																			"nativeSrc": "344:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "344:12:3"
																		},
																		"nativeSrc": "344:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "344:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "301:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "301:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "312:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "312:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "327:3:3",
																										"nodeType": "YulLiteral",
																										"src": "327:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "332:1:3",
																										"nodeType": "YulLiteral",
																										"src": "332:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "323:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "323:3:3"
																								},
																								"nativeSrc": "323:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "323:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "336:1:3",
																								"nodeType": "YulLiteral",
																								"src": "336:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "319:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "319:3:3"
																						},
																						"nativeSrc": "319:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "319:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "308:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "308:3:3"
																				},
																				"nativeSrc": "308:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "308:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "298:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "298:2:3"
																		},
																		"nativeSrc": "298:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "298:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "291:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "291:6:3"
																},
																"nativeSrc": "291:50:3",
																"nodeType": "YulFunctionCall",
																"src": "291:50:3"
															},
															"nativeSrc": "288:70:3",
															"nodeType": "YulIf",
															"src": "288:70:3"
														},
														{
															"nativeSrc": "367:15:3",
															"nodeType": "YulAssignment",
															"src": "367:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "377:5:3",
																"nodeType": "YulIdentifier",
																"src": "377:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "367:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:3"
																}
															]
														},
														{
															"nativeSrc": "391:42:3",
															"nodeType": "YulAssignment",
															"src": "391:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "418:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "418:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "429:2:3",
																				"nodeType": "YulLiteral",
																				"src": "429:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "414:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "414:3:3"
																		},
																		"nativeSrc": "414:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "414:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "401:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "401:12:3"
																},
																"nativeSrc": "401:32:3",
																"nodeType": "YulFunctionCall",
																"src": "401:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "391:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:3"
																}
															]
														},
														{
															"nativeSrc": "442:42:3",
															"nodeType": "YulAssignment",
															"src": "442:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "469:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "469:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "480:2:3",
																				"nodeType": "YulLiteral",
																				"src": "480:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "465:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "465:3:3"
																		},
																		"nativeSrc": "465:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "465:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "452:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "452:12:3"
																},
																"nativeSrc": "452:32:3",
																"nodeType": "YulFunctionCall",
																"src": "452:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "442:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:3"
																}
															]
														},
														{
															"nativeSrc": "493:42:3",
															"nodeType": "YulAssignment",
															"src": "493:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:3",
																				"nodeType": "YulLiteral",
																				"src": "531:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:3"
																		},
																		"nativeSrc": "516:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "503:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "503:12:3"
																},
																"nativeSrc": "503:32:3",
																"nodeType": "YulFunctionCall",
																"src": "503:32:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "493:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:3"
																}
															]
														},
														{
															"nativeSrc": "544:47:3",
															"nodeType": "YulVariableDeclaration",
															"src": "544:47:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "575:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "575:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "586:3:3",
																				"nodeType": "YulLiteral",
																				"src": "586:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "571:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "571:3:3"
																		},
																		"nativeSrc": "571:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "571:19:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "558:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "558:12:3"
																},
																"nativeSrc": "558:33:3",
																"nodeType": "YulFunctionCall",
																"src": "558:33:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "548:6:3",
																	"nodeType": "YulTypedName",
																	"src": "548:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "600:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "600:28:3",
															"value": {
																"kind": "number",
																"nativeSrc": "610:18:3",
																"nodeType": "YulLiteral",
																"src": "610:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "604:2:3",
																	"nodeType": "YulTypedName",
																	"src": "604:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "655:16:3",
																"nodeType": "YulBlock",
																"src": "655:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "664:1:3",
																					"nodeType": "YulLiteral",
																					"src": "664:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "667:1:3",
																					"nodeType": "YulLiteral",
																					"src": "667:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "657:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "657:6:3"
																			},
																			"nativeSrc": "657:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "657:12:3"
																		},
																		"nativeSrc": "657:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "657:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "643:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "643:6:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "651:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "651:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "640:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "640:2:3"
																},
																"nativeSrc": "640:14:3",
																"nodeType": "YulFunctionCall",
																"src": "640:14:3"
															},
															"nativeSrc": "637:34:3",
															"nodeType": "YulIf",
															"src": "637:34:3"
														},
														{
															"nativeSrc": "680:32:3",
															"nodeType": "YulVariableDeclaration",
															"src": "680:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "694:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "694:9:3"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "705:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "705:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "690:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "690:3:3"
																},
																"nativeSrc": "690:22:3",
																"nodeType": "YulFunctionCall",
																"src": "690:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "684:2:3",
																	"nodeType": "YulTypedName",
																	"src": "684:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "760:16:3",
																"nodeType": "YulBlock",
																"src": "760:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:3",
																					"nodeType": "YulLiteral",
																					"src": "769:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:1:3",
																					"nodeType": "YulLiteral",
																					"src": "772:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "762:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:3"
																			},
																			"nativeSrc": "762:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "762:12:3"
																		},
																		"nativeSrc": "762:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "739:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "739:2:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "743:4:3",
																						"nodeType": "YulLiteral",
																						"src": "743:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "735:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "735:3:3"
																				},
																				"nativeSrc": "735:13:3",
																				"nodeType": "YulFunctionCall",
																				"src": "735:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "750:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "750:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "731:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "731:3:3"
																		},
																		"nativeSrc": "731:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "731:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "724:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:3"
																},
																"nativeSrc": "724:35:3",
																"nodeType": "YulFunctionCall",
																"src": "724:35:3"
															},
															"nativeSrc": "721:55:3",
															"nodeType": "YulIf",
															"src": "721:55:3"
														},
														{
															"nativeSrc": "785:30:3",
															"nodeType": "YulVariableDeclaration",
															"src": "785:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "812:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "812:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "799:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "799:12:3"
																},
																"nativeSrc": "799:16:3",
																"nodeType": "YulFunctionCall",
																"src": "799:16:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "789:6:3",
																	"nodeType": "YulTypedName",
																	"src": "789:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "842:16:3",
																"nodeType": "YulBlock",
																"src": "842:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "851:1:3",
																					"nodeType": "YulLiteral",
																					"src": "851:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "854:1:3",
																					"nodeType": "YulLiteral",
																					"src": "854:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "844:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:3"
																			},
																			"nativeSrc": "844:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "844:12:3"
																		},
																		"nativeSrc": "844:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "844:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "830:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "830:6:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "838:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "838:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "827:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "827:2:3"
																},
																"nativeSrc": "827:14:3",
																"nodeType": "YulFunctionCall",
																"src": "827:14:3"
															},
															"nativeSrc": "824:34:3",
															"nodeType": "YulIf",
															"src": "824:34:3"
														},
														{
															"body": {
																"nativeSrc": "908:16:3",
																"nodeType": "YulBlock",
																"src": "908:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "917:1:3",
																					"nodeType": "YulLiteral",
																					"src": "917:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "920:1:3",
																					"nodeType": "YulLiteral",
																					"src": "920:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "910:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "910:6:3"
																			},
																			"nativeSrc": "910:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "910:12:3"
																		},
																		"nativeSrc": "910:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "910:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "881:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "881:2:3"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "885:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "877:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "877:3:3"
																				},
																				"nativeSrc": "877:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "877:15:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "894:2:3",
																				"nodeType": "YulLiteral",
																				"src": "894:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "873:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "873:3:3"
																		},
																		"nativeSrc": "873:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "873:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "899:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "899:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "870:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "870:2:3"
																},
																"nativeSrc": "870:37:3",
																"nodeType": "YulFunctionCall",
																"src": "870:37:3"
															},
															"nativeSrc": "867:57:3",
															"nodeType": "YulIf",
															"src": "867:57:3"
														},
														{
															"nativeSrc": "933:21:3",
															"nodeType": "YulAssignment",
															"src": "933:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "947:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "947:2:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "951:2:3",
																		"nodeType": "YulLiteral",
																		"src": "951:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "943:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:3"
																},
																"nativeSrc": "943:11:3",
																"nodeType": "YulFunctionCall",
																"src": "943:11:3"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "933:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:3"
																}
															]
														},
														{
															"nativeSrc": "963:16:3",
															"nodeType": "YulAssignment",
															"src": "963:16:3",
															"value": {
																"name": "length",
																"nativeSrc": "973:6:3",
																"nodeType": "YulIdentifier",
																"src": "973:6:3"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "963:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "963:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_calldata_ptr",
												"nativeSrc": "14:971:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "97:9:3",
														"nodeType": "YulTypedName",
														"src": "97:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "108:7:3",
														"nodeType": "YulTypedName",
														"src": "108:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "120:6:3",
														"nodeType": "YulTypedName",
														"src": "120:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "128:6:3",
														"nodeType": "YulTypedName",
														"src": "128:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "136:6:3",
														"nodeType": "YulTypedName",
														"src": "136:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "144:6:3",
														"nodeType": "YulTypedName",
														"src": "144:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "152:6:3",
														"nodeType": "YulTypedName",
														"src": "152:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "160:6:3",
														"nodeType": "YulTypedName",
														"src": "160:6:3",
														"type": ""
													}
												],
												"src": "14:971:3"
											},
											{
												"body": {
													"nativeSrc": "1089:103:3",
													"nodeType": "YulBlock",
													"src": "1089:103:3",
													"statements": [
														{
															"nativeSrc": "1099:26:3",
															"nodeType": "YulAssignment",
															"src": "1099:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1111:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1111:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1122:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1122:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1107:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1107:3:3"
																},
																"nativeSrc": "1107:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1107:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1099:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1099:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1141:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1141:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1156:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1156:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1168:3:3",
																						"nodeType": "YulLiteral",
																						"src": "1168:3:3",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1173:10:3",
																						"nodeType": "YulLiteral",
																						"src": "1173:10:3",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1164:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nativeSrc": "1164:20:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:20:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1152:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:3"
																		},
																		"nativeSrc": "1152:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1152:33:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1134:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:3"
																},
																"nativeSrc": "1134:52:3",
																"nodeType": "YulFunctionCall",
																"src": "1134:52:3"
															},
															"nativeSrc": "1134:52:3",
															"nodeType": "YulExpressionStatement",
															"src": "1134:52:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "990:202:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1058:9:3",
														"nodeType": "YulTypedName",
														"src": "1058:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1069:6:3",
														"nodeType": "YulTypedName",
														"src": "1069:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1080:4:3",
														"nodeType": "YulTypedName",
														"src": "1080:4:3",
														"type": ""
													}
												],
												"src": "990:202:3"
											},
											{
												"body": {
													"nativeSrc": "1266:217:3",
													"nodeType": "YulBlock",
													"src": "1266:217:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1312:16:3",
																"nodeType": "YulBlock",
																"src": "1312:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1321:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1321:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1324:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1324:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1314:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1314:6:3"
																			},
																			"nativeSrc": "1314:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1314:12:3"
																		},
																		"nativeSrc": "1314:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1314:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1287:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1287:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1296:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1296:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1283:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:3"
																		},
																		"nativeSrc": "1283:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1283:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1279:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:3"
																},
																"nativeSrc": "1279:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1279:32:3"
															},
															"nativeSrc": "1276:52:3",
															"nodeType": "YulIf",
															"src": "1276:52:3"
														},
														{
															"nativeSrc": "1337:36:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1337:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1363:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1363:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1350:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1350:12:3"
																},
																"nativeSrc": "1350:23:3",
																"nodeType": "YulFunctionCall",
																"src": "1350:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1341:5:3",
																	"nodeType": "YulTypedName",
																	"src": "1341:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1437:16:3",
																"nodeType": "YulBlock",
																"src": "1437:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1446:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1446:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1449:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1449:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1439:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1439:6:3"
																			},
																			"nativeSrc": "1439:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1439:12:3"
																		},
																		"nativeSrc": "1439:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1439:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1395:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1395:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1406:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1406:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1417:3:3",
																								"nodeType": "YulLiteral",
																								"src": "1417:3:3",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1422:10:3",
																								"nodeType": "YulLiteral",
																								"src": "1422:10:3",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1413:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1413:3:3"
																						},
																						"nativeSrc": "1413:20:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1413:20:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1402:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1402:3:3"
																				},
																				"nativeSrc": "1402:32:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1402:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1392:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1392:2:3"
																		},
																		"nativeSrc": "1392:43:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1392:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1385:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1385:6:3"
																},
																"nativeSrc": "1385:51:3",
																"nodeType": "YulFunctionCall",
																"src": "1385:51:3"
															},
															"nativeSrc": "1382:71:3",
															"nodeType": "YulIf",
															"src": "1382:71:3"
														},
														{
															"nativeSrc": "1462:15:3",
															"nodeType": "YulAssignment",
															"src": "1462:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "1472:5:3",
																"nodeType": "YulIdentifier",
																"src": "1472:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1462:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "1197:286:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1232:9:3",
														"nodeType": "YulTypedName",
														"src": "1232:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1243:7:3",
														"nodeType": "YulTypedName",
														"src": "1243:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1255:6:3",
														"nodeType": "YulTypedName",
														"src": "1255:6:3",
														"type": ""
													}
												],
												"src": "1197:286:3"
											},
											{
												"body": {
													"nativeSrc": "1583:92:3",
													"nodeType": "YulBlock",
													"src": "1583:92:3",
													"statements": [
														{
															"nativeSrc": "1593:26:3",
															"nodeType": "YulAssignment",
															"src": "1593:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1616:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1601:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:3"
																},
																"nativeSrc": "1601:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1601:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1593:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1635:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1660:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1660:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1653:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "1653:6:3"
																				},
																				"nativeSrc": "1653:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1653:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1646:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1646:6:3"
																		},
																		"nativeSrc": "1646:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1646:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:3"
																},
																"nativeSrc": "1628:41:3",
																"nodeType": "YulFunctionCall",
																"src": "1628:41:3"
															},
															"nativeSrc": "1628:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "1628:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1488:187:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:3",
														"nodeType": "YulTypedName",
														"src": "1552:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1563:6:3",
														"nodeType": "YulTypedName",
														"src": "1563:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1574:4:3",
														"nodeType": "YulTypedName",
														"src": "1574:4:3",
														"type": ""
													}
												],
												"src": "1488:187:3"
											},
											{
												"body": {
													"nativeSrc": "1712:95:3",
													"nodeType": "YulBlock",
													"src": "1712:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1729:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1729:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1736:3:3",
																				"nodeType": "YulLiteral",
																				"src": "1736:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1741:10:3",
																				"nodeType": "YulLiteral",
																				"src": "1741:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1732:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1732:3:3"
																		},
																		"nativeSrc": "1732:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1732:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1722:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:3"
																},
																"nativeSrc": "1722:31:3",
																"nodeType": "YulFunctionCall",
																"src": "1722:31:3"
															},
															"nativeSrc": "1722:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "1722:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1769:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1769:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1772:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1772:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1762:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1762:6:3"
																},
																"nativeSrc": "1762:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1762:15:3"
															},
															"nativeSrc": "1762:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1762:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1793:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1793:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1796:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1796:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1786:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:3"
																},
																"nativeSrc": "1786:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1786:15:3"
															},
															"nativeSrc": "1786:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1786:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1680:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1680:127:3"
											},
											{
												"body": {
													"nativeSrc": "1986:180:3",
													"nodeType": "YulBlock",
													"src": "1986:180:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2003:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2003:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2014:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2014:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1996:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:3"
																},
																"nativeSrc": "1996:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1996:21:3"
															},
															"nativeSrc": "1996:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "1996:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2037:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2037:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2048:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2048:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2033:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2033:3:3"
																		},
																		"nativeSrc": "2033:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2033:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2053:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2053:2:3",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2026:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:3"
																},
																"nativeSrc": "2026:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2026:30:3"
															},
															"nativeSrc": "2026:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2026:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2076:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2076:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2087:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2087:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2072:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2072:3:3"
																		},
																		"nativeSrc": "2072:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2072:18:3"
																	},
																	{
																		"hexValue": "4552433335323552656365697665724d6f636b3a20726576657274696e67",
																		"kind": "string",
																		"nativeSrc": "2092:32:3",
																		"nodeType": "YulLiteral",
																		"src": "2092:32:3",
																		"type": "",
																		"value": "ERC3525ReceiverMock: reverting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2065:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:3"
																},
																"nativeSrc": "2065:60:3",
																"nodeType": "YulFunctionCall",
																"src": "2065:60:3"
															},
															"nativeSrc": "2065:60:3",
															"nodeType": "YulExpressionStatement",
															"src": "2065:60:3"
														},
														{
															"nativeSrc": "2134:26:3",
															"nodeType": "YulAssignment",
															"src": "2134:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2146:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2146:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2157:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2157:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2142:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2142:3:3"
																},
																"nativeSrc": "2142:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2142:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2134:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2134:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc0b94c660e153545ddd96677a291958c4537b143d81b06a9581e813a8f1937e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1812:354:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1963:9:3",
														"nodeType": "YulTypedName",
														"src": "1963:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1977:4:3",
														"nodeType": "YulTypedName",
														"src": "1977:4:3",
														"type": ""
													}
												],
												"src": "1812:354:3"
											},
											{
												"body": {
													"nativeSrc": "2217:171:3",
													"nodeType": "YulBlock",
													"src": "2217:171:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2248:111:3",
																"nodeType": "YulBlock",
																"src": "2248:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2269:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2269:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2276:3:3",
																							"nodeType": "YulLiteral",
																							"src": "2276:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2281:10:3",
																							"nodeType": "YulLiteral",
																							"src": "2281:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2272:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2272:3:3"
																					},
																					"nativeSrc": "2272:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2272:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2262:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2262:6:3"
																			},
																			"nativeSrc": "2262:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2262:31:3"
																		},
																		"nativeSrc": "2262:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2262:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2313:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2313:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2316:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2316:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2306:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2306:6:3"
																			},
																			"nativeSrc": "2306:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2306:15:3"
																		},
																		"nativeSrc": "2306:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2306:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2341:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2341:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2344:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2344:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2334:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2334:6:3"
																			},
																			"nativeSrc": "2334:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2334:15:3"
																		},
																		"nativeSrc": "2334:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2334:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2237:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2237:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2230:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:3"
																},
																"nativeSrc": "2230:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2230:9:3"
															},
															"nativeSrc": "2227:132:3",
															"nodeType": "YulIf",
															"src": "2227:132:3"
														},
														{
															"nativeSrc": "2368:14:3",
															"nodeType": "YulAssignment",
															"src": "2368:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2377:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2377:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2380:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2380:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2373:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:3"
																},
																"nativeSrc": "2373:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2373:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2368:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2368:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2171:217:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2202:1:3",
														"nodeType": "YulTypedName",
														"src": "2202:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2205:1:3",
														"nodeType": "YulTypedName",
														"src": "2205:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2211:1:3",
														"nodeType": "YulTypedName",
														"src": "2211:1:3",
														"type": ""
													}
												],
												"src": "2171:217:3"
											},
											{
												"body": {
													"nativeSrc": "2662:507:3",
													"nodeType": "YulBlock",
													"src": "2662:507:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2694:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2710:3:3",
																								"nodeType": "YulLiteral",
																								"src": "2710:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2715:1:3",
																								"nodeType": "YulLiteral",
																								"src": "2715:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2706:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "2706:3:3"
																						},
																						"nativeSrc": "2706:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "2706:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2719:1:3",
																						"nodeType": "YulLiteral",
																						"src": "2719:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2702:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2702:3:3"
																				},
																				"nativeSrc": "2702:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2702:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2690:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2690:3:3"
																		},
																		"nativeSrc": "2690:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2690:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2672:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:3"
																},
																"nativeSrc": "2672:51:3",
																"nodeType": "YulFunctionCall",
																"src": "2672:51:3"
															},
															"nativeSrc": "2672:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "2672:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2743:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2743:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2754:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2754:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2739:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:3"
																		},
																		"nativeSrc": "2739:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2759:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2759:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2732:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2732:6:3"
																},
																"nativeSrc": "2732:34:3",
																"nodeType": "YulFunctionCall",
																"src": "2732:34:3"
															},
															"nativeSrc": "2732:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "2732:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2786:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2786:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2797:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2797:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2782:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2782:3:3"
																		},
																		"nativeSrc": "2782:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2782:18:3"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2802:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2802:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2775:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2775:6:3"
																},
																"nativeSrc": "2775:34:3",
																"nodeType": "YulFunctionCall",
																"src": "2775:34:3"
															},
															"nativeSrc": "2775:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "2775:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2829:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2829:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2840:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2840:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2825:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2825:3:3"
																		},
																		"nativeSrc": "2825:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2825:18:3"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2845:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2845:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2818:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:3"
																},
																"nativeSrc": "2818:34:3",
																"nodeType": "YulFunctionCall",
																"src": "2818:34:3"
															},
															"nativeSrc": "2818:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "2818:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2872:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2872:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2883:3:3",
																				"nodeType": "YulLiteral",
																				"src": "2883:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2868:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2868:3:3"
																		},
																		"nativeSrc": "2868:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2868:19:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2889:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2861:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:3"
																},
																"nativeSrc": "2861:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2861:32:3"
															},
															"nativeSrc": "2861:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "2861:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2913:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2913:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2924:3:3",
																				"nodeType": "YulLiteral",
																				"src": "2924:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2909:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:3"
																		},
																		"nativeSrc": "2909:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:19:3"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "2930:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2930:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2902:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:3"
																},
																"nativeSrc": "2902:35:3",
																"nodeType": "YulFunctionCall",
																"src": "2902:35:3"
															},
															"nativeSrc": "2902:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "2902:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2963:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2963:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2974:3:3",
																				"nodeType": "YulLiteral",
																				"src": "2974:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2959:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:3"
																		},
																		"nativeSrc": "2959:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:19:3"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "2980:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2980:6:3"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "2988:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2988:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2946:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2946:12:3"
																},
																"nativeSrc": "2946:49:3",
																"nodeType": "YulFunctionCall",
																"src": "2946:49:3"
															},
															"nativeSrc": "2946:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "2946:49:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3019:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:3"
																					},
																					{
																						"name": "value5",
																						"nativeSrc": "3030:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3015:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:3"
																				},
																				"nativeSrc": "3015:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3039:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3039:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3011:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:3"
																		},
																		"nativeSrc": "3011:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3011:32:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3045:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3004:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:3"
																},
																"nativeSrc": "3004:43:3",
																"nodeType": "YulFunctionCall",
																"src": "3004:43:3"
															},
															"nativeSrc": "3004:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "3004:43:3"
														},
														{
															"nativeSrc": "3056:63:3",
															"nodeType": "YulAssignment",
															"src": "3056:63:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3072:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3072:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value5",
																								"nativeSrc": "3091:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "3091:6:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3099:2:3",
																								"nodeType": "YulLiteral",
																								"src": "3099:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3087:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3087:3:3"
																						},
																						"nativeSrc": "3087:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3087:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3108:2:3",
																								"nodeType": "YulLiteral",
																								"src": "3108:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3104:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3104:3:3"
																						},
																						"nativeSrc": "3104:7:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3104:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3083:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3083:3:3"
																				},
																				"nativeSrc": "3083:29:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3083:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3068:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3068:3:3"
																		},
																		"nativeSrc": "3068:45:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3068:45:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3115:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3115:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3064:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3064:3:3"
																},
																"nativeSrc": "3064:55:3",
																"nodeType": "YulFunctionCall",
																"src": "3064:55:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3056:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3056:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3139:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3139:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3150:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3150:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3135:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3135:3:3"
																		},
																		"nativeSrc": "3135:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3135:19:3"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "3156:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3128:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:3"
																},
																"nativeSrc": "3128:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3128:35:3"
															},
															"nativeSrc": "3128:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3128:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "2393:776:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2583:9:3",
														"nodeType": "YulTypedName",
														"src": "2583:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2594:6:3",
														"nodeType": "YulTypedName",
														"src": "2594:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2602:6:3",
														"nodeType": "YulTypedName",
														"src": "2602:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2610:6:3",
														"nodeType": "YulTypedName",
														"src": "2610:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2618:6:3",
														"nodeType": "YulTypedName",
														"src": "2618:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2626:6:3",
														"nodeType": "YulTypedName",
														"src": "2626:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2634:6:3",
														"nodeType": "YulTypedName",
														"src": "2634:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2642:6:3",
														"nodeType": "YulTypedName",
														"src": "2642:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2653:4:3",
														"nodeType": "YulTypedName",
														"src": "2653:4:3",
														"type": ""
													}
												],
												"src": "2393:776:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value4 := add(_2, 32)\n        value5 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_cc0b94c660e153545ddd96677a291958c4537b143d81b06a9581e813a8f1937e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC3525ReceiverMock: reverting\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        mstore(add(headStart, 192), value5)\n        calldatacopy(add(headStart, 224), value4, value5)\n        mstore(add(add(headStart, value5), 224), 0)\n        tail := add(add(headStart, and(add(value5, 31), not(31))), 224)\n        mstore(add(headStart, 160), value6)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"46": [
									{
										"length": 32,
										"start": 475
									}
								],
								"49": [
									{
										"length": 32,
										"start": 144
									},
									{
										"length": 32,
										"start": 277
									},
									{
										"length": 32,
										"start": 338
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610033575f3560e01c80629ce20b1461003757806301ffc9a714610068575b5f80fd5b61004a610045366004610239565b61008b565b6040516001600160e01b031990911681526020015b60405180910390f35b61007b6100763660046102dd565b610204565b604051901515815260200161005f565b5f60017f000000000000000000000000000000000000000000000000000000000000000060038111156100c0576100c061030b565b036101115760405162461bcd60e51b815260206004820152601e60248201527f4552433335323552656365697665724d6f636b3a20726576657274696e670000604482015260640160405180910390fd5b60027f000000000000000000000000000000000000000000000000000000000000000060038111156101455761014561030b565b0361014e575f80fd5b60037f000000000000000000000000000000000000000000000000000000000000000060038111156101825761018261030b565b03610195575f610192818061031f565b50505b7f7693f14379c435d2f83242a3efbdcca5efc90c59cbcf91f258ed512e511b19518787878787875a6040516101d0979695949392919061033e565b60405180910390a1507f00000000000000000000000000000000000000000000000000000000000000009695505050505050565b5f6001600160e01b031982166301ffc9a760e01b148061023357506001600160e01b03198216629ce20b60e01b145b92915050565b5f805f805f8060a0878903121561024e575f80fd5b86356001600160a01b0381168114610264575f80fd5b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115610295575f80fd5b818901915089601f8301126102a8575f80fd5b8135818111156102b6575f80fd5b8a60208285010111156102c7575f80fd5b6020830194508093505050509295509295509295565b5f602082840312156102ed575f80fd5b81356001600160e01b031981168114610304575f80fd5b9392505050565b634e487b7160e01b5f52602160045260245ffd5b5f8261033957634e487b7160e01b5f52601260045260245ffd5b500490565b60018060a01b038816815286602082015285604082015284606082015260c060808201528260c0820152828460e08301375f60e084830101525f60e0601f19601f86011683010190508260a08301529897505050505050505056fea26469706673582212208483f6792abc02ef28fc13c87e30148c5d79c03352fc5c0b5e4f794459ac698964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x9CE20B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x45 CALLDATASIZE PUSH1 0x4 PUSH2 0x239 JUMP JUMPDEST PUSH2 0x8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC0 JUMPI PUSH2 0xC0 PUSH2 0x30B JUMP JUMPDEST SUB PUSH2 0x111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433335323552656365697665724D6F636B3A20726576657274696E670000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x145 JUMPI PUSH2 0x145 PUSH2 0x30B JUMP JUMPDEST SUB PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH2 0x182 PUSH2 0x30B JUMP JUMPDEST SUB PUSH2 0x195 JUMPI PUSH0 PUSH2 0x192 DUP2 DUP1 PUSH2 0x31F JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x7693F14379C435D2F83242A3EFBDCCA5EFC90C59CBCF91F258ED512E511B1951 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 GAS PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH32 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x233 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x9CE20B PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x264 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x295 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x339 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0xE0 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0xE0 DUP5 DUP4 ADD ADD MSTORE PUSH0 PUSH1 0xE0 PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND DUP4 ADD ADD SWAP1 POP DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP4 0xF6 PUSH26 0x2ABC02EF28FC13C87E30148C5D79C03352FC5C0B5E4F794459AC PUSH10 0x8964736F6C6343000818 STOP CALLER ",
							"sourceMap": "159:1331:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:618;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1152:33:3;;;1134:52;;1122:2;1107:18;869:618:2;;;;;;;;629:233;;;;;;:::i;:::-;;:::i;:::-;;;1653:14:3;;1646:22;1628:41;;1616:2;1601:18;629:233:2;1488:187:3;869:618:2;1065:6;1097:23;1087:6;:33;;;;;;;;:::i;:::-;;1083:293;;1136:40;;-1:-1:-1;;;1136:40:2;;2014:2:3;1136:40:2;;;1996:21:3;2053:2;2033:18;;;2026:30;2092:32;2072:18;;;2065:60;2142:18;;1136:40:2;;;;;;;1083:293;1207:26;1197:6;:36;;;;;;;;:::i;:::-;;1193:183;;1249:8;;;1193:183;1288:11;1278:6;:21;;;;;;;;:::i;:::-;;1274:102;;1315:9;1327:23;1315:9;;1327:23;:::i;:::-;-1:-1:-1;;1274:102:2;1390:66;1399:8;1409:11;1422:9;1433:5;1440:4;;1446:9;1390:66;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1473:7:2;869:618;;;;;;;;:::o;629:233::-;714:4;-1:-1:-1;;;;;;749:40:2;;-1:-1:-1;;;749:40:2;;:106;;-1:-1:-1;;;;;;;806:49:2;;-1:-1:-1;;;806:49:2;749:106;730:125;629:233;-1:-1:-1;;629:233:2:o;14:971:3:-;120:6;128;136;144;152;160;213:3;201:9;192:7;188:23;184:33;181:53;;;230:1;227;220:12;181:53;256:23;;-1:-1:-1;;;;;308:31:3;;298:42;;288:70;;354:1;351;344:12;288:70;377:5;-1:-1:-1;429:2:3;414:18;;401:32;;-1:-1:-1;480:2:3;465:18;;452:32;;-1:-1:-1;531:2:3;516:18;;503:32;;-1:-1:-1;586:3:3;571:19;;558:33;610:18;640:14;;;637:34;;;667:1;664;657:12;637:34;705:6;694:9;690:22;680:32;;750:7;743:4;739:2;735:13;731:27;721:55;;772:1;769;762:12;721:55;812:2;799:16;838:2;830:6;827:14;824:34;;;854:1;851;844:12;824:34;899:7;894:2;885:6;881:2;877:15;873:24;870:37;867:57;;;920:1;917;910:12;867:57;951:2;947;943:11;933:21;;973:6;963:16;;;;;14:971;;;;;;;;:::o;1197:286::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:52;;;1324:1;1321;1314:12;1276:52;1350:23;;-1:-1:-1;;;;;;1402:32:3;;1392:43;;1382:71;;1449:1;1446;1439:12;1382:71;1472:5;1197:286;-1:-1:-1;;;1197:286:3:o;1680:127::-;1741:10;1736:3;1732:20;1729:1;1722:31;1772:4;1769:1;1762:15;1796:4;1793:1;1786:15;2171:217;2211:1;2237;2227:132;;2281:10;2276:3;2272:20;2269:1;2262:31;2316:4;2313:1;2306:15;2344:4;2341:1;2334:15;2227:132;-1:-1:-1;2373:9:3;;2171:217::o;2393:776::-;2719:1;2715;2710:3;2706:11;2702:19;2694:6;2690:32;2679:9;2672:51;2759:6;2754:2;2743:9;2739:18;2732:34;2802:6;2797:2;2786:9;2782:18;2775:34;2845:6;2840:2;2829:9;2825:18;2818:34;2889:3;2883;2872:9;2868:19;2861:32;2930:6;2924:3;2913:9;2909:19;2902:35;2988:6;2980;2974:3;2963:9;2959:19;2946:49;3045:1;3039:3;3030:6;3019:9;3015:22;3011:32;3004:43;2653:4;3115:3;3108:2;3104:7;3099:2;3091:6;3087:15;3083:29;3072:9;3068:45;3064:55;3056:63;;3156:6;3150:3;3139:9;3135:19;3128:35;2393:776;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "195000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC3525Received(address,uint256,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "434"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 623,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 623,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 623,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 576,
									"end": 592,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 576,
									"end": 592,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 576,
									"end": 592,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 576,
									"end": 592,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 611,
									"end": 616,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 602,
									"end": 616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 602,
									"end": 616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 602,
									"end": 616,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 602,
									"end": 616,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 526,
									"end": 623,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 455,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 100,
									"end": 106,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 161,
									"end": 163,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 149,
									"end": 158,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 140,
									"end": 147,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 136,
									"end": 159,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 132,
									"end": 164,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 181,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 129,
									"end": 181,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 129,
									"end": 181,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 177,
									"end": 178,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 175,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 167,
									"end": 179,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 181,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 129,
									"end": 181,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 203,
									"end": 219,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 219,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 248,
									"end": 280,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 248,
									"end": 280,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 238,
									"end": 281,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 238,
									"end": 281,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 228,
									"end": 299,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 228,
									"end": 299,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 285,
									"end": 297,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 228,
									"end": 299,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 228,
									"end": 299,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 368,
									"end": 370,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 371,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 353,
									"end": 371,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 347,
									"end": 372,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 318,
									"end": 323,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 318,
									"end": 323,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 403,
									"end": 404,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 391,
									"end": 405,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 381,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 381,
									"end": 423,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 419,
									"end": 420,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 417,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 409,
									"end": 421,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 381,
									"end": 423,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 381,
									"end": 423,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 442,
									"end": 449,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 432,
									"end": 449,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 432,
									"end": 449,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 432,
									"end": 449,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 460,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 460,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 531,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 516,
									"end": 519,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 512,
									"end": 532,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 509,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 533,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 552,
									"end": 556,
									"name": "PUSH",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 549,
									"end": 550,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 542,
									"end": 557,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 576,
									"end": 580,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 573,
									"end": 574,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 581,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 460,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 460,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1490,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208483f6792abc02ef28fc13c87e30148c5d79c03352fc5c0b5e4f794459ac698964736f6c63430008180033",
									".code": [
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "9CE20B"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 1490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 869,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 869,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1134,
											"end": 1186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1134,
											"end": 1186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 629,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 629,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1488,
											"end": 1675,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1083,
											"end": 1376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2017,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 2033,
											"end": 2051,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2033,
											"end": 2051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2056,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2124,
											"name": "PUSH",
											"source": 3,
											"value": "4552433335323552656365697665724D6F636B3A20726576657274696E670000"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2160,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2142,
											"end": 2160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1376,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1083,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1233,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1193,
											"end": 1376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1257,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1376,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1193,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1274,
											"end": 1376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1327,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1376,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1274,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "7693F14379C435D2F83242A3EFBDCCA5EFC90C59CBCF91F258ED512E511B1951"
										},
										{
											"begin": 1399,
											"end": 1407,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1431,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1444,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1444,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1455,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1480,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 1487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 629,
											"end": 862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 714,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 749,
											"end": 789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 749,
											"end": 789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 749,
											"end": 789,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 749,
											"end": 789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 749,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 749,
											"end": 855,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 806,
											"end": 855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 806,
											"end": 855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9CE20B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 806,
											"end": 855,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 749,
											"end": 855,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 749,
											"end": 855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 730,
											"end": 855,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 629,
											"end": 862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 629,
											"end": 862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 985,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 120,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 136,
											"end": 142,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 152,
											"end": 158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 216,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 201,
											"end": 210,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 192,
											"end": 199,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 188,
											"end": 211,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 184,
											"end": 217,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 181,
											"end": 234,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 181,
											"end": 234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 181,
											"end": 234,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 230,
											"end": 231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 232,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 181,
											"end": 234,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 181,
											"end": 234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 256,
											"end": 279,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 256,
											"end": 279,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 308,
											"end": 339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 339,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 298,
											"end": 340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 298,
											"end": 340,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 288,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 356,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 288,
											"end": 358,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 288,
											"end": 358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 377,
											"end": 382,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 429,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 432,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 414,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 401,
											"end": 433,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 401,
											"end": 433,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 480,
											"end": 482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 483,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 465,
											"end": 483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 452,
											"end": 484,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 452,
											"end": 484,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 531,
											"end": 533,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 516,
											"end": 534,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 516,
											"end": 534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 503,
											"end": 535,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 503,
											"end": 535,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 586,
											"end": 589,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 571,
											"end": 590,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 571,
											"end": 590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 558,
											"end": 591,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 610,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 640,
											"end": 654,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 637,
											"end": 671,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 637,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 637,
											"end": 671,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 667,
											"end": 668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 669,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 637,
											"end": 671,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 637,
											"end": 671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 694,
											"end": 703,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 690,
											"end": 712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 680,
											"end": 712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 680,
											"end": 712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 750,
											"end": 757,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 743,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 739,
											"end": 741,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 735,
											"end": 748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 731,
											"end": 758,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 721,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 721,
											"end": 776,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 772,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 762,
											"end": 774,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 721,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 721,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 812,
											"end": 814,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 799,
											"end": 815,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 830,
											"end": 836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 841,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 858,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 824,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 824,
											"end": 858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 844,
											"end": 856,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 858,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 824,
											"end": 858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 899,
											"end": 906,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 894,
											"end": 896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 881,
											"end": 883,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 877,
											"end": 892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 873,
											"end": 897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 907,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 867,
											"end": 924,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 867,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 867,
											"end": 924,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 920,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 922,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 867,
											"end": 924,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 867,
											"end": 924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 951,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 947,
											"end": 949,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 943,
											"end": 954,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 954,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 933,
											"end": 954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 963,
											"end": 979,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 963,
											"end": 979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 963,
											"end": 979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 14,
											"end": 985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1483,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1197,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1294,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1279,
											"end": 1311,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1328,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1276,
											"end": 1328,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1328,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1276,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1373,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1434,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1382,
											"end": 1453,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1451,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1453,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1382,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1483,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1807,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1732,
											"end": 1752,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1800,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1801,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2171,
											"end": 2388,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2171,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2227,
											"end": 2359,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2291,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2276,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2293,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2348,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2349,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2359,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2227,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2373,
											"end": 2382,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2171,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2720,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2713,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2694,
											"end": 2700,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2829,
											"end": 2838,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2852,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2892,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 2883,
											"end": 2886,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 2893,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 2994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 2986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2978,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2946,
											"end": 2995,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3047,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3118,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3108,
											"end": 3110,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3104,
											"end": 3111,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3112,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3081,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3119,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3150,
											"end": 3153,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3139,
											"end": 3148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/IERC3525Receiver.sol",
								"contracts/mocks/ERC3525ReceiverMock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC3525Received(address,uint256,uint256,uint256,bytes)": "009ce20b",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"retval\",\"type\":\"bytes4\"},{\"internalType\":\"enum ERC3525ReceiverMock.Error\",\"name\":\"error\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC3525Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/ERC3525ReceiverMock.sol\":\"ERC3525ReceiverMock\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/IERC3525Receiver.sol\":{\"keccak256\":\"0x786383869053c8390f7d8425750c9d1d2f96ab524374f56b986414271e8b1c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b2fb8260880b4bfd92733e5ae68393f9ca283683e6ae1cb67d5df750ec8e626\",\"dweb:/ipfs/QmeSokK66DCLeonJbz9qKGRrfS9pAje8VqDJRkoCfGN28M\"]},\"contracts/mocks/ERC3525ReceiverMock.sol\":{\"keccak256\":\"0x93612c72ed0e50741f50ef37be8dd68345fc98253209fbabb217f24999a6cfb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf51f1b1b072c215f95171a3ed5cdede5e5177e8547b4cebca6217e898a3a3d9\",\"dweb:/ipfs/QmbBydDHZL9SfbmJqwk1mPD3nk5Xc3UTUvooGYxDK6dy9a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						]
					},
					"id": 12,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "431:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "817:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "860:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:0"
									},
									"scope": 11,
									"src": "790:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 12,
							"src": "421:447:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:0"
				},
				"id": 0
			},
			"contracts/IERC3525Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/IERC3525Receiver.sol",
					"exportedSymbols": {
						"IERC3525Receiver": [
							31
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 13,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3525Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 14,
								"nodeType": "StructuredDocumentation",
								"src": "58:270:1",
								"text": " @title EIP-3525 token receiver interface\n @dev Interface for a smart contract that wants to be informed by EIP-3525 contracts when \n  receiving values from ANY addresses or EIP-3525 tokens.\n Note: the EIP-165 identifier for this interface is 0x009ce20b."
							},
							"fullyImplemented": false,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "IERC3525Receiver",
							"nameLocation": "339:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "362:1064:1",
										"text": " @notice Handle the receipt of an EIP-3525 token value.\n @dev An EIP-3525 smart contract MUST check whether this function is implemented by the \n  recipient contract, if the recipient contract implements this function, the EIP-3525 \n  contract MUST call this function after a value transfer (i.e. `transferFrom(uint256,\n  uint256,uint256,bytes)`).\n  MUST return 0x009ce20b (i.e. `bytes4(keccak256('onERC3525Received(address,uint256,uint256,\n  uint256,bytes)'))`) if the transfer is accepted.\n  MUST revert or return any value other than 0x009ce20b if the transfer is rejected.\n @param _operator The address which triggered the transfer\n @param _fromTokenId The token id to transfer value from\n @param _toTokenId The token id to transfer value to\n @param _value The transferred value\n @param _data Additional data with no specified format\n @return `bytes4(keccak256('onERC3525Received(address,uint256,uint256,uint256,bytes)'))` \n  unless the transfer is rejected."
									},
									"functionSelector": "009ce20b",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC3525Received",
									"nameLocation": "1440:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1466:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1458:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "1485:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1477:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "1507:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1499:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1527:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1519:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1535:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 24,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1535:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:99:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1575:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 27,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1575:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1574:8:1"
									},
									"scope": 31,
									"src": "1431:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 32,
							"src": "329:1257:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1553:1"
				},
				"id": 1
			},
			"contracts/mocks/ERC3525ReceiverMock.sol": {
				"ast": {
					"absolutePath": "contracts/mocks/ERC3525ReceiverMock.sol",
					"exportedSymbols": {
						"ERC3525ReceiverMock": [
							172
						],
						"IERC165": [
							11
						],
						"IERC3525Receiver": [
							31
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 34,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 173,
							"sourceUnit": 12,
							"src": "58:65:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC3525Receiver.sol",
							"file": "../IERC3525Receiver.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 173,
							"sourceUnit": 32,
							"src": "124:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 36,
										"name": "IERC165",
										"nameLocations": [
											"191:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "191:7:2"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "191:7:2"
								},
								{
									"baseName": {
										"id": 38,
										"name": "IERC3525Receiver",
										"nameLocations": [
											"200:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 31,
										"src": "200:16:2"
									},
									"id": 39,
									"nodeType": "InheritanceSpecifier",
									"src": "200:16:2"
								}
							],
							"canonicalName": "ERC3525ReceiverMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 172,
							"linearizedBaseContracts": [
								172,
								31,
								11
							],
							"name": "ERC3525ReceiverMock",
							"nameLocation": "168:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC3525ReceiverMock.Error",
									"id": 44,
									"members": [
										{
											"id": 40,
											"name": "None",
											"nameLocation": "244:4:2",
											"nodeType": "EnumValue",
											"src": "244:4:2"
										},
										{
											"id": 41,
											"name": "RevertWithMessage",
											"nameLocation": "258:17:2",
											"nodeType": "EnumValue",
											"src": "258:17:2"
										},
										{
											"id": 42,
											"name": "RevertWithoutMessage",
											"nameLocation": "285:20:2",
											"nodeType": "EnumValue",
											"src": "285:20:2"
										},
										{
											"id": 43,
											"name": "Panic",
											"nameLocation": "315:5:2",
											"nodeType": "EnumValue",
											"src": "315:5:2"
										}
									],
									"name": "Error",
									"nameLocation": "228:5:2",
									"nodeType": "EnumDefinition",
									"src": "223:103:2"
								},
								{
									"constant": false,
									"id": 46,
									"mutability": "immutable",
									"name": "_retval",
									"nameLocation": "357:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "332:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 45,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "332:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "immutable",
									"name": "_error",
									"nameLocation": "394:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "370:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Error_$44",
										"typeString": "enum ERC3525ReceiverMock.Error"
									},
									"typeName": {
										"id": 48,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 47,
											"name": "Error",
											"nameLocations": [
												"370:5:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 44,
											"src": "370:5:2"
										},
										"referencedDeclaration": 44,
										"src": "370:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Error_$44",
											"typeString": "enum ERC3525ReceiverMock.Error"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "7693f14379c435d2f83242a3efbdcca5efc90c59cbcf91f258ed512e511b1951",
									"id": 63,
									"name": "Received",
									"nameLocation": "413:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": false,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "430:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "422:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "448:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "440:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "461:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "488:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "480:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "501:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "495:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "495:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": false,
												"mutability": "mutable",
												"name": "gas",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "507:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:98:2"
									},
									"src": "407:113:2"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "566:57:2",
										"statements": [
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "_retval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "576:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 72,
														"name": "retval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "586:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "576:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "576:16:2"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 75,
														"name": "_error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "602:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$44",
															"typeString": "enum ERC3525ReceiverMock.Error"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 76,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "611:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$44",
															"typeString": "enum ERC3525ReceiverMock.Error"
														}
													},
													"src": "602:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$44",
														"typeString": "enum ERC3525ReceiverMock.Error"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "602:14:2"
											}
										]
									},
									"id": 80,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "retval",
												"nameLocation": "545:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "538:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "553:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Error_$44",
													"typeString": "enum ERC3525ReceiverMock.Error"
												},
												"typeName": {
													"id": 67,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 66,
														"name": "Error",
														"nameLocations": [
															"553:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 44,
														"src": "553:5:2"
													},
													"referencedDeclaration": 44,
													"src": "553:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$44",
														"typeString": "enum ERC3525ReceiverMock.Error"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:28:2"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:2"
									},
									"scope": 172,
									"src": "526:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "720:142:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 88,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "749:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 90,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "769:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 89,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "764:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "764:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "778:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "764:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "749:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 94,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "806:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 96,
																		"name": "IERC3525Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 31,
																		"src": "826:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC3525Receiver_$31_$",
																			"typeString": "type(contract IERC3525Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC3525Receiver_$31_$",
																			"typeString": "type(contract IERC3525Receiver)"
																		}
																	],
																	"id": 95,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "821:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "821:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC3525Receiver_$31",
																	"typeString": "type(contract IERC3525Receiver)"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "844:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "821:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "806:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "749:106:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 87,
												"id": 101,
												"nodeType": "Return",
												"src": "730:125:2"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "638:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 84,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "696:8:2"
									},
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "663:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "656:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 81,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "656:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:20:2"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "714:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "714:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:6:2"
									},
									"scope": 172,
									"src": "629:233:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										30
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1073:414:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Error_$44",
														"typeString": "enum ERC3525ReceiverMock.Error"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "_error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1087:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$44",
															"typeString": "enum ERC3525ReceiverMock.Error"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 120,
															"name": "Error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1097:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Error_$44_$",
																"typeString": "type(enum ERC3525ReceiverMock.Error)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1103:17:2",
														"memberName": "RevertWithMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1097:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$44",
															"typeString": "enum ERC3525ReceiverMock.Error"
														}
													},
													"src": "1087:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Error_$44",
															"typeString": "enum ERC3525ReceiverMock.Error"
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 128,
															"name": "_error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1197:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Error_$44",
																"typeString": "enum ERC3525ReceiverMock.Error"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 129,
																"name": "Error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "1207:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Error_$44_$",
																	"typeString": "type(enum ERC3525ReceiverMock.Error)"
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1213:20:2",
															"memberName": "RevertWithoutMessage",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "1207:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Error_$44",
																"typeString": "enum ERC3525ReceiverMock.Error"
															}
														},
														"src": "1197:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_Error_$44",
																"typeString": "enum ERC3525ReceiverMock.Error"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 136,
																"name": "_error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1278:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Error_$44",
																	"typeString": "enum ERC3525ReceiverMock.Error"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 137,
																	"name": "Error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1288:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Error_$44_$",
																		"typeString": "type(enum ERC3525ReceiverMock.Error)"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1294:5:2",
																"memberName": "Panic",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 43,
																"src": "1288:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Error_$44",
																	"typeString": "enum ERC3525ReceiverMock.Error"
																}
															},
															"src": "1278:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 155,
														"nodeType": "IfStatement",
														"src": "1274:102:2",
														"trueBody": {
															"id": 154,
															"nodeType": "Block",
															"src": "1301:75:2",
															"statements": [
																{
																	"assignments": [
																		141
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 141,
																			"mutability": "mutable",
																			"name": "a",
																			"nameLocation": "1323:1:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 154,
																			"src": "1315:9:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 140,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1315:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 151,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 144,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1335:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1327:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 142,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1327:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1327:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 148,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1348:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1340:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 146,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1340:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1340:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1327:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "1315:35:2"
																},
																{
																	"expression": {
																		"id": 152,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "1364:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 153,
																	"nodeType": "ExpressionStatement",
																	"src": "1364:1:2"
																}
															]
														}
													},
													"id": 156,
													"nodeType": "IfStatement",
													"src": "1193:183:2",
													"trueBody": {
														"id": 135,
														"nodeType": "Block",
														"src": "1235:33:2",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 132,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "1249:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1249:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 134,
																"nodeType": "ExpressionStatement",
																"src": "1249:8:2"
															}
														]
													}
												},
												"id": 157,
												"nodeType": "IfStatement",
												"src": "1083:293:2",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1122:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "4552433335323552656365697665724d6f636b3a20726576657274696e67",
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1143:32:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cc0b94c660e153545ddd96677a291958c4537b143d81b06a9581e813a8f1937e",
																			"typeString": "literal_string \"ERC3525ReceiverMock: reverting\""
																		},
																		"value": "ERC3525ReceiverMock: reverting"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_cc0b94c660e153545ddd96677a291958c4537b143d81b06a9581e813a8f1937e",
																			"typeString": "literal_string \"ERC3525ReceiverMock: reverting\""
																		}
																	],
																	"id": 123,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1136:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1136:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 126,
															"nodeType": "ExpressionStatement",
															"src": "1136:40:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 159,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1399:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "fromTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1409:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 161,
															"name": "toTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1422:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 162,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1433:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 163,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1440:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 164,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "1446:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1446:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 158,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1390:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,bytes memory,uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1390:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "EmitStatement",
												"src": "1385:71:2"
											},
											{
												"expression": {
													"id": 168,
													"name": "_retval",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 46,
													"src": "1473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 118,
												"id": 169,
												"nodeType": "Return",
												"src": "1466:14:2"
											}
										]
									},
									"functionSelector": "009ce20b",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC3525Received",
									"nameLocation": "878:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 115,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1047:8:2"
									},
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "913:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "905:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "940:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "970:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "962:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "998:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "990:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1029:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1014:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1014:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:144:2"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1065:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 116,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1065:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:8:2"
									},
									"scope": 172,
									"src": "869:618:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 173,
							"src": "159:1331:2",
							"usedErrors": [],
							"usedEvents": [
								63
							]
						}
					],
					"src": "33:1457:2"
				},
				"id": 2
			}
		}
	}
}