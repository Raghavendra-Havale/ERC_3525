{
	"id": "84e4d4ebf4ff1a1eebcb47f1f71004eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mocks/ERC721ReceiverMock.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\ncontract ERC721ReceiverMock is IERC165, IERC721Receiver {\n    enum Error {\n        None,\n        RevertWithMessage,\n        RevertWithoutMessage,\n        Panic\n    }\n\n    bytes4 private immutable _retval;\n    Error private immutable _error;\n\n    event Received(address operator, address from, uint256 tokenId, bytes data, uint256 gas);\n\n    constructor(bytes4 retval, Error error) {\n        _retval = retval;\n        _error = error;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return\n            interfaceId == type(IERC165).interfaceId || \n            interfaceId == type(IERC721Receiver).interfaceId;\n    } \n\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public override returns (bytes4) {\n        if (_error == Error.RevertWithMessage) {\n            revert(\"ERC721ReceiverMock: reverting\");\n        } else if (_error == Error.RevertWithoutMessage) {\n            revert();\n        } else if (_error == Error.Panic) {\n            uint256 a = uint256(0) / uint256(0);\n            a;\n        }\n        emit Received(operator, from, tokenId, data, gasleft());\n        return _retval;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mocks/ERC721ReceiverMock.sol": {
				"ERC721ReceiverMock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "retval",
									"type": "bytes4"
								},
								{
									"internalType": "enum ERC721ReceiverMock.Error",
									"name": "error",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gas",
									"type": "uint256"
								}
							],
							"name": "Received",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mocks/ERC721ReceiverMock.sol\":192:1439  contract ERC721ReceiverMock is IERC165, IERC721Receiver {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/mocks/ERC721ReceiverMock.sol\":533:630  constructor(bytes4 retval, Error error) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/mocks/ERC721ReceiverMock.sol\":583:599  _retval = retval */\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/mocks/ERC721ReceiverMock.sol\":618:623  error */\n  dup1\n    /* \"contracts/mocks/ERC721ReceiverMock.sol\":609:623  _error = error */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  tag_7\n  tag_8\n  jump\t// in\ntag_7:\n  0xa0\n  dup2\n  0x03\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  tag_10\n  tag_8\n  jump\t// in\ntag_10:\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/mocks/ERC721ReceiverMock.sol\":533:630  constructor(bytes4 retval, Error error) {... */\n  pop\n  pop\n    /* \"contracts/mocks/ERC721ReceiverMock.sol\":192:1439  contract ERC721ReceiverMock is IERC165, IERC721Receiver {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:455   */\ntag_3:\n    /* \"#utility.yul\":100:106   */\n  0x00\n    /* \"#utility.yul\":108:114   */\n  dup1\n    /* \"#utility.yul\":161:163   */\n  0x40\n    /* \"#utility.yul\":149:158   */\n  dup4\n    /* \"#utility.yul\":140:147   */\n  dup6\n    /* \"#utility.yul\":136:159   */\n  sub\n    /* \"#utility.yul\":132:164   */\n  slt\n    /* \"#utility.yul\":129:181   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":177:178   */\n  0x00\n    /* \"#utility.yul\":174:175   */\n  dup1\n    /* \"#utility.yul\":167:179   */\n  revert\n    /* \"#utility.yul\":129:181   */\ntag_14:\n    /* \"#utility.yul\":203:219   */\n  dup3\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":248:280   */\n  dup2\n  and\n    /* \"#utility.yul\":238:281   */\n  dup2\n  eq\n    /* \"#utility.yul\":228:299   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":295:296   */\n  0x00\n    /* \"#utility.yul\":292:293   */\n  dup1\n    /* \"#utility.yul\":285:297   */\n  revert\n    /* \"#utility.yul\":228:299   */\ntag_15:\n    /* \"#utility.yul\":368:370   */\n  0x20\n    /* \"#utility.yul\":353:371   */\n  dup5\n  add\n    /* \"#utility.yul\":347:372   */\n  mload\n    /* \"#utility.yul\":318:323   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":403:404   */\n  0x04\n    /* \"#utility.yul\":391:405   */\n  dup2\n  lt\n    /* \"#utility.yul\":381:423   */\n  tag_16\n  jumpi\n    /* \"#utility.yul\":419:420   */\n  0x00\n    /* \"#utility.yul\":416:417   */\n  dup1\n    /* \"#utility.yul\":409:421   */\n  revert\n    /* \"#utility.yul\":381:423   */\ntag_16:\n    /* \"#utility.yul\":442:449   */\n  dup1\n    /* \"#utility.yul\":432:449   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:455   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":460:587   */\ntag_8:\n    /* \"#utility.yul\":521:531   */\n  0x4e487b71\n    /* \"#utility.yul\":516:519   */\n  0xe0\n    /* \"#utility.yul\":512:532   */\n  shl\n    /* \"#utility.yul\":509:510   */\n  0x00\n    /* \"#utility.yul\":502:533   */\n  mstore\n    /* \"#utility.yul\":552:556   */\n  0x21\n    /* \"#utility.yul\":549:550   */\n  0x04\n    /* \"#utility.yul\":542:557   */\n  mstore\n    /* \"#utility.yul\":576:580   */\n  0x24\n    /* \"#utility.yul\":573:574   */\n  0x00\n    /* \"#utility.yul\":566:581   */\n  revert\n    /* \"#utility.yul\":460:587   */\ntag_12:\n    /* \"contracts/mocks/ERC721ReceiverMock.sol\":192:1439  contract ERC721ReceiverMock is IERC165, IERC721Receiver {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n  0x00\n  assignImmutable(\"0x2e9b7c94e032d8b3b8b30bd825717a5ac74958b53e7c37a892a4fd7dc56e4975\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":192:1439  contract ERC721ReceiverMock is IERC165, IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":636:868  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":636:868  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":875:1437  function onERC721Received(... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":2112:2145   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2094:2146   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2082:2084   */\n      0x20\n        /* \"#utility.yul\":2067:2085   */\n      add\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":875:1437  function onERC721Received(... */\n      tag_9\n        /* \"#utility.yul\":1950:2152   */\n      jump\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":636:868  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_8:\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":721:725  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":756:796  interfaceId == type(IERC165).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x01ffc9a7)\n      eq\n      dup1\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":756:861  interfaceId == type(IERC165).interfaceId || ... */\n      tag_18\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":813:861  interfaceId == type(IERC721Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":756:861  interfaceId == type(IERC165).interfaceId || ... */\n    tag_18:\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":737:861  return... */\n      swap3\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":636:868  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":875:1437  function onERC721Received(... */\n    tag_14:\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1032:1038  bytes4 */\n      0x00\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1064:1087  Error.RevertWithMessage */\n      0x01\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1054:1060  _error */\n      immutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1054:1087  _error == Error.RevertWithMessage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      tag_24\n      tag_22\n      jump\t// in\n    tag_24:\n      sub\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1050:1342  if (_error == Error.RevertWithMessage) {... */\n      tag_25\n      jumpi\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1103:1142  revert(\"ERC721ReceiverMock: reverting\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2491:2493   */\n      0x20\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1103:1142  revert(\"ERC721ReceiverMock: reverting\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2473:2494   */\n      mstore\n        /* \"#utility.yul\":2530:2532   */\n      0x1d\n        /* \"#utility.yul\":2510:2528   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2503:2533   */\n      mstore\n        /* \"#utility.yul\":2569:2600   */\n      0x45524337323152656365697665724d6f636b3a20726576657274696e67000000\n        /* \"#utility.yul\":2549:2567   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2542:2601   */\n      mstore\n        /* \"#utility.yul\":2618:2636   */\n      0x64\n      add\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1103:1142  revert(\"ERC721ReceiverMock: reverting\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1050:1342  if (_error == Error.RevertWithMessage) {... */\n    tag_25:\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1173:1199  Error.RevertWithoutMessage */\n      0x02\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1163:1169  _error */\n      immutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1163:1199  _error == Error.RevertWithoutMessage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      tag_32\n      tag_22\n      jump\t// in\n    tag_32:\n      sub\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1159:1342  if (_error == Error.RevertWithoutMessage) {... */\n      tag_33\n      jumpi\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1215:1223  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1159:1342  if (_error == Error.RevertWithoutMessage) {... */\n    tag_33:\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1254:1265  Error.Panic */\n      0x03\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1244:1250  _error */\n      immutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1244:1265  _error == Error.Panic */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_38\n      jumpi\n      tag_38\n      tag_22\n      jump\t// in\n    tag_38:\n      sub\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1240:1342  if (_error == Error.Panic) {... */\n      tag_39\n      jumpi\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1281:1290  uint256 a */\n      0x00\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1293:1316  uint256(0) / uint256(0) */\n      tag_40\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1281:1290  uint256 a */\n      dup2\n      dup1\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1293:1316  uint256(0) / uint256(0) */\n      tag_41\n      jump\t// in\n    tag_40:\n      pop\n      pop\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1240:1342  if (_error == Error.Panic) {... */\n    tag_39:\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1356:1406  Received(operator, from, tokenId, data, gasleft()) */\n      0x28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b038\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1365:1373  operator */\n      dup6\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1375:1379  from */\n      dup6\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1381:1388  tokenId */\n      dup6\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1390:1394  data */\n      dup6\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1396:1405  gasleft() */\n      gas\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1356:1406  Received(operator, from, tokenId, data, gasleft()) */\n      mload(0x40)\n      tag_42\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":1423:1430  _retval */\n      immutable(\"0x2e9b7c94e032d8b3b8b30bd825717a5ac74958b53e7c37a892a4fd7dc56e4975\")\n        /* \"contracts/mocks/ERC721ReceiverMock.sol\":875:1437  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_7:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_48:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_49:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_44:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_52:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:802   */\n    tag_45:\n        /* \"#utility.yul\":736:746   */\n      0x4e487b71\n        /* \"#utility.yul\":731:734   */\n      0xe0\n        /* \"#utility.yul\":727:747   */\n      shl\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:748   */\n      mstore\n        /* \"#utility.yul\":767:771   */\n      0x41\n        /* \"#utility.yul\":764:765   */\n      0x04\n        /* \"#utility.yul\":757:772   */\n      mstore\n        /* \"#utility.yul\":791:795   */\n      0x24\n        /* \"#utility.yul\":788:789   */\n      0x00\n        /* \"#utility.yul\":781:796   */\n      revert\n        /* \"#utility.yul\":807:1945   */\n    tag_13:\n        /* \"#utility.yul\":902:908   */\n      0x00\n        /* \"#utility.yul\":910:916   */\n      dup1\n        /* \"#utility.yul\":918:924   */\n      0x00\n        /* \"#utility.yul\":926:932   */\n      dup1\n        /* \"#utility.yul\":979:982   */\n      0x80\n        /* \"#utility.yul\":967:976   */\n      dup6\n        /* \"#utility.yul\":958:965   */\n      dup8\n        /* \"#utility.yul\":954:977   */\n      sub\n        /* \"#utility.yul\":950:983   */\n      slt\n        /* \"#utility.yul\":947:1000   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":996:997   */\n      0x00\n        /* \"#utility.yul\":993:994   */\n      dup1\n        /* \"#utility.yul\":986:998   */\n      revert\n        /* \"#utility.yul\":947:1000   */\n    tag_55:\n        /* \"#utility.yul\":1019:1048   */\n      tag_56\n        /* \"#utility.yul\":1038:1047   */\n      dup6\n        /* \"#utility.yul\":1019:1048   */\n      tag_44\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1009:1048   */\n      swap4\n      pop\n        /* \"#utility.yul\":1067:1105   */\n      tag_57\n        /* \"#utility.yul\":1101:1103   */\n      0x20\n        /* \"#utility.yul\":1090:1099   */\n      dup7\n        /* \"#utility.yul\":1086:1104   */\n      add\n        /* \"#utility.yul\":1067:1105   */\n      tag_44\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1057:1105   */\n      swap3\n      pop\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1141:1150   */\n      dup6\n        /* \"#utility.yul\":1137:1155   */\n      add\n        /* \"#utility.yul\":1124:1156   */\n      calldataload\n        /* \"#utility.yul\":1114:1156   */\n      swap2\n      pop\n        /* \"#utility.yul\":1207:1209   */\n      0x60\n        /* \"#utility.yul\":1196:1205   */\n      dup6\n        /* \"#utility.yul\":1192:1210   */\n      add\n        /* \"#utility.yul\":1179:1211   */\n      calldataload\n        /* \"#utility.yul\":1230:1248   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1271:1273   */\n      dup1\n        /* \"#utility.yul\":1263:1269   */\n      dup3\n        /* \"#utility.yul\":1260:1274   */\n      gt\n        /* \"#utility.yul\":1257:1291   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1287:1288   */\n      0x00\n        /* \"#utility.yul\":1284:1285   */\n      dup1\n        /* \"#utility.yul\":1277:1289   */\n      revert\n        /* \"#utility.yul\":1257:1291   */\n    tag_58:\n        /* \"#utility.yul\":1325:1331   */\n      dup2\n        /* \"#utility.yul\":1314:1323   */\n      dup8\n        /* \"#utility.yul\":1310:1332   */\n      add\n        /* \"#utility.yul\":1300:1332   */\n      swap2\n      pop\n        /* \"#utility.yul\":1370:1377   */\n      dup8\n        /* \"#utility.yul\":1363:1367   */\n      0x1f\n        /* \"#utility.yul\":1359:1361   */\n      dup4\n        /* \"#utility.yul\":1355:1368   */\n      add\n        /* \"#utility.yul\":1351:1378   */\n      slt\n        /* \"#utility.yul\":1341:1396   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1392:1393   */\n      0x00\n        /* \"#utility.yul\":1389:1390   */\n      dup1\n        /* \"#utility.yul\":1382:1394   */\n      revert\n        /* \"#utility.yul\":1341:1396   */\n    tag_59:\n        /* \"#utility.yul\":1428:1430   */\n      dup2\n        /* \"#utility.yul\":1415:1431   */\n      calldataload\n        /* \"#utility.yul\":1450:1452   */\n      dup2\n        /* \"#utility.yul\":1446:1448   */\n      dup2\n        /* \"#utility.yul\":1443:1453   */\n      gt\n        /* \"#utility.yul\":1440:1476   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1456:1474   */\n      tag_61\n      tag_45\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1531:1533   */\n      0x40\n        /* \"#utility.yul\":1525:1534   */\n      mload\n        /* \"#utility.yul\":1499:1501   */\n      0x1f\n        /* \"#utility.yul\":1585:1598   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1581:1603   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1605:1607   */\n      0x3f\n        /* \"#utility.yul\":1577:1608   */\n      add\n        /* \"#utility.yul\":1573:1613   */\n      and\n        /* \"#utility.yul\":1561:1614   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1629:1647   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1649:1671   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1626:1672   */\n      or\n        /* \"#utility.yul\":1623:1695   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1675:1693   */\n      tag_63\n      tag_45\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1715:1725   */\n      dup2\n        /* \"#utility.yul\":1711:1713   */\n      0x40\n        /* \"#utility.yul\":1704:1726   */\n      mstore\n        /* \"#utility.yul\":1750:1752   */\n      dup3\n        /* \"#utility.yul\":1742:1748   */\n      dup2\n        /* \"#utility.yul\":1735:1753   */\n      mstore\n        /* \"#utility.yul\":1790:1797   */\n      dup11\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1780:1782   */\n      dup5\n        /* \"#utility.yul\":1776:1778   */\n      dup8\n        /* \"#utility.yul\":1772:1783   */\n      add\n        /* \"#utility.yul\":1768:1788   */\n      add\n        /* \"#utility.yul\":1765:1798   */\n      gt\n        /* \"#utility.yul\":1762:1815   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1811:1812   */\n      0x00\n        /* \"#utility.yul\":1808:1809   */\n      dup1\n        /* \"#utility.yul\":1801:1813   */\n      revert\n        /* \"#utility.yul\":1762:1815   */\n    tag_64:\n        /* \"#utility.yul\":1867:1869   */\n      dup3\n        /* \"#utility.yul\":1862:1864   */\n      0x20\n        /* \"#utility.yul\":1858:1860   */\n      dup7\n        /* \"#utility.yul\":1854:1865   */\n      add\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1841:1847   */\n      dup4\n        /* \"#utility.yul\":1837:1852   */\n      add\n        /* \"#utility.yul\":1824:1870   */\n      calldatacopy\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1902:1904   */\n      dup5\n        /* \"#utility.yul\":1894:1900   */\n      dup4\n        /* \"#utility.yul\":1890:1905   */\n      add\n        /* \"#utility.yul\":1886:1910   */\n      add\n        /* \"#utility.yul\":1879:1914   */\n      mstore\n        /* \"#utility.yul\":1933:1939   */\n      dup1\n        /* \"#utility.yul\":1923:1939   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":807:1945   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2284   */\n    tag_22:\n        /* \"#utility.yul\":2218:2228   */\n      0x4e487b71\n        /* \"#utility.yul\":2213:2216   */\n      0xe0\n        /* \"#utility.yul\":2209:2229   */\n      shl\n        /* \"#utility.yul\":2206:2207   */\n      0x00\n        /* \"#utility.yul\":2199:2230   */\n      mstore\n        /* \"#utility.yul\":2249:2253   */\n      0x21\n        /* \"#utility.yul\":2246:2247   */\n      0x04\n        /* \"#utility.yul\":2239:2254   */\n      mstore\n        /* \"#utility.yul\":2273:2277   */\n      0x24\n        /* \"#utility.yul\":2270:2271   */\n      0x00\n        /* \"#utility.yul\":2263:2278   */\n      revert\n        /* \"#utility.yul\":2647:2864   */\n    tag_41:\n        /* \"#utility.yul\":2687:2688   */\n      0x00\n        /* \"#utility.yul\":2713:2714   */\n      dup3\n        /* \"#utility.yul\":2703:2835   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2757:2767   */\n      0x4e487b71\n        /* \"#utility.yul\":2752:2755   */\n      0xe0\n        /* \"#utility.yul\":2748:2768   */\n      shl\n        /* \"#utility.yul\":2745:2746   */\n      0x00\n        /* \"#utility.yul\":2738:2769   */\n      mstore\n        /* \"#utility.yul\":2792:2796   */\n      0x12\n        /* \"#utility.yul\":2789:2790   */\n      0x04\n        /* \"#utility.yul\":2782:2797   */\n      mstore\n        /* \"#utility.yul\":2820:2824   */\n      0x24\n        /* \"#utility.yul\":2817:2818   */\n      0x00\n        /* \"#utility.yul\":2810:2825   */\n      revert\n        /* \"#utility.yul\":2703:2835   */\n    tag_69:\n      pop\n        /* \"#utility.yul\":2849:2858   */\n      div\n      swap1\n        /* \"#utility.yul\":2647:2864   */\n      jump\t// out\n        /* \"#utility.yul\":2869:3761   */\n    tag_43:\n        /* \"#utility.yul\":3091:3095   */\n      0x00\n        /* \"#utility.yul\":3137:3138   */\n      0x01\n        /* \"#utility.yul\":3133:3134   */\n      dup1\n        /* \"#utility.yul\":3128:3131   */\n      0xa0\n        /* \"#utility.yul\":3124:3135   */\n      shl\n        /* \"#utility.yul\":3120:3139   */\n      sub\n        /* \"#utility.yul\":3178:3180   */\n      dup1\n        /* \"#utility.yul\":3170:3176   */\n      dup9\n        /* \"#utility.yul\":3166:3181   */\n      and\n        /* \"#utility.yul\":3155:3164   */\n      dup4\n        /* \"#utility.yul\":3148:3182   */\n      mstore\n        /* \"#utility.yul\":3201:3203   */\n      0x20\n        /* \"#utility.yul\":3251:3253   */\n      dup2\n        /* \"#utility.yul\":3243:3249   */\n      dup9\n        /* \"#utility.yul\":3239:3254   */\n      and\n        /* \"#utility.yul\":3234:3236   */\n      0x20\n        /* \"#utility.yul\":3223:3232   */\n      dup6\n        /* \"#utility.yul\":3219:3237   */\n      add\n        /* \"#utility.yul\":3212:3255   */\n      mstore\n        /* \"#utility.yul\":3291:3297   */\n      dup7\n        /* \"#utility.yul\":3286:3288   */\n      0x40\n        /* \"#utility.yul\":3275:3284   */\n      dup6\n        /* \"#utility.yul\":3271:3289   */\n      add\n        /* \"#utility.yul\":3264:3298   */\n      mstore\n        /* \"#utility.yul\":3334:3337   */\n      0xa0\n        /* \"#utility.yul\":3329:3331   */\n      0x60\n        /* \"#utility.yul\":3318:3327   */\n      dup6\n        /* \"#utility.yul\":3314:3332   */\n      add\n        /* \"#utility.yul\":3307:3338   */\n      mstore\n        /* \"#utility.yul\":3367:3373   */\n      dup6\n        /* \"#utility.yul\":3361:3374   */\n      mload\n        /* \"#utility.yul\":3347:3374   */\n      swap2\n      pop\n        /* \"#utility.yul\":3411:3417   */\n      dup2\n        /* \"#utility.yul\":3405:3408   */\n      0xa0\n        /* \"#utility.yul\":3394:3403   */\n      dup6\n        /* \"#utility.yul\":3390:3409   */\n      add\n        /* \"#utility.yul\":3383:3418   */\n      mstore\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3446:3587   */\n    tag_71:\n        /* \"#utility.yul\":3460:3466   */\n      dup3\n        /* \"#utility.yul\":3457:3458   */\n      dup2\n        /* \"#utility.yul\":3454:3467   */\n      lt\n        /* \"#utility.yul\":3446:3587   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":3556:3570   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":3552:3575   */\n      dup3\n      add\n        /* \"#utility.yul\":3546:3576   */\n      mload\n        /* \"#utility.yul\":3521:3538   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3540:3543   */\n      0xc0\n        /* \"#utility.yul\":3517:3544   */\n      add\n        /* \"#utility.yul\":3510:3577   */\n      mstore\n        /* \"#utility.yul\":3475:3485   */\n      dup2\n      add\n        /* \"#utility.yul\":3446:3587   */\n      jump(tag_71)\n    tag_73:\n        /* \"#utility.yul\":3450:3453   */\n      pop\n      pop\n        /* \"#utility.yul\":3637:3638   */\n      0x00\n        /* \"#utility.yul\":3631:3634   */\n      0xc0\n        /* \"#utility.yul\":3622:3628   */\n      dup3\n        /* \"#utility.yul\":3611:3620   */\n      dup6\n        /* \"#utility.yul\":3607:3629   */\n      add\n        /* \"#utility.yul\":3603:3635   */\n      add\n        /* \"#utility.yul\":3596:3639   */\n      mstore\n        /* \"#utility.yul\":3707:3710   */\n      0xc0\n        /* \"#utility.yul\":3700:3702   */\n      0x1f\n        /* \"#utility.yul\":3696:3703   */\n      not\n        /* \"#utility.yul\":3691:3693   */\n      0x1f\n        /* \"#utility.yul\":3683:3689   */\n      dup4\n        /* \"#utility.yul\":3679:3694   */\n      add\n        /* \"#utility.yul\":3675:3704   */\n      and\n        /* \"#utility.yul\":3664:3673   */\n      dup5\n        /* \"#utility.yul\":3660:3705   */\n      add\n        /* \"#utility.yul\":3656:3711   */\n      add\n        /* \"#utility.yul\":3648:3711   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3748:3754   */\n      dup3\n        /* \"#utility.yul\":3742:3745   */\n      0x80\n        /* \"#utility.yul\":3731:3740   */\n      dup4\n        /* \"#utility.yul\":3727:3746   */\n      add\n        /* \"#utility.yul\":3720:3755   */\n      mstore\n        /* \"#utility.yul\":2869:3761   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203eafa8e63c5b3753d29a98791eef36c17eb322e43e4b6f00b981a0b6e547f66364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes4t_enum$_Error_$42_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"panic_error_0x21": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:589:3",
										"nodeType": "YulBlock",
										"src": "0:589:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "119:336:3",
													"nodeType": "YulBlock",
													"src": "119:336:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "165:16:3",
																"nodeType": "YulBlock",
																"src": "165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:3",
																					"nodeType": "YulLiteral",
																					"src": "174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:3",
																					"nodeType": "YulLiteral",
																					"src": "177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:3"
																			},
																			"nativeSrc": "167:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:3"
																		},
																		"nativeSrc": "167:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "140:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "140:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "149:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "149:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "136:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "136:3:3"
																		},
																		"nativeSrc": "136:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "136:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "161:2:3",
																		"nodeType": "YulLiteral",
																		"src": "161:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "132:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "132:3:3"
																},
																"nativeSrc": "132:32:3",
																"nodeType": "YulFunctionCall",
																"src": "132:32:3"
															},
															"nativeSrc": "129:52:3",
															"nodeType": "YulIf",
															"src": "129:52:3"
														},
														{
															"nativeSrc": "190:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "190:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "209:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "209:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "203:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "203:5:3"
																},
																"nativeSrc": "203:16:3",
																"nodeType": "YulFunctionCall",
																"src": "203:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "194:5:3",
																	"nodeType": "YulTypedName",
																	"src": "194:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "283:16:3",
																"nodeType": "YulBlock",
																"src": "283:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "292:1:3",
																					"nodeType": "YulLiteral",
																					"src": "292:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "295:1:3",
																					"nodeType": "YulLiteral",
																					"src": "295:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "285:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:3"
																			},
																			"nativeSrc": "285:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:3"
																		},
																		"nativeSrc": "285:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "241:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "241:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "252:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "252:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "263:3:3",
																								"nodeType": "YulLiteral",
																								"src": "263:3:3",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "268:10:3",
																								"nodeType": "YulLiteral",
																								"src": "268:10:3",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "259:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "259:3:3"
																						},
																						"nativeSrc": "259:20:3",
																						"nodeType": "YulFunctionCall",
																						"src": "259:20:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "248:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "248:3:3"
																				},
																				"nativeSrc": "248:32:3",
																				"nodeType": "YulFunctionCall",
																				"src": "248:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "238:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "238:2:3"
																		},
																		"nativeSrc": "238:43:3",
																		"nodeType": "YulFunctionCall",
																		"src": "238:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "231:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:3"
																},
																"nativeSrc": "231:51:3",
																"nodeType": "YulFunctionCall",
																"src": "231:51:3"
															},
															"nativeSrc": "228:71:3",
															"nodeType": "YulIf",
															"src": "228:71:3"
														},
														{
															"nativeSrc": "308:15:3",
															"nodeType": "YulAssignment",
															"src": "308:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "318:5:3",
																"nodeType": "YulIdentifier",
																"src": "318:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "308:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "308:6:3"
																}
															]
														},
														{
															"nativeSrc": "332:40:3",
															"nodeType": "YulVariableDeclaration",
															"src": "332:40:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "357:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "357:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "368:2:3",
																				"nodeType": "YulLiteral",
																				"src": "368:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "353:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:3"
																		},
																		"nativeSrc": "353:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "353:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "347:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "347:5:3"
																},
																"nativeSrc": "347:25:3",
																"nodeType": "YulFunctionCall",
																"src": "347:25:3"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "336:7:3",
																	"nodeType": "YulTypedName",
																	"src": "336:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "407:16:3",
																"nodeType": "YulBlock",
																"src": "407:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "416:1:3",
																					"nodeType": "YulLiteral",
																					"src": "416:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "419:1:3",
																					"nodeType": "YulLiteral",
																					"src": "419:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "409:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "409:6:3"
																			},
																			"nativeSrc": "409:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "409:12:3"
																		},
																		"nativeSrc": "409:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "409:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "394:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "394:7:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "403:1:3",
																				"nodeType": "YulLiteral",
																				"src": "403:1:3",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "391:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "391:2:3"
																		},
																		"nativeSrc": "391:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "391:14:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "384:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "384:6:3"
																},
																"nativeSrc": "384:22:3",
																"nodeType": "YulFunctionCall",
																"src": "384:22:3"
															},
															"nativeSrc": "381:42:3",
															"nodeType": "YulIf",
															"src": "381:42:3"
														},
														{
															"nativeSrc": "432:17:3",
															"nodeType": "YulAssignment",
															"src": "432:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "442:7:3",
																"nodeType": "YulIdentifier",
																"src": "442:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "432:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "432:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_enum$_Error_$42_fromMemory",
												"nativeSrc": "14:441:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "77:9:3",
														"nodeType": "YulTypedName",
														"src": "77:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "88:7:3",
														"nodeType": "YulTypedName",
														"src": "88:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "100:6:3",
														"nodeType": "YulTypedName",
														"src": "100:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "108:6:3",
														"nodeType": "YulTypedName",
														"src": "108:6:3",
														"type": ""
													}
												],
												"src": "14:441:3"
											},
											{
												"body": {
													"nativeSrc": "492:95:3",
													"nodeType": "YulBlock",
													"src": "492:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "509:1:3",
																		"nodeType": "YulLiteral",
																		"src": "509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "516:3:3",
																				"nodeType": "YulLiteral",
																				"src": "516:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "521:10:3",
																				"nodeType": "YulLiteral",
																				"src": "521:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "512:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:3"
																		},
																		"nativeSrc": "512:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "512:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "502:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "502:6:3"
																},
																"nativeSrc": "502:31:3",
																"nodeType": "YulFunctionCall",
																"src": "502:31:3"
															},
															"nativeSrc": "502:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "502:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "549:1:3",
																		"nodeType": "YulLiteral",
																		"src": "549:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "552:4:3",
																		"nodeType": "YulLiteral",
																		"src": "552:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "542:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:3"
																},
																"nativeSrc": "542:15:3",
																"nodeType": "YulFunctionCall",
																"src": "542:15:3"
															},
															"nativeSrc": "542:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "542:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:3",
																		"nodeType": "YulLiteral",
																		"src": "573:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "576:4:3",
																		"nodeType": "YulLiteral",
																		"src": "576:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "566:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "566:6:3"
																},
																"nativeSrc": "566:15:3",
																"nodeType": "YulFunctionCall",
																"src": "566:15:3"
															},
															"nativeSrc": "566:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "566:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "460:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "460:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4t_enum$_Error_$42_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(lt(value_1, 4)) { revert(0, 0) }\n        value1 := value_1\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b5060405161053c38038061053c83398101604081905261002e9161006d565b6001600160e01b0319821660805280600381111561004e5761004e6100b4565b60a0816003811115610062576100626100b4565b8152505050506100c8565b5f806040838503121561007e575f80fd5b82516001600160e01b031981168114610095575f80fd5b6020840151909250600481106100a9575f80fd5b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b60805160a0516104466100f65f395f818160c70152818161014c015261018901525f61020e01526104465ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c806301ffc9a714610038578063150b7a0214610060575b5f80fd5b61004b610046366004610235565b61008c565b60405190151581526020015b60405180910390f35b61007361006e366004610292565b6100c2565b6040516001600160e01b03199091168152602001610057565b5f6001600160e01b031982166301ffc9a760e01b14806100bc57506001600160e01b03198216630a85bd0160e11b145b92915050565b5f60017f000000000000000000000000000000000000000000000000000000000000000060038111156100f7576100f7610367565b036101485760405162461bcd60e51b815260206004820152601d60248201527f45524337323152656365697665724d6f636b3a20726576657274696e67000000604482015260640160405180910390fd5b60027f0000000000000000000000000000000000000000000000000000000000000000600381111561017c5761017c610367565b03610185575f80fd5b60037f000000000000000000000000000000000000000000000000000000000000000060038111156101b9576101b9610367565b036101cc575f6101c9818061037b565b50505b7f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b038858585855a60405161020395949392919061039a565b60405180910390a1507f0000000000000000000000000000000000000000000000000000000000000000949350505050565b5f60208284031215610245575f80fd5b81356001600160e01b03198116811461025c575f80fd5b9392505050565b80356001600160a01b0381168114610279575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156102a5575f80fd5b6102ae85610263565b93506102bc60208601610263565b925060408501359150606085013567ffffffffffffffff808211156102df575f80fd5b818701915087601f8301126102f2575f80fd5b8135818111156103045761030461027e565b604051601f8201601f19908116603f0116810190838211818310171561032c5761032c61027e565b816040528281528a6020848701011115610344575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b634e487b7160e01b5f52602160045260245ffd5b5f8261039557634e487b7160e01b5f52601260045260245ffd5b500490565b5f60018060a01b0380881683526020818816602085015286604085015260a06060850152855191508160a08501525f5b828110156103e65786810182015185820160c0015281016103ca565b50505f60c0828501015260c0601f19601f830116840101915050826080830152969550505050505056fea26469706673582212203eafa8e63c5b3753d29a98791eef36c17eb322e43e4b6f00b981a0b6e547f66364736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x53C CODESIZE SUB DUP1 PUSH2 0x53C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x80 MSTORE DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4E JUMPI PUSH2 0x4E PUSH2 0xB4 JUMP JUMPDEST PUSH1 0xA0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x62 JUMPI PUSH2 0x62 PUSH2 0xB4 JUMP JUMPDEST DUP2 MSTORE POP POP POP POP PUSH2 0xC8 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x4 DUP2 LT PUSH2 0xA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x446 PUSH2 0xF6 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xC7 ADD MSTORE DUP2 DUP2 PUSH2 0x14C ADD MSTORE PUSH2 0x189 ADD MSTORE PUSH0 PUSH2 0x20E ADD MSTORE PUSH2 0x446 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x46 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x6E CALLDATASIZE PUSH1 0x4 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x57 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xBC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF7 JUMPI PUSH2 0xF7 PUSH2 0x367 JUMP JUMPDEST SUB PUSH2 0x148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323152656365697665724D6F636B3A20726576657274696E67000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17C JUMPI PUSH2 0x17C PUSH2 0x367 JUMP JUMPDEST SUB PUSH2 0x185 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B9 PUSH2 0x367 JUMP JUMPDEST SUB PUSH2 0x1CC JUMPI PUSH0 PUSH2 0x1C9 DUP2 DUP1 PUSH2 0x37B JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x28FA6E16458F9C24AA59DDD4085264573006DBE30304837873C7DEAFC702B038 DUP6 DUP6 DUP6 DUP6 GAS PUSH1 0x40 MLOAD PUSH2 0x203 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH32 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2AE DUP6 PUSH2 0x263 JUMP JUMPDEST SWAP4 POP PUSH2 0x2BC PUSH1 0x20 DUP7 ADD PUSH2 0x263 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x304 JUMPI PUSH2 0x304 PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x32C JUMPI PUSH2 0x32C PUSH2 0x27E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x395 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP9 AND PUSH1 0x20 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP6 ADD MSTORE DUP6 MLOAD SWAP2 POP DUP2 PUSH1 0xA0 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI DUP7 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP3 ADD PUSH1 0xC0 ADD MSTORE DUP2 ADD PUSH2 0x3CA JUMP JUMPDEST POP POP PUSH0 PUSH1 0xC0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xAF 0xA8 0xE6 EXTCODECOPY JUMPDEST CALLDATACOPY MSTORE8 0xD2 SWAP11 SWAP9 PUSH26 0x1EEF36C17EB322E43E4B6F00B981A0B6E547F66364736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "192:1247:2:-:0;;;533:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;583:16:2;;;;618:5;609:14;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;533:97;;192:1247;;14:441:3;100:6;108;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;203:16;;-1:-1:-1;;;;;;248:32:3;;238:43;;228:71;;295:1;292;285:12;228:71;368:2;353:18;;347:25;318:5;;-1:-1:-1;403:1:3;391:14;;381:42;;419:1;416;409:12;381:42;442:7;432:17;;;14:441;;;;;:::o;460:127::-;521:10;516:3;512:20;509:1;502:31;552:4;549:1;542:15;576:4;573:1;566:15;460:127;192:1247:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_164": {
									"entryPoint": 194,
									"id": 164,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@supportsInterface_99": {
									"entryPoint": 140,
									"id": 99,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dbe0f4c3249a8de74f224ef53fef2e300747c9f34527e99ce6490bf6e04eb76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3763:3",
										"nodeType": "YulBlock",
										"src": "0:3763:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:3",
													"nodeType": "YulBlock",
													"src": "83:217:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:3",
																"nodeType": "YulBlock",
																"src": "129:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:3",
																					"nodeType": "YulLiteral",
																					"src": "138:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:3",
																					"nodeType": "YulLiteral",
																					"src": "141:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:3"
																			},
																			"nativeSrc": "131:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:3"
																		},
																		"nativeSrc": "131:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:3"
																		},
																		"nativeSrc": "100:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:3",
																		"nodeType": "YulLiteral",
																		"src": "125:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:3"
																},
																"nativeSrc": "96:32:3",
																"nodeType": "YulFunctionCall",
																"src": "96:32:3"
															},
															"nativeSrc": "93:52:3",
															"nodeType": "YulIf",
															"src": "93:52:3"
														},
														{
															"nativeSrc": "154:36:3",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:3"
																},
																"nativeSrc": "167:23:3",
																"nodeType": "YulFunctionCall",
																"src": "167:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:3",
																	"nodeType": "YulTypedName",
																	"src": "158:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:3",
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:3",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:3",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nativeSrc": "256:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nativeSrc": "256:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:3",
																								"nodeType": "YulLiteral",
																								"src": "234:3:3",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:3",
																								"nodeType": "YulLiteral",
																								"src": "239:10:3",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:3"
																						},
																						"nativeSrc": "230:20:3",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:3"
																				},
																				"nativeSrc": "219:32:3",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:3"
																		},
																		"nativeSrc": "209:43:3",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:3"
																},
																"nativeSrc": "202:51:3",
																"nodeType": "YulFunctionCall",
																"src": "202:51:3"
															},
															"nativeSrc": "199:71:3",
															"nodeType": "YulIf",
															"src": "199:71:3"
														},
														{
															"nativeSrc": "279:15:3",
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:3",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:3",
														"nodeType": "YulTypedName",
														"src": "49:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:3",
														"nodeType": "YulTypedName",
														"src": "60:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:3",
														"nodeType": "YulTypedName",
														"src": "72:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nativeSrc": "400:92:3",
													"nodeType": "YulBlock",
													"src": "400:92:3",
													"statements": [
														{
															"nativeSrc": "410:26:3",
															"nodeType": "YulAssignment",
															"src": "410:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:3",
																		"nodeType": "YulLiteral",
																		"src": "433:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:3"
																},
																"nativeSrc": "418:18:3",
																"nodeType": "YulFunctionCall",
																"src": "418:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:3"
																				},
																				"nativeSrc": "470:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:3"
																		},
																		"nativeSrc": "463:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:3"
																},
																"nativeSrc": "445:41:3",
																"nodeType": "YulFunctionCall",
																"src": "445:41:3"
															},
															"nativeSrc": "445:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:3",
														"nodeType": "YulTypedName",
														"src": "369:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:3",
														"nodeType": "YulTypedName",
														"src": "380:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:3",
														"nodeType": "YulTypedName",
														"src": "391:4:3",
														"type": ""
													}
												],
												"src": "305:187:3"
											},
											{
												"body": {
													"nativeSrc": "546:124:3",
													"nodeType": "YulBlock",
													"src": "546:124:3",
													"statements": [
														{
															"nativeSrc": "556:29:3",
															"nodeType": "YulAssignment",
															"src": "556:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "578:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "565:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:3"
																},
																"nativeSrc": "565:20:3",
																"nodeType": "YulFunctionCall",
																"src": "565:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "556:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "648:16:3",
																"nodeType": "YulBlock",
																"src": "648:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "657:1:3",
																					"nodeType": "YulLiteral",
																					"src": "657:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "660:1:3",
																					"nodeType": "YulLiteral",
																					"src": "660:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "650:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:3"
																			},
																			"nativeSrc": "650:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:3"
																		},
																		"nativeSrc": "650:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "607:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "618:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "633:3:3",
																										"nodeType": "YulLiteral",
																										"src": "633:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "638:1:3",
																										"nodeType": "YulLiteral",
																										"src": "638:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "629:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:3"
																								},
																								"nativeSrc": "629:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "642:1:3",
																								"nodeType": "YulLiteral",
																								"src": "642:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "625:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:3"
																						},
																						"nativeSrc": "625:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "614:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:3"
																				},
																				"nativeSrc": "614:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "604:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:3"
																		},
																		"nativeSrc": "604:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "597:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:3"
																},
																"nativeSrc": "597:50:3",
																"nodeType": "YulFunctionCall",
																"src": "597:50:3"
															},
															"nativeSrc": "594:70:3",
															"nodeType": "YulIf",
															"src": "594:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "497:173:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "525:6:3",
														"nodeType": "YulTypedName",
														"src": "525:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "536:5:3",
														"nodeType": "YulTypedName",
														"src": "536:5:3",
														"type": ""
													}
												],
												"src": "497:173:3"
											},
											{
												"body": {
													"nativeSrc": "707:95:3",
													"nodeType": "YulBlock",
													"src": "707:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "724:1:3",
																		"nodeType": "YulLiteral",
																		"src": "724:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "731:3:3",
																				"nodeType": "YulLiteral",
																				"src": "731:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "736:10:3",
																				"nodeType": "YulLiteral",
																				"src": "736:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "727:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:3"
																		},
																		"nativeSrc": "727:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "727:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "717:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:3"
																},
																"nativeSrc": "717:31:3",
																"nodeType": "YulFunctionCall",
																"src": "717:31:3"
															},
															"nativeSrc": "717:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "717:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "764:1:3",
																		"nodeType": "YulLiteral",
																		"src": "764:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:4:3",
																		"nodeType": "YulLiteral",
																		"src": "767:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "757:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:3"
																},
																"nativeSrc": "757:15:3",
																"nodeType": "YulFunctionCall",
																"src": "757:15:3"
															},
															"nativeSrc": "757:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "757:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "788:1:3",
																		"nodeType": "YulLiteral",
																		"src": "788:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "791:4:3",
																		"nodeType": "YulLiteral",
																		"src": "791:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "781:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:3"
																},
																"nativeSrc": "781:15:3",
																"nodeType": "YulFunctionCall",
																"src": "781:15:3"
															},
															"nativeSrc": "781:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "781:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "675:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "675:127:3"
											},
											{
												"body": {
													"nativeSrc": "937:1008:3",
													"nodeType": "YulBlock",
													"src": "937:1008:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "984:16:3",
																"nodeType": "YulBlock",
																"src": "984:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "993:1:3",
																					"nodeType": "YulLiteral",
																					"src": "993:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "996:1:3",
																					"nodeType": "YulLiteral",
																					"src": "996:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "986:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "986:6:3"
																			},
																			"nativeSrc": "986:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "986:12:3"
																		},
																		"nativeSrc": "986:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "986:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "958:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "958:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "967:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "967:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "954:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "954:3:3"
																		},
																		"nativeSrc": "954:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "954:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "979:3:3",
																		"nodeType": "YulLiteral",
																		"src": "979:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "950:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:3"
																},
																"nativeSrc": "950:33:3",
																"nodeType": "YulFunctionCall",
																"src": "950:33:3"
															},
															"nativeSrc": "947:53:3",
															"nodeType": "YulIf",
															"src": "947:53:3"
														},
														{
															"nativeSrc": "1009:39:3",
															"nodeType": "YulAssignment",
															"src": "1009:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1038:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1038:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1019:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "1019:18:3"
																},
																"nativeSrc": "1019:29:3",
																"nodeType": "YulFunctionCall",
																"src": "1019:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1009:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1009:6:3"
																}
															]
														},
														{
															"nativeSrc": "1057:48:3",
															"nodeType": "YulAssignment",
															"src": "1057:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1090:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1090:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1101:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1101:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1086:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:3"
																		},
																		"nativeSrc": "1086:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1086:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1067:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "1067:18:3"
																},
																"nativeSrc": "1067:38:3",
																"nodeType": "YulFunctionCall",
																"src": "1067:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1057:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1057:6:3"
																}
															]
														},
														{
															"nativeSrc": "1114:42:3",
															"nodeType": "YulAssignment",
															"src": "1114:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1141:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1152:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1152:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1137:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:3"
																		},
																		"nativeSrc": "1137:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1124:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1124:12:3"
																},
																"nativeSrc": "1124:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1124:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1114:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:3"
																}
															]
														},
														{
															"nativeSrc": "1165:46:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1165:46:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1196:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1196:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1207:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1207:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1192:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1192:3:3"
																		},
																		"nativeSrc": "1192:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1192:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1179:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1179:12:3"
																},
																"nativeSrc": "1179:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1179:32:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1169:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1169:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1220:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1220:28:3",
															"value": {
																"kind": "number",
																"nativeSrc": "1230:18:3",
																"nodeType": "YulLiteral",
																"src": "1230:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1224:2:3",
																	"nodeType": "YulTypedName",
																	"src": "1224:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1275:16:3",
																"nodeType": "YulBlock",
																"src": "1275:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1284:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1284:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1277:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1277:6:3"
																			},
																			"nativeSrc": "1277:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1277:12:3"
																		},
																		"nativeSrc": "1277:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1277:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1263:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1263:6:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1271:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1271:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1260:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1260:2:3"
																},
																"nativeSrc": "1260:14:3",
																"nodeType": "YulFunctionCall",
																"src": "1260:14:3"
															},
															"nativeSrc": "1257:34:3",
															"nodeType": "YulIf",
															"src": "1257:34:3"
														},
														{
															"nativeSrc": "1300:32:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1300:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1314:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1314:9:3"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1325:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1325:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1310:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:3"
																},
																"nativeSrc": "1310:22:3",
																"nodeType": "YulFunctionCall",
																"src": "1310:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1304:2:3",
																	"nodeType": "YulTypedName",
																	"src": "1304:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1380:16:3",
																"nodeType": "YulBlock",
																"src": "1380:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1389:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1389:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1392:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1392:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1382:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:3"
																			},
																			"nativeSrc": "1382:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:12:3"
																		},
																		"nativeSrc": "1382:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1359:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "1359:2:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1363:4:3",
																						"nodeType": "YulLiteral",
																						"src": "1363:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1355:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:3"
																				},
																				"nativeSrc": "1355:13:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1355:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1370:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1370:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1351:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1351:3:3"
																		},
																		"nativeSrc": "1351:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1351:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1344:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:3"
																},
																"nativeSrc": "1344:35:3",
																"nodeType": "YulFunctionCall",
																"src": "1344:35:3"
															},
															"nativeSrc": "1341:55:3",
															"nodeType": "YulIf",
															"src": "1341:55:3"
														},
														{
															"nativeSrc": "1405:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1405:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1428:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1428:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1415:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1415:12:3"
																},
																"nativeSrc": "1415:16:3",
																"nodeType": "YulFunctionCall",
																"src": "1415:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1409:2:3",
																	"nodeType": "YulTypedName",
																	"src": "1409:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1454:22:3",
																"nodeType": "YulBlock",
																"src": "1454:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1456:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1456:16:3"
																			},
																			"nativeSrc": "1456:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1456:18:3"
																		},
																		"nativeSrc": "1456:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1456:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "1446:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1446:2:3"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1450:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1450:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1443:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1443:2:3"
																},
																"nativeSrc": "1443:10:3",
																"nodeType": "YulFunctionCall",
																"src": "1443:10:3"
															},
															"nativeSrc": "1440:36:3",
															"nodeType": "YulIf",
															"src": "1440:36:3"
														},
														{
															"nativeSrc": "1485:17:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1485:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1499:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1495:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:3"
																},
																"nativeSrc": "1495:7:3",
																"nodeType": "YulFunctionCall",
																"src": "1495:7:3"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "1489:2:3",
																	"nodeType": "YulTypedName",
																	"src": "1489:2:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1511:23:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1511:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1531:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1531:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1525:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1525:5:3"
																},
																"nativeSrc": "1525:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1525:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1515:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1515:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1543:71:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1543:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1565:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1565:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1589:2:3",
																										"nodeType": "YulIdentifier",
																										"src": "1589:2:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1593:4:3",
																										"nodeType": "YulLiteral",
																										"src": "1593:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1585:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "1585:3:3"
																								},
																								"nativeSrc": "1585:13:3",
																								"nodeType": "YulFunctionCall",
																								"src": "1585:13:3"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1600:2:3",
																								"nodeType": "YulIdentifier",
																								"src": "1600:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1581:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1581:3:3"
																						},
																						"nativeSrc": "1581:22:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1581:22:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1605:2:3",
																						"nodeType": "YulLiteral",
																						"src": "1605:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1577:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1577:3:3"
																				},
																				"nativeSrc": "1577:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1577:31:3"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1610:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "1610:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1573:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:3"
																		},
																		"nativeSrc": "1573:40:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1573:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1561:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:3"
																},
																"nativeSrc": "1561:53:3",
																"nodeType": "YulFunctionCall",
																"src": "1561:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1547:10:3",
																	"nodeType": "YulTypedName",
																	"src": "1547:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1673:22:3",
																"nodeType": "YulBlock",
																"src": "1673:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1675:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1675:16:3"
																			},
																			"nativeSrc": "1675:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1675:18:3"
																		},
																		"nativeSrc": "1675:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1675:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1632:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "1632:10:3"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1644:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "1644:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1629:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1629:2:3"
																		},
																		"nativeSrc": "1629:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1629:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1652:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "1652:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1664:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1664:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1649:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1649:2:3"
																		},
																		"nativeSrc": "1649:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1626:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1626:2:3"
																},
																"nativeSrc": "1626:46:3",
																"nodeType": "YulFunctionCall",
																"src": "1626:46:3"
															},
															"nativeSrc": "1623:72:3",
															"nodeType": "YulIf",
															"src": "1623:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1711:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1711:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1715:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "1715:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1704:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:3"
																},
																"nativeSrc": "1704:22:3",
																"nodeType": "YulFunctionCall",
																"src": "1704:22:3"
															},
															"nativeSrc": "1704:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "1704:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1742:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1742:6:3"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1750:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1750:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1735:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1735:6:3"
																},
																"nativeSrc": "1735:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1735:18:3"
															},
															"nativeSrc": "1735:18:3",
															"nodeType": "YulExpressionStatement",
															"src": "1735:18:3"
														},
														{
															"body": {
																"nativeSrc": "1799:16:3",
																"nodeType": "YulBlock",
																"src": "1799:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1808:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1808:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1811:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1811:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1801:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1801:6:3"
																			},
																			"nativeSrc": "1801:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1801:12:3"
																		},
																		"nativeSrc": "1801:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1801:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1776:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "1776:2:3"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1780:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "1780:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1772:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1772:3:3"
																				},
																				"nativeSrc": "1772:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1772:11:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1785:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1785:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1768:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1768:3:3"
																		},
																		"nativeSrc": "1768:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1768:20:3"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1790:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "1790:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1765:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1765:2:3"
																},
																"nativeSrc": "1765:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1765:33:3"
															},
															"nativeSrc": "1762:53:3",
															"nodeType": "YulIf",
															"src": "1762:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1841:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1841:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1849:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1849:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1837:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:3"
																		},
																		"nativeSrc": "1837:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1858:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "1858:2:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1862:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1862:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1854:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:3"
																		},
																		"nativeSrc": "1854:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:11:3"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1867:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "1867:2:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1824:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1824:12:3"
																},
																"nativeSrc": "1824:46:3",
																"nodeType": "YulFunctionCall",
																"src": "1824:46:3"
															},
															"nativeSrc": "1824:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "1824:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1894:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1894:6:3"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1902:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "1902:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1890:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1890:3:3"
																				},
																				"nativeSrc": "1890:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1890:15:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1907:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1886:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1886:3:3"
																		},
																		"nativeSrc": "1886:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1886:24:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1912:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1912:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1879:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1879:6:3"
																},
																"nativeSrc": "1879:35:3",
																"nodeType": "YulFunctionCall",
																"src": "1879:35:3"
															},
															"nativeSrc": "1879:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "1879:35:3"
														},
														{
															"nativeSrc": "1923:16:3",
															"nodeType": "YulAssignment",
															"src": "1923:16:3",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1933:6:3",
																"nodeType": "YulIdentifier",
																"src": "1933:6:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1923:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1923:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "807:1138:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "879:9:3",
														"nodeType": "YulTypedName",
														"src": "879:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "890:7:3",
														"nodeType": "YulTypedName",
														"src": "890:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "902:6:3",
														"nodeType": "YulTypedName",
														"src": "902:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "910:6:3",
														"nodeType": "YulTypedName",
														"src": "910:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "918:6:3",
														"nodeType": "YulTypedName",
														"src": "918:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "926:6:3",
														"nodeType": "YulTypedName",
														"src": "926:6:3",
														"type": ""
													}
												],
												"src": "807:1138:3"
											},
											{
												"body": {
													"nativeSrc": "2049:103:3",
													"nodeType": "YulBlock",
													"src": "2049:103:3",
													"statements": [
														{
															"nativeSrc": "2059:26:3",
															"nodeType": "YulAssignment",
															"src": "2059:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2071:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2071:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2082:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2082:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2067:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2067:3:3"
																},
																"nativeSrc": "2067:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2067:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2059:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2059:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2101:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2116:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2116:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2128:3:3",
																						"nodeType": "YulLiteral",
																						"src": "2128:3:3",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2133:10:3",
																						"nodeType": "YulLiteral",
																						"src": "2133:10:3",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2124:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2124:3:3"
																				},
																				"nativeSrc": "2124:20:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2124:20:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2112:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:3"
																		},
																		"nativeSrc": "2112:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:33:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2094:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:3"
																},
																"nativeSrc": "2094:52:3",
																"nodeType": "YulFunctionCall",
																"src": "2094:52:3"
															},
															"nativeSrc": "2094:52:3",
															"nodeType": "YulExpressionStatement",
															"src": "2094:52:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "1950:202:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2018:9:3",
														"nodeType": "YulTypedName",
														"src": "2018:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2029:6:3",
														"nodeType": "YulTypedName",
														"src": "2029:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2040:4:3",
														"nodeType": "YulTypedName",
														"src": "2040:4:3",
														"type": ""
													}
												],
												"src": "1950:202:3"
											},
											{
												"body": {
													"nativeSrc": "2189:95:3",
													"nodeType": "YulBlock",
													"src": "2189:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2206:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2206:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2213:3:3",
																				"nodeType": "YulLiteral",
																				"src": "2213:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2218:10:3",
																				"nodeType": "YulLiteral",
																				"src": "2218:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2209:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2209:3:3"
																		},
																		"nativeSrc": "2209:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2209:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2199:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:3"
																},
																"nativeSrc": "2199:31:3",
																"nodeType": "YulFunctionCall",
																"src": "2199:31:3"
															},
															"nativeSrc": "2199:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "2199:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2246:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2246:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2249:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2239:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:3"
																},
																"nativeSrc": "2239:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2239:15:3"
															},
															"nativeSrc": "2239:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2239:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2270:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2270:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2273:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2273:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2263:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:3"
																},
																"nativeSrc": "2263:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2263:15:3"
															},
															"nativeSrc": "2263:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2263:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "2157:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2157:127:3"
											},
											{
												"body": {
													"nativeSrc": "2463:179:3",
													"nodeType": "YulBlock",
													"src": "2463:179:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2480:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2480:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2491:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2491:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2473:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:3"
																},
																"nativeSrc": "2473:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2473:21:3"
															},
															"nativeSrc": "2473:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2473:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2514:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2514:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2525:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2525:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2510:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2510:3:3"
																		},
																		"nativeSrc": "2510:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2510:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2530:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2530:2:3",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2503:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2503:6:3"
																},
																"nativeSrc": "2503:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2503:30:3"
															},
															"nativeSrc": "2503:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2503:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2553:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2553:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2564:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2564:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2549:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:3"
																		},
																		"nativeSrc": "2549:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2549:18:3"
																	},
																	{
																		"hexValue": "45524337323152656365697665724d6f636b3a20726576657274696e67",
																		"kind": "string",
																		"nativeSrc": "2569:31:3",
																		"nodeType": "YulLiteral",
																		"src": "2569:31:3",
																		"type": "",
																		"value": "ERC721ReceiverMock: reverting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2542:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:3"
																},
																"nativeSrc": "2542:59:3",
																"nodeType": "YulFunctionCall",
																"src": "2542:59:3"
															},
															"nativeSrc": "2542:59:3",
															"nodeType": "YulExpressionStatement",
															"src": "2542:59:3"
														},
														{
															"nativeSrc": "2610:26:3",
															"nodeType": "YulAssignment",
															"src": "2610:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2622:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2622:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2633:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2633:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2618:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2618:3:3"
																},
																"nativeSrc": "2618:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2618:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2610:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2610:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dbe0f4c3249a8de74f224ef53fef2e300747c9f34527e99ce6490bf6e04eb76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2289:353:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2440:9:3",
														"nodeType": "YulTypedName",
														"src": "2440:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2454:4:3",
														"nodeType": "YulTypedName",
														"src": "2454:4:3",
														"type": ""
													}
												],
												"src": "2289:353:3"
											},
											{
												"body": {
													"nativeSrc": "2693:171:3",
													"nodeType": "YulBlock",
													"src": "2693:171:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2724:111:3",
																"nodeType": "YulBlock",
																"src": "2724:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2745:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2752:3:3",
																							"nodeType": "YulLiteral",
																							"src": "2752:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2757:10:3",
																							"nodeType": "YulLiteral",
																							"src": "2757:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2748:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2748:3:3"
																					},
																					"nativeSrc": "2748:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2748:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2738:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:3"
																			},
																			"nativeSrc": "2738:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2738:31:3"
																		},
																		"nativeSrc": "2738:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2789:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2789:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2792:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2792:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2782:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2782:6:3"
																			},
																			"nativeSrc": "2782:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2782:15:3"
																		},
																		"nativeSrc": "2782:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2782:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2817:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2817:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2820:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2820:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2810:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2810:6:3"
																			},
																			"nativeSrc": "2810:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2810:15:3"
																		},
																		"nativeSrc": "2810:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2810:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2713:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2713:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2706:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2706:6:3"
																},
																"nativeSrc": "2706:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2706:9:3"
															},
															"nativeSrc": "2703:132:3",
															"nodeType": "YulIf",
															"src": "2703:132:3"
														},
														{
															"nativeSrc": "2844:14:3",
															"nodeType": "YulAssignment",
															"src": "2844:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2853:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2853:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2856:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2856:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2849:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2849:3:3"
																},
																"nativeSrc": "2849:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2849:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2844:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2844:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2647:217:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2678:1:3",
														"nodeType": "YulTypedName",
														"src": "2678:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2681:1:3",
														"nodeType": "YulTypedName",
														"src": "2681:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2687:1:3",
														"nodeType": "YulTypedName",
														"src": "2687:1:3",
														"type": ""
													}
												],
												"src": "2647:217:3"
											},
											{
												"body": {
													"nativeSrc": "3100:661:3",
													"nodeType": "YulBlock",
													"src": "3100:661:3",
													"statements": [
														{
															"nativeSrc": "3110:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3110:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3128:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3128:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3133:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3133:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3124:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:3"
																		},
																		"nativeSrc": "3124:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:11:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3137:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3120:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:3"
																},
																"nativeSrc": "3120:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3120:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3114:2:3",
																	"nodeType": "YulTypedName",
																	"src": "3114:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3155:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3170:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3170:6:3"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3178:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "3178:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3166:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3166:3:3"
																		},
																		"nativeSrc": "3166:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3166:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3148:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3148:6:3"
																},
																"nativeSrc": "3148:34:3",
																"nodeType": "YulFunctionCall",
																"src": "3148:34:3"
															},
															"nativeSrc": "3148:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "3148:34:3"
														},
														{
															"nativeSrc": "3191:12:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3191:12:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3201:2:3",
																"nodeType": "YulLiteral",
																"src": "3201:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3195:2:3",
																	"nodeType": "YulTypedName",
																	"src": "3195:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3223:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3223:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3234:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3234:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3219:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:3"
																		},
																		"nativeSrc": "3219:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3243:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3243:6:3"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3251:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "3251:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3239:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:3"
																		},
																		"nativeSrc": "3239:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3212:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3212:6:3"
																},
																"nativeSrc": "3212:43:3",
																"nodeType": "YulFunctionCall",
																"src": "3212:43:3"
															},
															"nativeSrc": "3212:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "3212:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3275:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3286:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3286:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3271:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3271:3:3"
																		},
																		"nativeSrc": "3271:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3271:18:3"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3291:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3291:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3264:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:3"
																},
																"nativeSrc": "3264:34:3",
																"nodeType": "YulFunctionCall",
																"src": "3264:34:3"
															},
															"nativeSrc": "3264:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "3264:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3318:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3318:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3329:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3329:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3314:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3314:3:3"
																		},
																		"nativeSrc": "3314:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3314:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3334:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3334:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3307:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3307:6:3"
																},
																"nativeSrc": "3307:31:3",
																"nodeType": "YulFunctionCall",
																"src": "3307:31:3"
															},
															"nativeSrc": "3307:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "3307:31:3"
														},
														{
															"nativeSrc": "3347:27:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3347:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3367:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3367:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3361:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3361:5:3"
																},
																"nativeSrc": "3361:13:3",
																"nodeType": "YulFunctionCall",
																"src": "3361:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3351:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3351:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3394:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3394:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3405:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3405:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3390:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:3"
																		},
																		"nativeSrc": "3390:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3390:19:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3411:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3383:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:3"
																},
																"nativeSrc": "3383:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3383:35:3"
															},
															"nativeSrc": "3383:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3383:35:3"
														},
														{
															"nativeSrc": "3427:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3427:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3436:1:3",
																"nodeType": "YulLiteral",
																"src": "3436:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3431:1:3",
																	"nodeType": "YulTypedName",
																	"src": "3431:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3496:91:3",
																"nodeType": "YulBlock",
																"src": "3496:91:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "3525:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "3525:9:3"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "3536:1:3",
																									"nodeType": "YulIdentifier",
																									"src": "3536:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3521:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3521:3:3"
																							},
																							"nativeSrc": "3521:17:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3521:17:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3540:3:3",
																							"nodeType": "YulLiteral",
																							"src": "3540:3:3",
																							"type": "",
																							"value": "192"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3517:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3517:3:3"
																					},
																					"nativeSrc": "3517:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3517:27:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value3",
																											"nativeSrc": "3560:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "3560:6:3"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "3568:1:3",
																											"nodeType": "YulIdentifier",
																											"src": "3568:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "3556:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "3556:3:3"
																									},
																									"nativeSrc": "3556:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "3556:14:3"
																								},
																								{
																									"name": "_2",
																									"nativeSrc": "3572:2:3",
																									"nodeType": "YulIdentifier",
																									"src": "3572:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3552:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3552:3:3"
																							},
																							"nativeSrc": "3552:23:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3552:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3546:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3546:5:3"
																					},
																					"nativeSrc": "3546:30:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3546:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3510:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3510:6:3"
																			},
																			"nativeSrc": "3510:67:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3510:67:3"
																		},
																		"nativeSrc": "3510:67:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3510:67:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3457:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3457:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3460:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3460:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3454:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3454:2:3"
																},
																"nativeSrc": "3454:13:3",
																"nodeType": "YulFunctionCall",
																"src": "3454:13:3"
															},
															"nativeSrc": "3446:141:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3468:19:3",
																"nodeType": "YulBlock",
																"src": "3468:19:3",
																"statements": [
																	{
																		"nativeSrc": "3470:15:3",
																		"nodeType": "YulAssignment",
																		"src": "3470:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3479:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "3479:1:3"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3482:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "3482:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3475:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3475:3:3"
																			},
																			"nativeSrc": "3475:10:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3475:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3470:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "3470:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3450:3:3",
																"nodeType": "YulBlock",
																"src": "3450:3:3",
																"statements": []
															},
															"src": "3446:141:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3611:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:3"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3622:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3622:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3607:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:3"
																				},
																				"nativeSrc": "3607:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3607:22:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3631:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3631:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3603:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:3"
																		},
																		"nativeSrc": "3603:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:32:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3637:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3637:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3596:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:3"
																},
																"nativeSrc": "3596:43:3",
																"nodeType": "YulFunctionCall",
																"src": "3596:43:3"
															},
															"nativeSrc": "3596:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "3596:43:3"
														},
														{
															"nativeSrc": "3648:63:3",
															"nodeType": "YulAssignment",
															"src": "3648:63:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3683:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "3683:6:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3691:2:3",
																								"nodeType": "YulLiteral",
																								"src": "3691:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3679:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3679:3:3"
																						},
																						"nativeSrc": "3679:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3679:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3700:2:3",
																								"nodeType": "YulLiteral",
																								"src": "3700:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3696:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3696:3:3"
																						},
																						"nativeSrc": "3696:7:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3696:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3675:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3675:3:3"
																				},
																				"nativeSrc": "3675:29:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3675:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:3"
																		},
																		"nativeSrc": "3660:45:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:45:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3707:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3656:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:3"
																},
																"nativeSrc": "3656:55:3",
																"nodeType": "YulFunctionCall",
																"src": "3656:55:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3648:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3648:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3731:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3731:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3742:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3742:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3727:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:3"
																		},
																		"nativeSrc": "3727:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:19:3"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "3748:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3748:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3720:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3720:6:3"
																},
																"nativeSrc": "3720:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3720:35:3"
															},
															"nativeSrc": "3720:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3720:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "2869:892:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3037:9:3",
														"nodeType": "YulTypedName",
														"src": "3037:9:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3048:6:3",
														"nodeType": "YulTypedName",
														"src": "3048:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3056:6:3",
														"nodeType": "YulTypedName",
														"src": "3056:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3064:6:3",
														"nodeType": "YulTypedName",
														"src": "3064:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3072:6:3",
														"nodeType": "YulTypedName",
														"src": "3072:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3080:6:3",
														"nodeType": "YulTypedName",
														"src": "3080:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3091:4:3",
														"nodeType": "YulTypedName",
														"src": "3091:4:3",
														"type": ""
													}
												],
												"src": "2869:892:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_0dbe0f4c3249a8de74f224ef53fef2e300747c9f34527e99ce6490bf6e04eb76__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC721ReceiverMock: reverting\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        let length := mload(value3)\n        mstore(add(headStart, 160), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _2) }\n        {\n            mstore(add(add(headStart, i), 192), mload(add(add(value3, i), _2)))\n        }\n        mstore(add(add(headStart, length), 192), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 192)\n        mstore(add(headStart, 128), value4)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"44": [
									{
										"length": 32,
										"start": 526
									}
								],
								"47": [
									{
										"length": 32,
										"start": 199
									},
									{
										"length": 32,
										"start": 332
									},
									{
										"length": 32,
										"start": 393
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c806301ffc9a714610038578063150b7a0214610060575b5f80fd5b61004b610046366004610235565b61008c565b60405190151581526020015b60405180910390f35b61007361006e366004610292565b6100c2565b6040516001600160e01b03199091168152602001610057565b5f6001600160e01b031982166301ffc9a760e01b14806100bc57506001600160e01b03198216630a85bd0160e11b145b92915050565b5f60017f000000000000000000000000000000000000000000000000000000000000000060038111156100f7576100f7610367565b036101485760405162461bcd60e51b815260206004820152601d60248201527f45524337323152656365697665724d6f636b3a20726576657274696e67000000604482015260640160405180910390fd5b60027f0000000000000000000000000000000000000000000000000000000000000000600381111561017c5761017c610367565b03610185575f80fd5b60037f000000000000000000000000000000000000000000000000000000000000000060038111156101b9576101b9610367565b036101cc575f6101c9818061037b565b50505b7f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b038858585855a60405161020395949392919061039a565b60405180910390a1507f0000000000000000000000000000000000000000000000000000000000000000949350505050565b5f60208284031215610245575f80fd5b81356001600160e01b03198116811461025c575f80fd5b9392505050565b80356001600160a01b0381168114610279575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156102a5575f80fd5b6102ae85610263565b93506102bc60208601610263565b925060408501359150606085013567ffffffffffffffff808211156102df575f80fd5b818701915087601f8301126102f2575f80fd5b8135818111156103045761030461027e565b604051601f8201601f19908116603f0116810190838211818310171561032c5761032c61027e565b816040528281528a6020848701011115610344575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b634e487b7160e01b5f52602160045260245ffd5b5f8261039557634e487b7160e01b5f52601260045260245ffd5b500490565b5f60018060a01b0380881683526020818816602085015286604085015260a06060850152855191508160a08501525f5b828110156103e65786810182015185820160c0015281016103ca565b50505f60c0828501015260c0601f19601f830116840101915050826080830152969550505050505056fea26469706673582212203eafa8e63c5b3753d29a98791eef36c17eb322e43e4b6f00b981a0b6e547f66364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x46 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x6E CALLDATASIZE PUSH1 0x4 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x57 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xBC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF7 JUMPI PUSH2 0xF7 PUSH2 0x367 JUMP JUMPDEST SUB PUSH2 0x148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323152656365697665724D6F636B3A20726576657274696E67000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17C JUMPI PUSH2 0x17C PUSH2 0x367 JUMP JUMPDEST SUB PUSH2 0x185 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH32 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B9 PUSH2 0x367 JUMP JUMPDEST SUB PUSH2 0x1CC JUMPI PUSH0 PUSH2 0x1C9 DUP2 DUP1 PUSH2 0x37B JUMP JUMPDEST POP POP JUMPDEST PUSH32 0x28FA6E16458F9C24AA59DDD4085264573006DBE30304837873C7DEAFC702B038 DUP6 DUP6 DUP6 DUP6 GAS PUSH1 0x40 MLOAD PUSH2 0x203 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH32 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2AE DUP6 PUSH2 0x263 JUMP JUMPDEST SWAP4 POP PUSH2 0x2BC PUSH1 0x20 DUP7 ADD PUSH2 0x263 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x304 JUMPI PUSH2 0x304 PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x32C JUMPI PUSH2 0x32C PUSH2 0x27E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x395 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP9 AND PUSH1 0x20 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP6 ADD MSTORE DUP6 MLOAD SWAP2 POP DUP2 PUSH1 0xA0 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI DUP7 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP3 ADD PUSH1 0xC0 ADD MSTORE DUP2 ADD PUSH2 0x3CA JUMP JUMPDEST POP POP PUSH0 PUSH1 0xC0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xAF 0xA8 0xE6 EXTCODECOPY JUMPDEST CALLDATACOPY MSTORE8 0xD2 SWAP11 SWAP9 PUSH26 0x1EEF36C17EB322E43E4B6F00B981A0B6E547F66364736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "192:1247:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:232;;;;;;:::i;:::-;;:::i;:::-;;;470:14:3;;463:22;445:41;;433:2;418:18;636:232:2;;;;;;;;875:562;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;2112:33:3;;;2094:52;;2082:2;2067:18;875:562:2;1950:202:3;636:232:2;721:4;-1:-1:-1;;;;;;756:40:2;;-1:-1:-1;;;756:40:2;;:105;;-1:-1:-1;;;;;;;813:48:2;;-1:-1:-1;;;813:48:2;756:105;737:124;636:232;-1:-1:-1;;636:232:2:o;875:562::-;1032:6;1064:23;1054:6;:33;;;;;;;;:::i;:::-;;1050:292;;1103:39;;-1:-1:-1;;;1103:39:2;;2491:2:3;1103:39:2;;;2473:21:3;2530:2;2510:18;;;2503:30;2569:31;2549:18;;;2542:59;2618:18;;1103:39:2;;;;;;;1050:292;1173:26;1163:6;:36;;;;;;;;:::i;:::-;;1159:183;;1215:8;;;1159:183;1254:11;1244:6;:21;;;;;;;;:::i;:::-;;1240:102;;1281:9;1293:23;1281:9;;1293:23;:::i;:::-;-1:-1:-1;;1240:102:2;1356:50;1365:8;1375:4;1381:7;1390:4;1396:9;1356:50;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1423:7:2;875:562;;;;;;:::o;14:286:3:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:3;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:3:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:3;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:127::-;736:10;731:3;727:20;724:1;717:31;767:4;764:1;757:15;791:4;788:1;781:15;807:1138;902:6;910;918;926;979:3;967:9;958:7;954:23;950:33;947:53;;;996:1;993;986:12;947:53;1019:29;1038:9;1019:29;:::i;:::-;1009:39;;1067:38;1101:2;1090:9;1086:18;1067:38;:::i;:::-;1057:48;;1152:2;1141:9;1137:18;1124:32;1114:42;;1207:2;1196:9;1192:18;1179:32;1230:18;1271:2;1263:6;1260:14;1257:34;;;1287:1;1284;1277:12;1257:34;1325:6;1314:9;1310:22;1300:32;;1370:7;1363:4;1359:2;1355:13;1351:27;1341:55;;1392:1;1389;1382:12;1341:55;1428:2;1415:16;1450:2;1446;1443:10;1440:36;;;1456:18;;:::i;:::-;1531:2;1525:9;1499:2;1585:13;;-1:-1:-1;;1581:22:3;;;1605:2;1577:31;1573:40;1561:53;;;1629:18;;;1649:22;;;1626:46;1623:72;;;1675:18;;:::i;:::-;1715:10;1711:2;1704:22;1750:2;1742:6;1735:18;1790:7;1785:2;1780;1776;1772:11;1768:20;1765:33;1762:53;;;1811:1;1808;1801:12;1762:53;1867:2;1862;1858;1854:11;1849:2;1841:6;1837:15;1824:46;1912:1;1907:2;1902;1894:6;1890:15;1886:24;1879:35;1933:6;1923:16;;;;;;;807:1138;;;;;;;:::o;2157:127::-;2218:10;2213:3;2209:20;2206:1;2199:31;2249:4;2246:1;2239:15;2273:4;2270:1;2263:15;2647:217;2687:1;2713;2703:132;;2757:10;2752:3;2748:20;2745:1;2738:31;2792:4;2789:1;2782:15;2820:4;2817:1;2810:15;2703:132;-1:-1:-1;2849:9:3;;2647:217::o;2869:892::-;3091:4;3137:1;3133;3128:3;3124:11;3120:19;3178:2;3170:6;3166:15;3155:9;3148:34;3201:2;3251;3243:6;3239:15;3234:2;3223:9;3219:18;3212:43;3291:6;3286:2;3275:9;3271:18;3264:34;3334:3;3329:2;3318:9;3314:18;3307:31;3367:6;3361:13;3347:27;;3411:6;3405:3;3394:9;3390:19;3383:35;3436:1;3446:141;3460:6;3457:1;3454:13;3446:141;;;3556:14;;;3552:23;;3546:30;3521:17;;;3540:3;3517:27;3510:67;3475:10;;3446:141;;;3450:3;;3637:1;3631:3;3622:6;3611:9;3607:22;3603:32;3596:43;3707:3;3700:2;3696:7;3691:2;3683:6;3679:15;3675:29;3664:9;3660:45;3656:55;3648:63;;;3748:6;3742:3;3731:9;3727:19;3720:35;2869:892;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "218800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "401"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 630,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 630,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 630,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 533,
									"end": 630,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 533,
									"end": 630,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 533,
									"end": 630,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 533,
									"end": 630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 533,
									"end": 630,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 583,
									"end": 599,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 583,
									"end": 599,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 583,
									"end": 599,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 583,
									"end": 599,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 609,
									"end": 623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 609,
									"end": 623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 609,
									"end": 623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 609,
									"end": 623,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 533,
									"end": 630,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 455,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 100,
									"end": 106,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 161,
									"end": 163,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 149,
									"end": 158,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 140,
									"end": 147,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 136,
									"end": 159,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 132,
									"end": 164,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 181,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 129,
									"end": 181,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 129,
									"end": 181,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 177,
									"end": 178,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 175,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 167,
									"end": 179,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 181,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 129,
									"end": 181,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 203,
									"end": 219,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 219,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 248,
									"end": 280,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 248,
									"end": 280,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 238,
									"end": 281,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 238,
									"end": 281,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 228,
									"end": 299,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 228,
									"end": 299,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 285,
									"end": 297,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 228,
									"end": 299,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 228,
									"end": 299,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 368,
									"end": 370,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 371,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 353,
									"end": 371,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 347,
									"end": 372,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 318,
									"end": 323,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 318,
									"end": 323,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 403,
									"end": 404,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 391,
									"end": 405,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 381,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 381,
									"end": 423,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 419,
									"end": 420,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 417,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 409,
									"end": 421,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 381,
									"end": 423,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 381,
									"end": 423,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 442,
									"end": 449,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 432,
									"end": 449,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 432,
									"end": 449,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 432,
									"end": 449,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 460,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 460,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 531,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 516,
									"end": 519,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 512,
									"end": 532,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 509,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 533,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 552,
									"end": 556,
									"name": "PUSH",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 549,
									"end": 550,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 542,
									"end": 557,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 576,
									"end": 580,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 573,
									"end": 574,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 581,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 460,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 460,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 1439,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203eafa8e63c5b3753d29a98791eef36c17eb322e43e4b6f00b981a0b6e547f66364736f6c63430008180033",
									".code": [
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 1439,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 636,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 636,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 875,
											"end": 1437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 875,
											"end": 1437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2112,
											"end": 2145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1950,
											"end": 2152,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 636,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 721,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 756,
											"end": 796,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 756,
											"end": 796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 756,
											"end": 796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 756,
											"end": 796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 756,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 756,
											"end": 861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 813,
											"end": 861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 813,
											"end": 861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 861,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 756,
											"end": 861,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 756,
											"end": 861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 636,
											"end": 868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 636,
											"end": 868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1054,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1050,
											"end": 1342,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 2510,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2510,
											"end": 2528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "45524337323152656365697665724D6F636B3A20726576657274696E67000000"
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2601,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2636,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2618,
											"end": 2636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1142,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1342,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1050,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1163,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1159,
											"end": 1342,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1342,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1159,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1265,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1244,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1240,
											"end": 1342,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1316,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1342,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1240,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "28FA6E16458F9C24AA59DDD4085264573006DBE30304837873C7DEAFC702B038"
										},
										{
											"begin": 1365,
											"end": 1373,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1379,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1388,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1356,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1406,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1423,
											"end": 1430,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 675,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 746,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 731,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 772,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 791,
											"end": 795,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 796,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 918,
											"end": 924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 982,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 958,
											"end": 965,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 954,
											"end": 977,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 950,
											"end": 983,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 996,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 998,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1038,
											"end": 1047,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1019,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1048,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1067,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1105,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1207,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1196,
											"end": 1205,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1291,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1257,
											"end": 1291,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1289,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1291,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1257,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1323,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1310,
											"end": 1332,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1377,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1367,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1378,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1431,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1453,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1476,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1440,
											"end": 1476,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1456,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1585,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1577,
											"end": 1608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1613,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1649,
											"end": 1671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1649,
											"end": 1671,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1649,
											"end": 1671,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1672,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1695,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1623,
											"end": 1695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1675,
											"end": 1693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1783,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1798,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1762,
											"end": 1815,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1762,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1762,
											"end": 1815,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1813,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1762,
											"end": 1815,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1762,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1852,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1870,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1902,
											"end": 1904,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 1945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2157,
											"end": 2284,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2157,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2218,
											"end": 2228,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2209,
											"end": 2229,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2230,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2254,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2278,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2864,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2647,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2703,
											"end": 2835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2757,
											"end": 2767,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2752,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2748,
											"end": 2768,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2824,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2825,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2835,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2703,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3138,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3131,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3124,
											"end": 3135,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3181,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3182,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3232,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3291,
											"end": 3297,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3298,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3334,
											"end": 3337,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3318,
											"end": 3327,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3373,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3374,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3374,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3467,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3576,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3538,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3538,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3517,
											"end": 3544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3577,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3485,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3446,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3637,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3607,
											"end": 3629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3696,
											"end": 3703,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3691,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3683,
											"end": 3689,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3704,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3711,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3746,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3755,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 3761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/mocks/ERC721ReceiverMock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"retval\",\"type\":\"bytes4\"},{\"internalType\":\"enum ERC721ReceiverMock.Error\",\"name\":\"error\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/ERC721ReceiverMock.sol\":\"ERC721ReceiverMock\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/mocks/ERC721ReceiverMock.sol\":{\"keccak256\":\"0x7f1b5aab184b5861394c47f5879472d35fbd1714d58c3d3c86f35a51dd42c515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aff30d2026f1318c546f2c53d222c9cb4fdb36a057fec91542597b8820d6431\",\"dweb:/ipfs/QmYXA8QRvpoX11UzF9YL7wzvQYrPj5Lnn6F7UwNf5qsV6e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							17
						]
					},
					"id": 18,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "893:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "940:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "984:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:0"
									},
									"scope": 17,
									"src": "832:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 18,
							"src": "295:699:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 19,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 20,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:1",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "IERC165",
							"nameLocation": "431:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "817:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 22,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:1"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "860:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 25,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:1"
									},
									"scope": 29,
									"src": "790:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 30,
							"src": "421:447:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:1"
				},
				"id": 1
			},
			"contracts/mocks/ERC721ReceiverMock.sol": {
				"ast": {
					"absolutePath": "contracts/mocks/ERC721ReceiverMock.sol",
					"exportedSymbols": {
						"ERC721ReceiverMock": [
							165
						],
						"IERC165": [
							29
						],
						"IERC721Receiver": [
							17
						]
					},
					"id": 166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 166,
							"sourceUnit": 30,
							"src": "58:65:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 166,
							"sourceUnit": 18,
							"src": "124:66:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "IERC165",
										"nameLocations": [
											"223:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "223:7:2"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "223:7:2"
								},
								{
									"baseName": {
										"id": 36,
										"name": "IERC721Receiver",
										"nameLocations": [
											"232:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 17,
										"src": "232:15:2"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "232:15:2"
								}
							],
							"canonicalName": "ERC721ReceiverMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 165,
							"linearizedBaseContracts": [
								165,
								17,
								29
							],
							"name": "ERC721ReceiverMock",
							"nameLocation": "201:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721ReceiverMock.Error",
									"id": 42,
									"members": [
										{
											"id": 38,
											"name": "None",
											"nameLocation": "275:4:2",
											"nodeType": "EnumValue",
											"src": "275:4:2"
										},
										{
											"id": 39,
											"name": "RevertWithMessage",
											"nameLocation": "289:17:2",
											"nodeType": "EnumValue",
											"src": "289:17:2"
										},
										{
											"id": 40,
											"name": "RevertWithoutMessage",
											"nameLocation": "316:20:2",
											"nodeType": "EnumValue",
											"src": "316:20:2"
										},
										{
											"id": 41,
											"name": "Panic",
											"nameLocation": "346:5:2",
											"nodeType": "EnumValue",
											"src": "346:5:2"
										}
									],
									"name": "Error",
									"nameLocation": "259:5:2",
									"nodeType": "EnumDefinition",
									"src": "254:103:2"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "immutable",
									"name": "_retval",
									"nameLocation": "388:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 165,
									"src": "363:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 43,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "363:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "immutable",
									"name": "_error",
									"nameLocation": "425:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 165,
									"src": "401:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Error_$42",
										"typeString": "enum ERC721ReceiverMock.Error"
									},
									"typeName": {
										"id": 46,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 45,
											"name": "Error",
											"nameLocations": [
												"401:5:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 42,
											"src": "401:5:2"
										},
										"referencedDeclaration": 42,
										"src": "401:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Error_$42",
											"typeString": "enum ERC721ReceiverMock.Error"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b038",
									"id": 59,
									"name": "Received",
									"nameLocation": "444:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "461:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "453:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "479:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "471:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "493:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "485:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "508:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "502:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "502:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "gas",
												"nameLocation": "522:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "514:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:74:2"
									},
									"src": "438:89:2"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "573:57:2",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 67,
														"name": "_retval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "583:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 68,
														"name": "retval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "593:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "583:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "583:16:2"
											},
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "_error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "609:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$42",
															"typeString": "enum ERC721ReceiverMock.Error"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 72,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "618:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$42",
															"typeString": "enum ERC721ReceiverMock.Error"
														}
													},
													"src": "609:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$42",
														"typeString": "enum ERC721ReceiverMock.Error"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "609:14:2"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "retval",
												"nameLocation": "552:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "545:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 60,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "545:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "566:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "560:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Error_$42",
													"typeString": "enum ERC721ReceiverMock.Error"
												},
												"typeName": {
													"id": 63,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 62,
														"name": "Error",
														"nameLocations": [
															"560:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 42,
														"src": "560:5:2"
													},
													"referencedDeclaration": 42,
													"src": "560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$42",
														"typeString": "enum ERC721ReceiverMock.Error"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:28:2"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:0:2"
									},
									"scope": 165,
									"src": "533:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										28
									],
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "727:141:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 84,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "756:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 86,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "776:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$29_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$29_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 85,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "771:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "771:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$29",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "785:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "771:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "756:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 90,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "813:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 92,
																		"name": "IERC721Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "833:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$17_$",
																			"typeString": "type(contract IERC721Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$17_$",
																			"typeString": "type(contract IERC721Receiver)"
																		}
																	],
																	"id": 91,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "828:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "828:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Receiver_$17",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "850:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "828:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "813:48:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "756:105:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 83,
												"id": 97,
												"nodeType": "Return",
												"src": "737:124:2"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "645:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "703:8:2"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "670:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "663:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 77,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "663:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:20:2"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "721:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "721:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:6:2"
									},
									"scope": 165,
									"src": "636:232:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1040:397:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Error_$42",
														"typeString": "enum ERC721ReceiverMock.Error"
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "_error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1054:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$42",
															"typeString": "enum ERC721ReceiverMock.Error"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 114,
															"name": "Error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1064:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Error_$42_$",
																"typeString": "type(enum ERC721ReceiverMock.Error)"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1070:17:2",
														"memberName": "RevertWithMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "1064:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$42",
															"typeString": "enum ERC721ReceiverMock.Error"
														}
													},
													"src": "1054:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Error_$42",
															"typeString": "enum ERC721ReceiverMock.Error"
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 122,
															"name": "_error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1163:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Error_$42",
																"typeString": "enum ERC721ReceiverMock.Error"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 123,
																"name": "Error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "1173:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Error_$42_$",
																	"typeString": "type(enum ERC721ReceiverMock.Error)"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1179:20:2",
															"memberName": "RevertWithoutMessage",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 40,
															"src": "1173:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Error_$42",
																"typeString": "enum ERC721ReceiverMock.Error"
															}
														},
														"src": "1163:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_Error_$42",
																"typeString": "enum ERC721ReceiverMock.Error"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "_error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1244:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Error_$42",
																	"typeString": "enum ERC721ReceiverMock.Error"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 131,
																	"name": "Error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "1254:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Error_$42_$",
																		"typeString": "type(enum ERC721ReceiverMock.Error)"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1260:5:2",
																"memberName": "Panic",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 41,
																"src": "1254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Error_$42",
																	"typeString": "enum ERC721ReceiverMock.Error"
																}
															},
															"src": "1244:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 149,
														"nodeType": "IfStatement",
														"src": "1240:102:2",
														"trueBody": {
															"id": 148,
															"nodeType": "Block",
															"src": "1267:75:2",
															"statements": [
																{
																	"assignments": [
																		135
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 135,
																			"mutability": "mutable",
																			"name": "a",
																			"nameLocation": "1289:1:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 148,
																			"src": "1281:9:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 134,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1281:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 145,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1301:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1293:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 136,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1293:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1293:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1314:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1306:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 140,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1306:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1306:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1293:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "1281:35:2"
																},
																{
																	"expression": {
																		"id": 146,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "1330:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 147,
																	"nodeType": "ExpressionStatement",
																	"src": "1330:1:2"
																}
															]
														}
													},
													"id": 150,
													"nodeType": "IfStatement",
													"src": "1159:183:2",
													"trueBody": {
														"id": 129,
														"nodeType": "Block",
														"src": "1201:33:2",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 126,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "1215:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1215:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 128,
																"nodeType": "ExpressionStatement",
																"src": "1215:8:2"
															}
														]
													}
												},
												"id": 151,
												"nodeType": "IfStatement",
												"src": "1050:292:2",
												"trueBody": {
													"id": 121,
													"nodeType": "Block",
													"src": "1089:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "45524337323152656365697665724d6f636b3a20726576657274696e67",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1110:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0dbe0f4c3249a8de74f224ef53fef2e300747c9f34527e99ce6490bf6e04eb76",
																			"typeString": "literal_string \"ERC721ReceiverMock: reverting\""
																		},
																		"value": "ERC721ReceiverMock: reverting"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_0dbe0f4c3249a8de74f224ef53fef2e300747c9f34527e99ce6490bf6e04eb76",
																			"typeString": "literal_string \"ERC721ReceiverMock: reverting\""
																		}
																	],
																	"id": 117,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1103:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1103:39:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "1103:39:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 153,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1365:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1375:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1381:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 156,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1390:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 157,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "1396:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1396:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 152,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1356:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,uint256)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1356:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "EmitStatement",
												"src": "1351:55:2"
											},
											{
												"expression": {
													"id": 161,
													"name": "_retval",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "1423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 112,
												"id": 162,
												"nodeType": "Return",
												"src": "1416:14:2"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "884:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1014:8:2"
									},
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "918:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "910:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "944:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "936:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "966:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "958:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "996:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "983:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "983:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:106:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1032:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 110,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1032:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:8:2"
									},
									"scope": 165,
									"src": "875:562:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 166,
							"src": "192:1247:2",
							"usedErrors": [],
							"usedEvents": [
								59
							]
						}
					],
					"src": "33:1406:2"
				},
				"id": 2
			}
		}
	}
}